
<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://static.npmjs.com/styles.8ea0c2fab78a753ab019.css" />
      <title data-react-helmet="true">winston  -  npm</title>
      <meta data-react-helmet="true" http-equiv="cleartype" content="on"/><meta data-react-helmet="true" name="apple-mobile-web-app-capable" content="yes"/><meta data-react-helmet="true" name="viewport" content="width=device-width,minimum-scale=1.0,initial-scale=1,user-scalable=yes"/><meta data-react-helmet="true" property="og:image" content="https://static.npmjs.com/338e4905a2684ca96e08c7780fc68412.png"/><meta data-react-helmet="true" name="msapplication-TileColor" content="#cb3837"/><meta data-react-helmet="true" name="msapplication-TileImage" content="https://static.npmjs.com/7a7ffabbd910fc60161bc04f2cee4160.png"/><meta data-react-helmet="true" name="msapplication-config" content="https://static.npmjs.com/668aac888e52ae13cac9cfd71fabd31f.xml"/><meta data-react-helmet="true" name="theme-color" content="#cb3837"/><meta data-react-helmet="true" name="description" content="A logger for just about everything."/><meta data-react-helmet="true" property="og:description" content="A logger for just about everything."/><meta data-react-helmet="true" property="og:title" content="winston"/><meta data-react-helmet="true" property="og:url" content="https://www.npmjs.com/package/winston"/><meta data-react-helmet="true" property="og:site_name" content="npm"/><meta data-react-helmet="true" name="keywords" content="winston,logger,logging,logs,sysadmin,bunyan,pino,loglevel,tools,json,stream"/><meta data-react-helmet="true" name="twitter:card" content="summary"/><meta data-react-helmet="true" name="twitter:url" content="https://www.npmjs.com/package/winston"/><meta data-react-helmet="true" name="twitter:title" content="npm: winston"/><meta data-react-helmet="true" name="twitter:description" content="A logger for just about everything."/>
      <link data-react-helmet="true" rel="apple-touch-icon" sizes="120x120" href="https://static.npmjs.com/58a19602036db1daee0d7863c94673a4.png"/><link data-react-helmet="true" rel="apple-touch-icon" sizes="144x144" href="https://static.npmjs.com/7a7ffabbd910fc60161bc04f2cee4160.png"/><link data-react-helmet="true" rel="apple-touch-icon" sizes="152x152" href="https://static.npmjs.com/34110fd7686e2c90a487ca98e7336e99.png"/><link data-react-helmet="true" rel="apple-touch-icon" sizes="180x180" href="https://static.npmjs.com/3dc95981de4241b35cd55fe126ab6b2c.png"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/b0f1a8318363185cc2ea6a40ac23eeb2.png" sizes="32x32"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/1996fcfdf7ca81ea795f67f093d7f449.png" sizes="230x230"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/f1786e9b7cba9753ca7b9c40e8b98f67.png" sizes="96x96"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/5f6e93af5bf0f5dcdd1eecdac99f51ee.png" sizes="192x192"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/c426a1116301d1fd178c51522484127a.png" sizes="228x228"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/da3ab40fb0861d15c83854c29f5f2962.png" sizes="16x16"/><link data-react-helmet="true" rel="stylesheet" href="https://static.npmjs.com/6f0fec69a6599ac07cbe906fef441123.css"/>
      
      <script data-react-helmet="true" type="text/javascript" id="hs-script-loader" onload async="true" defer="true" src="https://js.hs-scripts.com/5326678.js"></script>
    
  </head>
  <body>
    <div id="app"><div class="_452c3ec4 d68c66a8"><ul class="cf325dbd list ma0 pa0 tr z-999" aria-live="polite"></ul><div class="flex flex-column vh-100"><header class="_755f5b0f bg-white z-2 bb b--black-20"><div class="a6ff2de1"><a class="_1c6d86d1" href="https://github.blog/2020-04-15-npm-has-joined-github/"><svg class="_93bbf0b4" viewBox="0 0 780 250"><path fill="white" d="M240,250h100v-50h100V0H240V250z M340,50h50v100h-50V50z M480,0v200h100V50h50v150h50V50h50v150h50V0H480z M0,200h100V50h50v150h50V0H0V200z"></path></svg><span><strong>npm</strong> is now a part of <strong>GitHub</strong></span><svg class="_5532dff2" width="33px" height="33px" viewBox="0 0 33 33" version="1.1" role="img" xmlns="http://www.w3.org/2000/svg"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(-136.000000, -331.000000)"><path fill="white" d="M152.608,331.455 C143.614,331.455 136.32,338.748 136.32,347.745 C136.32,354.942 140.987,361.047 147.46,363.201 C148.275,363.351 148.572,362.848 148.572,362.416 C148.572,362.029 148.558,361.005 148.55,359.646 C144.019,360.63 143.063,357.462 143.063,357.462 C142.322,355.58 141.254,355.079 141.254,355.079 C139.775,354.069 141.366,354.089 141.366,354.089 C143.001,354.204 143.861,355.768 143.861,355.768 C145.314,358.257 147.674,357.538 148.602,357.121 C148.75,356.069 149.171,355.351 149.636,354.944 C146.019,354.533 142.216,353.135 142.216,346.893 C142.216,345.115 142.851,343.66 143.893,342.522 C143.725,342.11 143.166,340.453 144.053,338.211 C144.053,338.211 145.42,337.773 148.532,339.881 C149.831,339.519 151.225,339.339 152.61,339.332 C153.994,339.339 155.387,339.519 156.688,339.881 C159.798,337.773 161.163,338.211 161.163,338.211 C162.052,340.453 161.493,342.11 161.326,342.522 C162.37,343.66 163,345.115 163,346.893 C163,353.151 159.191,354.528 155.563,354.931 C156.147,355.434 156.668,356.428 156.668,357.947 C156.668,360.125 156.648,361.882 156.648,362.416 C156.648,362.852 156.942,363.359 157.768,363.2 C164.236,361.041 168.899,354.94 168.899,347.745 C168.899,338.748 161.605,331.455 152.608,331.455"></path></g></g></svg></a></div><div></div><div class="e7070742 pv3-ns ph1-ns bg-white"><div class="ef7c6e62 center mw9 border-box ph4-ns ph3 flex"><span class="_0edb515f pr3 dn dib-ns link lh-title dim b--white-30">❤</span><span class="_99e3854f f6 fw4 link dn dib-ns tl dim mr4 nowrap">Naturally Pacifist Marsupials</span><nav class="_4a5f2a79 db w-100 w-auto-ns tr truncate"><ul class="list pl0"><li class="dib npme-hidden"><a class="c6c55db4 link f6-ns f7 fw5 pr2 pl2" id="nav-products-link" href="/products"><span class="dim">Products</span></a><ul class="_3f98ab29 mt2 pa0 bg-white br2 shadow-1 tl"><li><a id="nav-pro-link" class="b8f9b0bd link f6-ns f7 fw5 db ph3 pv2 nowrap dim" tabindex="0" href="/products/pro">Pro</a></li><li><a id="nav-teams-link" class="b8f9b0bd link f6-ns f7 fw5 db ph3 pv2 nowrap dim" tabindex="0" href="/products/teams">Teams</a></li><li><a id="nav-enterprise-link" class="b8f9b0bd link f6-ns f7 fw5 db ph3 pv2 nowrap dim" tabindex="0" href="/products/enterprise">Enterprise</a></li></ul></li><li class="dib npme-hidden"><a class="c6c55db4 link f6-ns f7 fw5 dim pr2 pl2" id="nav-pricing-link" href="/products">Pricing</a></li><li class="dib"><a class="c6c55db4 link f6-ns f7 fw5 dim pr2 pl2" id="nav-docs-link" href="https://docs.npmjs.com">Documentation</a></li><li class="dib npme-hidden"><a class="c6c55db4 link f6-ns f7 fw5 dim pr2 pl2" id="nav-resources-link" href="https://npm.community">Community</a></li></ul></nav></div></div><div class="_4ea0e50d bt b--black-10"><div class="c5b9953b center mw9 flex flex-wrap ph4-ns border-box"><h1 class="_657f443d">npm</h1><div class="af43375d mt3 db mr4-ns pb3 pb0-ns flex-auto 2-ns ph3 ph0-ns"><a href="/"><svg viewBox="0 0 780 250"><path fill="#231F20" d="M240,250h100v-50h100V0H240V250z M340,50h50v100h-50V50z M480,0v200h100V50h50v150h50V50h50v150h50V0H480z M0,200h100V50h50v150h50V0H0V200z"></path></svg></a></div><div class="_581ebd89 relative flex-auto w-100 w-50-ns pv2-ns order-1-ns order-2"><form id="search" method="GET" action="/search" class="_13c93d41 relative flex bg-transparent ph3 ph2 pv2 ph0-ns pv0-ns bt b--black-10 bn-ns"><div class="e82b10fd relative flex-grow-1"><div class="_2f299eeb nowrap flex"><span class="_705cdf4f db fl pl3 pr1"><svg width="15px" height="15px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" aria-hidden="true"><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="Artboard-1" stroke="#777777" stroke-width="1.3"><g id="Group"><path d="M13.4044,7.0274 C13.4044,10.5494 10.5494,13.4044 7.0274,13.4044 C3.5054,13.4044 0.6504,10.5494 0.6504,7.0274 C0.6504,3.5054 3.5054,0.6504 7.0274,0.6504 C10.5494,0.6504 13.4044,3.5054 13.4044,7.0274 Z" id="Stroke-3"></path><path d="M11.4913,11.4913 L17.8683,17.8683" id="Stroke-7"></path></g></g></g></svg></span><input type="search" name="q" hotkeys="[object Object]" placeholder="Search packages" autoComplete="off" aria-label="Search packages" inputref="[object Object]" class="_390acbc5 f5 fw3 black relative" value="" element="input"/></div></div><button type="submit" class="_0da775bb bn pv2 ph4 f6 white pointer">Search</button><input type="hidden" name="csrftoken" value="ZgCIP409WJ7-gFYu0cgYsYZvXN4nNLjy3RXuat6-3GP"/></form></div><div class="_6f31c82b ml3 mt2 mt0-ns pv2-ns flex-auto tr nowrap relative pointer fw6 order-1 order-2-ns"><div class="_1066d9e7 flex items-center self-center pl3"><a href="/signup" class="_9752c8b3 pa2 lh-copy br2 f6 no-underline fw5 black dim ph3 mr3">Sign Up</a><a class="_352269a0 pa1 lh-copy br2 f6 no-underline fw5 black dim" href="/login">Sign In</a></div></div></div></div></header><main><div data-promotion-id="Open RFC discussions" data-promotion-spot="below-header"><div><div class="_98714ae6"><span rel="npm:upsellbox:text" class="d321523e">Learn about our RFC process, Open RFC meetings &amp; more.</span><span class="c7d083b3"><a href="https://github.com/npm/rfcs">Join in the discussion!<!-- --> »</a></span></div></div></div><div class="_36ae70e9 flex flex-row flex-wrap pb5 ph3-l mw-100 mt4-ns mt1 center-ns mh1" id="top"><div class="w-100 ph0-l ph3 ph4-m"><h2 class="cd6ce1fd flex flex-column w-100 fw6 mt3 black dib ma0 tracked-tight no-underline hover-black f3-ns"><span class="_50685029 truncate flex-auto" title="winston">winston</span></h2><span class="_76473bea f6 dib ph0 pv2 mb2-ns black-80 nowrap f5 fw4 lh-copy">3.2.1<!-- --> • </span><span class="_813b53b2 _76473bea f6 dib ph0 pv2 mb2-ns black-80 nowrap f5 fw4 lh-copy green">Public</span><span class="_76473bea f6 dib ph0 pv2 mb2-ns black-80 nowrap f5 fw4 lh-copy"> • Published <time dateTime="2019-01-29T19:04:11.622Z" title="2019-1-29 19:04:11">a year ago</time></span></div><ul class="cfb2a888 flex flex-column flex-row-l w-100 ma0 pa0 mr2 mr0-l list"><li class="_8055e658 f5 fw5 tc pointer d9f99065 ac5f7ef8 f4 fw6 black-50"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=readme"><span><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="file-alt" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path fill="currentColor" d="M288 248v28c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-28c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm-12 72H108c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-28c0-6.6-5.4-12-12-12zm108-188.1V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h204.1C264.8 0 277 5.1 286 14.1L369.9 98c9 8.9 14.1 21.2 14.1 33.9zm-128-80V128h76.1L256 51.9zM336 464V176H232c-13.3 0-24-10.7-24-24V48H48v416h288z"></path></svg> Readme</span></a></li><li class="_8055e658 f5 fw5 tc pointer undefined"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=explore"><span><span><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="file-archive" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path fill="currentColor" d="M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zM128.4 336c-17.9 0-32.4 12.1-32.4 27 0 15 14.6 27 32.5 27s32.4-12.1 32.4-27-14.6-27-32.5-27zM224 136V0h-63.6v32h-32V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM95.9 32h32v32h-32zm32.3 384c-33.2 0-58-30.4-51.4-62.9L96.4 256v-32h32v-32h-32v-32h32v-32h-32V96h32V64h32v32h-32v32h32v32h-32v32h32v32h-32v32h22.1c5.7 0 10.7 4.1 11.8 9.7l17.3 87.7c6.4 32.4-18.4 62.6-51.4 62.6z"></path></svg> Explore</span><span class="_22665c13">BETA</span></span></a></li><li class="_8055e658 f5 fw5 tc pointer c1f85151"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=dependencies"><span><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="cube" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z"></path></svg><span class="c3fc8940">9</span>Dependencies</span></a></li><li class="_8055e658 f5 fw5 tc pointer _7cec0316"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=dependents"><span><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="cubes" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z"></path></svg><span class="c3fc8940">12,171</span>Dependents</span></a></li><li class="_8055e658 f5 fw5 tc pointer b4fcfd19"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=versions"><span><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="tags" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512"><path fill="currentColor" d="M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z"></path></svg><span class="c3fc8940">59</span>Versions</span></a></li></ul><div class="_6620a4fd mw8-l mw-100 w-100 w-two-thirds-l ph3-m pt2 pl0-ns pl2 order-1-m order-0-ns order-1 order-2-m"><section class="e22ba268 ph2 ph0-ns ml0-ns mr3-ns black-80"><div class=""><article> <div class="_6d9832ac pr4-ns pl0-ns ph1-m pr3-m pr2  markdown" id="readme"><h1 class="package-name-redundant"><a id="user-content-winston" class="deep-link" href="#winston" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>winston</h1>
<p class="package-description-redundant">A logger for just about everything.</p>
<p><a href="https://www.npmjs.com/package/winston" rel="nofollow"><img src="https://img.shields.io/npm/v/winston.svg?style=flat-square" alt="Version npm" /></a><a href="https://npmcharts.com/compare/winston?minimal=true" rel="nofollow"><img src="https://img.shields.io/npm/dm/winston.svg?style=flat-square" alt="npm Downloads" /></a><a href="https://travis-ci.org/winstonjs/winston" rel="nofollow"><img src="https://img.shields.io/travis/winstonjs/winston/master.svg?style=flat-square" alt="Build Status" /></a><a href="https://david-dm.org/winstonjs/winston" rel="nofollow"><img src="https://img.shields.io/david/winstonjs/winston.svg?style=flat-square" alt="Dependencies" /></a></p>
<p><a href="https://nodei.co/npm/winston/" rel="nofollow"><img src="https://nodei.co/npm/winston.png?downloads=true&amp;downloadRank=true" alt="NPM" /></a></p>
<p><a href="https://gitter.im/winstonjs/winston?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" rel="nofollow"><img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/winstonjs/winston" /></a></p>
<h2><a id="user-content-winston320" class="deep-link" href="#winston320" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>winston@3.2.0</h2>
<p>See the <a href="https://github.com/winstonjs/winston/blob/HEAD/UPGRADE-3.0.md" rel="nofollow">Upgrade Guide</a> for more information. Bug reports and
PRs welcome!</p>
<h2><a id="user-content-looking-for-winston2x-documentation" class="deep-link" href="#looking-for-winston2x-documentation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Looking for <code>winston@2.x</code> documentation?</h2>
<p>Please note that the documentation below is for <code>winston@3</code>.
<a href="https://github.com/winstonjs/winston/tree/2.x" rel="nofollow">Read the <code>winston@2.x</code> documentation</a>.</p>
<h2><a id="user-content-motivation" class="deep-link" href="#motivation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Motivation</h2>
<p><code>winston</code> is designed to be a simple and universal logging library with
support for multiple transports. A transport is essentially a storage device
for your logs. Each <code>winston</code> logger can have multiple transports (see:
<a href="#transports" rel="nofollow">Transports</a>) configured at different levels (see: <a href="#logging-levels" rel="nofollow">Logging levels</a>). For
example, one may want error logs to be stored in a persistent remote location
(like a database), but all logs output to the console or a local file.</p>
<p><code>winston</code> aims to decouple parts of the logging process to make it more
flexible and extensible. Attention is given to supporting flexibility in log
formatting (see: <a href="#formats" rel="nofollow">Formats</a>) &amp; levels (see: <a href="#using-custom-logging-levels" rel="nofollow">Using custom logging levels</a>), and
ensuring those APIs decoupled from the implementation of transport logging
(i.e. how the logs are stored / indexed, see: <a href="#adding-custom-transports" rel="nofollow">Adding Custom Transports</a>) to
the API that they exposed to the programmer.</p>
<h2><a id="user-content-quick-start" class="deep-link" href="#quick-start" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick Start</h2>
<p>TL;DR? Check out the <a href="https://github.com/winstonjs/winston/blob/master/examples/quick-start.js" rel="nofollow">quick start example</a> in <code>./examples/</code>.
There are a number of other examples in <a href="https://github.com/winstonjs/winston/tree/master/examples" rel="nofollow"><code>./examples/*.js</code></a>.
Don't see an example you think should be there? Submit a pull request
to add it!</p>
<h2><a id="user-content-usage" class="deep-link" href="#usage" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>The recommended way to use <code>winston</code> is to create your own logger. The
simplest way to do this is using <code>winston.createLogger</code>:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>json</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  defaultMeta</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> service</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>user-service</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> - Write to all logs with level `info` and below to `combined.log` </span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> - Write all logs error (and below) to `error.log`.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> If we're not in production then log to the `console` with the format:</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> `${info.level}: ${info.message} JSON.stringify({ ...rest }) `</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> </span></span></span></div><div class="line"><span class="source js"><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="support variable js"><span>process</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>env</span></span><span class="meta delimiter period js"><span>.</span></span><span class="constant other js"><span>NODE_ENV</span></span><span> </span><span class="keyword operator comparison js"><span>!==</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>production</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>simple</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre><p>You may also log directly via the default logger exposed by
<code>require('winston')</code>, but this merely intended to be a convenient shared
logger to use throughout your application if you so choose.</p>
<h2><a id="user-content-table-of-contents" class="deep-link" href="#table-of-contents" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Table of contents</h2>
<ul>
<li><a href="#motivation" rel="nofollow">Motivation</a></li>
<li><a href="#quick-start" rel="nofollow">Quick Start</a></li>
<li><a href="#usage" rel="nofollow">Usage</a></li>
<li><a href="#table-of-contents" rel="nofollow">Table of Contents</a></li>
<li><a href="#logging" rel="nofollow">Logging</a>
<ul>
<li><a href="#creating-your-own-logger" rel="nofollow">Creating your logger</a></li>
<li><a href="#streams-objectmode-and-info-objects" rel="nofollow">Streams, <code>objectMode</code>, and <code>info</code> objects</a></li>
</ul>
</li>
<li><a href="#formats" rel="nofollow">Formats</a>
<ul>
<li><a href="#combining-formats" rel="nofollow">Combining formats</a></li>
<li><a href="#string-interpolation" rel="nofollow">String interpolation</a></li>
<li><a href="#filtering-info-objects" rel="nofollow">Filtering <code>info</code> Objects</a></li>
<li><a href="#creating-custom-formats" rel="nofollow">Creating custom formats</a></li>
</ul>
</li>
<li><a href="#logging-levels" rel="nofollow">Logging levels</a>
<ul>
<li><a href="#using-logging-levels" rel="nofollow">Using logging levels</a></li>
<li><a href="#using-custom-logging-levels" rel="nofollow">Using custom logging levels</a></li>
</ul>
</li>
<li><a href="#transports" rel="nofollow">Transports</a>
<ul>
<li><a href="#multiple-transports-of-the-same-type" rel="nofollow">Multiple transports of the same type</a></li>
<li><a href="#adding-custom-transports" rel="nofollow">Adding Custom Transports</a></li>
</ul>
</li>
<li><a href="#exceptions" rel="nofollow">Exceptions</a>
<ul>
<li><a href="#handling-uncaught-exceptions-with-winston" rel="nofollow">Handling Uncaught Exceptions with winston</a></li>
<li><a href="#to-exit-or-not-to-exit" rel="nofollow">To Exit or Not to Exit</a></li>
</ul>
</li>
<li><a href="#profiling" rel="nofollow">Profiling</a></li>
<li><a href="#streaming-logs" rel="nofollow">Streaming Logs</a></li>
<li><a href="#querying-logs" rel="nofollow">Querying Logs</a></li>
<li><a href="#further-reading" rel="nofollow">Further Reading</a>
<ul>
<li><a href="#using-the-default-logger" rel="nofollow">Using the default logger</a></li>
<li><a href="#awaiting-logs-to-be-written-in-winston" rel="nofollow">Awaiting logs to be written in <code>winston</code></a></li>
<li><a href="#working-with-multiple-loggers-in-winston" rel="nofollow">Working with multiple Loggers in <code>winston</code></a></li>
</ul>
</li>
<li><a href="#installation" rel="nofollow">Installation</a></li>
<li><a href="#run-tests" rel="nofollow">Run Tests</a></li>
</ul>
<h2><a id="user-content-logging" class="deep-link" href="#logging" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logging</h2>
<p>Logging levels in <code>winston</code> conform to the severity ordering specified by</p>
<p>from most important to least important._</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>levels</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  error</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  warn</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  info</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  verbose</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  debug</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>4</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  silly</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>5</span></span><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h3><a id="user-content-creating-your-own-logger" class="deep-link" href="#creating-your-own-logger" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Creating your own Logger</h3>
<p>You get started by creating a logger using <code>winston.createLogger</code>:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>A logger accepts the following parameters:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>level</code></td>
<td><code>'info'</code></td>
<td>Log only if <a href="#streams-objectmode-and-info-objects" rel="nofollow"><code>info.level</code></a> less than or equal to this level</td>
</tr>
<tr>
<td><code>levels</code></td>
<td><code>winston.config.npm.levels</code></td>
<td>Levels (and colors) representing log priorities</td>
</tr>
<tr>
<td><code>format</code></td>
<td><code>winston.format.json</code></td>
<td>Formatting for <code>info</code> messages  (see: <a href="#formats" rel="nofollow">Formats</a>)</td>
</tr>
<tr>
<td><code>transports</code></td>
<td><code>[]</code> <em>(No transports)</em></td>
<td>Set of logging targets for <code>info</code> messages</td>
</tr>
<tr>
<td><code>exitOnError</code></td>
<td><code>true</code></td>
<td>If false, handled exceptions will not cause <code>process.exit</code></td>
</tr>
<tr>
<td><code>silent</code></td>
<td><code>false</code></td>
<td>If true, all logs are suppressed</td>
</tr>
</tbody>
</table>
<p>The levels provided to <code>createLogger</code> will be defined as convenience methods
on the <code>logger</code> returned.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Logging</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Hello distributed log files!</span><span class="punctuation definition string end js"><span>'</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Hello again distributed logs</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>You can add or remove transports from the <code>logger</code> once it has been provided
to you from <code>winston.createLogger</code>:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>files</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>console</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>logger</span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>clear</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span>          </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Remove all transports</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="entity name type object console js"><span>console</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>     </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Add console transport</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>files</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>       </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Add file transport</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>remove</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="entity name type object console js"><span>console</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Remove console transport</span></span></span></div></pre><p>You can also wholesale reconfigure a <code>winston.Logger</code> instance using the
<code>configure</code> method:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Replaces the previous transports with those in the</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> new configuration wholesale.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>DailyRotateFile</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston-daily-rotate-file</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>configure</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>verbose</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>DailyRotateFile</span></span></span><span class="meta brace round js"><span>(</span></span><span>opts</span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h3><a id="user-content-creating-child-loggers" class="deep-link" href="#creating-child-loggers" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Creating child loggers</h3>
<p>You can create child loggers from existing loggers to pass metadata overrides:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>childLogger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>child</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> requestId</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>451</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h3><a id="user-content-streams-objectmode--and-info-objects" class="deep-link" href="#streams-objectmode--and-info-objects" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Streams, <code>objectMode</code>, and <code>info</code> objects</h3>
<p>In <code>winston</code>, both <code>Logger</code> and <code>Transport</code> instances are treated as
<a href="https://nodejs.org/api/stream.html#stream_object_mode" rel="nofollow"><code>objectMode</code></a>
streams that accept an <code>info</code> object.</p>
<p>The <code>info</code> parameter provided to a given format represents a single log
message. The object itself is mutable. Every <code>info</code> must have at least the
<code>level</code> and <code>message</code> properties:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>info</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>                 </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Level of the logging message  </span></span></span></div><div class="line"><span class="source js"><span>  message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Hey! Log something?</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Descriptive message being logged.</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>Properties <strong>besides level and message</strong> are considered as &quot;<code>meta</code>&quot;. i.e.:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>level</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>message</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="constant other js"><span>meta</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> info</span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>Several of the formats in <code>logform</code> itself add additional properties:</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Format added by</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>splat</code></td>
<td><code>splat()</code></td>
<td>String interpolation splat for <code>%d %s</code>-style messages.</td>
</tr>
<tr>
<td><code>timestamp</code></td>
<td><code>timestamp()</code></td>
<td>timestamp the message was received.</td>
</tr>
<tr>
<td><code>label</code></td>
<td><code>label()</code></td>
<td>Custom label associated with each message.</td>
</tr>
<tr>
<td><code>ms</code></td>
<td><code>ms()</code></td>
<td>Number of milliseconds since the previous log message.</td>
</tr>
</tbody>
</table>
<p>As a consumer you may add whatever properties you wish – <em>internal state is
maintained by <code>Symbol</code> properties:</em></p>
<ul>
<li><code>Symbol.for('level')</code> <em><strong>(READ-ONLY)</strong>:</em> equal to <code>level</code> property.
<strong>Is treated as immutable by all code.</strong></li>
<li><code>Symbol.for('message'):</code> complete string message set by &quot;finalizing formats&quot;:
<ul>
<li><code>json</code></li>
<li><code>logstash</code></li>
<li><code>printf</code></li>
<li><code>prettyPrint</code></li>
<li><code>simple</code></li>
</ul>
</li>
<li><code>Symbol.for('splat')</code>: additional string interpolation arguments. <em>Used
exclusively by <code>splat()</code> format.</em></li>
</ul>
<p>These Symbols are stored in another package: <code>triple-beam</code> so that all
consumers of <code>logform</code> can have the same Symbol reference. i.e.:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>LEVEL</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>MESSAGE</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>SPLAT</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>triple-beam</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="constant other js"><span>LEVEL</span></span><span> </span><span class="keyword operator comparison js"><span>===</span></span><span> </span><span class="support class js"><span>Symbol</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>for</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>level</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> true</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="constant other js"><span>MESSAGE</span></span><span> </span><span class="keyword operator comparison js"><span>===</span></span><span> </span><span class="support class js"><span>Symbol</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>for</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>message</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> true</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="constant other js"><span>SPLAT</span></span><span> </span><span class="keyword operator comparison js"><span>===</span></span><span> </span><span class="support class js"><span>Symbol</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>for</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>splat</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> true</span></span></span></div></pre><blockquote>
<p><strong>NOTE:</strong> any <code>{ message }</code> property in a <code>meta</code> object provided will
automatically be concatenated to any <code>msg</code> already provided: For
example the below will concatenate 'world' onto 'hello':</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>hello</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>world</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>hello</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>world</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></blockquote>
<h2><a id="user-content-formats" class="deep-link" href="#formats" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Formats</h2>
<p>Formats in <code>winston</code> can be accessed from <code>winston.format</code>. They are
implemented in <a href="https://github.com/winstonjs/logform" rel="nofollow"><code>logform</code></a>, a separate
module from <code>winston</code>. This allows flexibility when writing your own transports
in case you wish to include a default format with your transport.</p>
<p>In modern versions of <code>node</code> template strings are very performant and are the
recommended way for doing most end-user formatting. If you want to bespoke
format your logs, <code>winston.format.printf</code> is for you:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>createLogger</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>format</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>transports</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>combine</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>timestamp</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>label</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>printf</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> format</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>myFormat</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>printf</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> level</span><span class="meta delimiter object comma js"><span>,</span></span><span> message</span><span class="meta delimiter object comma js"><span>,</span></span><span> label</span><span class="meta delimiter object comma js"><span>,</span></span><span> timestamp </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="keyword control js"><span>return</span></span><span> </span><span class="string quoted template js"><span class="punctuation definition string begin js"><span>`</span></span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span>timestamp</span><span class="punctuation section embedded js"><span>}</span></span></span><span> [</span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span>label</span><span class="punctuation section embedded js"><span>}</span></span></span><span>] </span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span>level</span><span class="punctuation section embedded js"><span>}</span></span></span><span>: </span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span>message</span><span class="punctuation section embedded js"><span>}</span></span></span><span class="punctuation definition string end js"><span>`</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>label</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> label</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>right meow!</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>timestamp</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    myFormat</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>To see what built-in formats are available and learn more about creating your
own custom logging formats, see <a href="https://github.com/winstonjs/logform#readme" rel="nofollow"><code>logform</code></a>.</p>
<h3><a id="user-content-combining-formats" class="deep-link" href="#combining-formats" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Combining formats</h3>
<p>Any number of formats may be combined into a single format using
<code>format.combine</code>. Since <code>format.combine</code> takes no <code>opts</code>, as a convenience it
returns pre-created instance of the combined format.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>createLogger</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>format</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>transports</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>combine</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>timestamp</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>label</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>prettyPrint</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> format</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>label</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> label</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>right meow!</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>timestamp</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>prettyPrint</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>What time is the testing at?</span><span class="punctuation definition string end js"><span>'</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Outputs:</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> { level: 'info',</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   message: 'What time is the testing at?',</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   label: 'right meow!',</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   timestamp: '2017-09-30T03:57:26.875Z' }</span></span></span></div></pre><h3><a id="user-content-string-interpolation" class="deep-link" href="#string-interpolation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>String interpolation</h3>
<p>The <code>log</code> method provides the string interpolation using <a href="https://nodejs.org/dist/latest/docs/api/util.html#util_util_format_format_args" rel="nofollow">util.format</a>. <strong>It
must be enabled using <code>format.splat()</code>.</strong></p>
<p>Below is an example that defines a format with string interpolation of
messages using <code>format.splat</code> and then serializes the entire <code>info</code> message
using <code>format.simple</code>.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>createLogger</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>format</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>transports</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta js"><span class="meta js"><span>    </span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>splat</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta js"><span class="meta js"><span>    </span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>simple</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta js"><span class="meta js"><span>  </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> info: test message my string {}</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>test message %s</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>my string</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> info: test message 123 {}</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>test message %d</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>123</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> info: test message first second {number: 123}</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>test message %s, %s</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>first</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>second</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> number</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>123</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h3><a id="user-content-filtering-info-objects" class="deep-link" href="#filtering-info-objects" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Filtering <code>info</code> Objects</h3>
<p>If you wish to filter out a given <code>info</code> Object completely when logging then
simply return a falsey value.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>createLogger</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>format</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>transports</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Ignore log messages if they have { private: true }</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>ignorePrivate</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>format</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>info</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>opts</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="variable other object js"><span>info</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>private</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="keyword control js"><span>return</span></span><span> info</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>ignorePrivate</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta js"><span class="meta js"><span>    </span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>json</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta js"><span class="meta js"><span>  </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Outputs: {&quot;level&quot;:&quot;error&quot;,&quot;message&quot;:&quot;Public error to share&quot;}</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Public error to share</span><span class="punctuation definition string end js"><span>'</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Messages with { private: true } will not be written when logged.</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  private</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>This is super secret - hide it.</span><span class="punctuation definition string end js"><span>'</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>Use of <code>format.combine</code> will respect any falsey values return and stop
evaluation of later formats in the series. For example:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>format</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>combine</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>timestamp</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>label</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> format</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>willNeverThrow</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta function-call js"><span class="entity name function js"><span>format</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>info</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Ignores everything</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta function-call js"><span class="entity name function js"><span>format</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>info</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>throw</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>Error</span></span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Never reached</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h3><a id="user-content-creating-custom-formats" class="deep-link" href="#creating-custom-formats" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Creating custom formats</h3>
<p>Formats are prototypal objects (i.e. class instances) that define a single
method: <code>transform(info, opts)</code> and return the mutated <code>info</code>:</p>
<ul>
<li><code>info</code>: an object representing the log message.</li>
<li><code>opts</code>: setting specific to the current instance of the format.</li>
</ul>
<p>They are expected to return one of two things:</p>
<ul>
<li><strong>An <code>info</code> Object</strong> representing the modified <code>info</code> argument. Object
references need not be preserved if immutability is preferred. All current
built-in formats consider <code>info</code> mutable, but [immutablejs] is being
considered for future releases.</li>
<li><strong>A falsey value</strong> indicating that the <code>info</code> argument should be ignored by the
caller. (See: <a href="#filtering-info-objects" rel="nofollow">Filtering <code>info</code> Objects</a>) below.</li>
</ul>
<p><code>winston.format</code> is designed to be as simple as possible. To define a new
format simple pass it a <code>transform(info, opts)</code> function to get a new
<code>Format</code>.</p>
<p>The named <code>Format</code> returned can be used to create as many copies of the given
<code>Format</code> as desired:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>format</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>volume</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>format</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>info</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>opts</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="variable other object js"><span>opts</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>yell</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="variable other object js"><span>info</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>message</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>info</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>message</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toUpperCase</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword control js"><span>else</span></span><span> </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="variable other object js"><span>opts</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>whisper</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="variable other object js"><span>info</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>message</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>info</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>message</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toLowerCase</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="keyword control js"><span>return</span></span><span> info</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> `volume` is now a function that returns instances of the format.</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>scream</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>volume</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> yell</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="entity name type object console js"><span>console</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>dir</span></span><span class="meta brace round js"><span>(</span></span><span class="variable other object js"><span>scream</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>transform</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted template js"><span class="punctuation definition string begin js"><span>`</span></span><span>sorry for making you YELL in your head!</span><span class="punctuation definition string end js"><span>`</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other object js"><span>scream</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>options</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> {</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   level: 'info'</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   message: 'SORRY FOR MAKING YOU YELL IN YOUR HEAD!'</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> }</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> `volume` can be used multiple times to create different formats.</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>whisper</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>volume</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> whisper</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="entity name type object console js"><span>console</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>dir</span></span><span class="meta brace round js"><span>(</span></span><span class="variable other object js"><span>whisper</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>transform</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted template js"><span class="punctuation definition string begin js"><span>`</span></span><span>WHY ARE THEY MAKING US YELL SO MUCH!</span><span class="punctuation definition string end js"><span>`</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other object js"><span>whisper</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>options</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> {</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   level: 'info'</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   message: 'why are they making us yell so much!'</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> }</span></span></span></div></pre><h2><a id="user-content-logging-levels" class="deep-link" href="#logging-levels" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Logging Levels</h2>
<p>Logging levels in <code>winston</code> conform to the severity ordering specified by</p>
<p>from most important to least important._</p>
<p>Each <code>level</code> is given a specific integer priority. The higher the priority the
more important the message is considered to be, and the lower the
corresponding integer priority.  For example, as specified exactly in RFC5424
the <code>syslog</code> levels are prioritized from 0 to 7 (highest to lowest).</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  emerg</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  alert</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  crit</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  error</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  warning</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>4</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  notice</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>5</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  info</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>6</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  debug</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>7</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>Similarly, <code>npm</code> logging levels are prioritized from 0 to 5 (highest to
lowest):</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  error</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  warn</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  info</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  verbose</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  debug</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>4</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span></span></div><div class="line"><span class="source js"><span>  silly</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>5</span></span><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre><p>If you do not explicitly define the levels that <code>winston</code> should use, the
<code>npm</code> levels above will be used.</p>
<h3><a id="user-content-using-logging-levels" class="deep-link" href="#using-logging-levels" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using Logging Levels</h3>
<p>Setting the level for your logging message can be accomplished in one of two
ways. You can pass a string representing the logging level to the log() method
or use the level specified methods defined on every winston Logger.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Any logger instance</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>silly</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>debug</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>verbose</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>warn</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>warn</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>error</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Default logger</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>127.0.0.1 - there's no place like home</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p><code>winston</code> allows you to define a <code>level</code> property on each transport which
specifies the <strong>maximum</strong> level of messages that a transport should log. For
example, using the <code>syslog</code> levels you could log only <code>error</code> messages to the
console and everything <code>info</code> and below to a file (which includes <code>error</code>
messages):</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  levels</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>config</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>syslog</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>levels</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>      filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>      level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>You may also dynamically change the log level of a transport:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>transports</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  console</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>warn</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  file</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="variable other object js"><span>transports</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>console</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="variable other object js"><span>transports</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>file</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Will not be logged in either transport!</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>transports</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>console</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>level</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>transports</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>file</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>level</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Will be logged in both transports!</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p><code>winston</code> supports customizable logging levels, defaulting to npm style
logging levels. Levels must be specified at the time of creating your logger.</p>
<h3><a id="user-content-using-custom-logging-levels" class="deep-link" href="#using-custom-logging-levels" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using Custom Logging Levels</h3>
<p>In addition to the predefined <code>npm</code>, <code>syslog</code>, and <code>cli</code> levels available in
<code>winston</code>, you can also choose to define your own:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>myCustomLevels</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  levels</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    baz</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    foobar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  colors</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>blue</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>green</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    baz</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>yellow</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    foobar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>red</span><span class="punctuation definition string end js"><span>'</span></span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>customLevelLogger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  levels</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>myCustomLevels</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>levels</span></span><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>customLevelLogger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>foobar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>some foobar level-ed message</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>Although there is slight repetition in this data structure, it enables simple
encapsulation if you do not want to have colors. If you do wish to have
colors, in addition to passing the levels to the Logger itself, you must make
winston aware of them:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>addColors</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable other object js"><span>myCustomLevels</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>colors</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>This enables loggers using the <code>colorize</code> formatter to appropriately color and style
the output of custom levels.</p>
<p>Additionally, you can also change background color and font style.
For example,</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span>baz</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>italic yellow</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>foobar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>bold red cyanBG</span><span class="punctuation definition string end js"><span>'</span></span></span></span></div></pre><p>Possible options are below.</p>
<ul>
<li>
<p>Font styles: <code>bold</code>, <code>dim</code>, <code>italic</code>, <code>underline</code>, <code>inverse</code>, <code>hidden</code>,
<code>strikethrough</code>.</p>
</li>
<li>
<p>Font foreground colors: <code>black</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>blue</code>, <code>magenta</code>,
<code>cyan</code>, <code>white</code>, <code>gray</code>, <code>grey</code>.</p>
</li>
<li>
<p>Background colors: <code>blackBG</code>, <code>redBG</code>, <code>greenBG</code>, <code>yellowBG</code>, <code>blueBG</code>
<code>magentaBG</code>, <code>cyanBG</code>, <code>whiteBG</code></p>
</li>
</ul>
<h3><a id="user-content-colorizing-standard-logging-levels" class="deep-link" href="#colorizing-standard-logging-levels" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Colorizing Standard logging levels</h3>
<p>To colorize the standard logging level add</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>colorize</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>format</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>json</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p>where <code>winston.format.json()</code> is whatever other formatter you want to use.  The <code>colorize</code> formatter must come before any formatters adding text you wish to color.</p>
<h2><a id="user-content-transports" class="deep-link" href="#transports" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Transports</h2>
<p>There are several <a href="https://github.com/winstonjs/winston/blob/HEAD/docs/transports.md#winston-core" rel="nofollow">core transports</a> included in  <code>winston</code>, which leverage the
built-in networking and file I/O offered by Node.js core. In addition, there
are <a href="https://github.com/winstonjs/winston/blob/HEAD/docs/transports.md#additional-transports" rel="nofollow">additional transports</a> written by members of the community.</p>
<h2><a id="user-content-multiple-transports-of-the-same-type" class="deep-link" href="#multiple-transports-of-the-same-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Multiple transports of the same type</h2>
<p>It is possible to use multiple transports of the same type e.g.
<code>winston.transports.File</code> when you construct the transport.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>      filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>      level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>      filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>errors.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>      level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>If you later want to remove one of these transports you can do so by using the
transport itself. e.g.:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>combinedLogs</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>logger</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>transports</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>find</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>transport</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="keyword control js"><span>return</span></span><span> </span><span class="variable other object js"><span>transport</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>filename</span></span><span> </span><span class="keyword operator comparison js"><span>===</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>remove</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>combinedLogs</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h2><a id="user-content-adding-custom-transports" class="deep-link" href="#adding-custom-transports" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Adding Custom Transports</h2>
<p>Adding a custom transport is easy. All you need to do is accept any options
you need, implement a log() method, and consume it with <code>winston</code>.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>Transport</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston-transport</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>util</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>util</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Inherit from `winston-transport` so you can take advantage</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> of the base functionality and `.exceptions.handle()`.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="support variable js"><span>module</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>exports</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>YourCustomTransport</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Transport</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>opts</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="variable language js"><span>super</span></span><span class="meta brace round js"><span>(</span></span><span>opts</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Consume any custom options here. e.g.:</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> - Connection information for databases</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> - Authentication information for APIs (e.g. loggly, papertrail, </span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   logentries, etc.).</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta function method definition js"><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>info</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>callback</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>setImmediate</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>      </span><span class="variable language js"><span>this</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>emit</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>logged</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> info</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Perform the writing to the remote service</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>callback</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h2><a id="user-content-exceptions" class="deep-link" href="#exceptions" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Exceptions</h2>
<h3><a id="user-content-handling-uncaught-exceptions-with-winston" class="deep-link" href="#handling-uncaught-exceptions-with-winston" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Handling Uncaught Exceptions with winston</h3>
<p>With <code>winston</code>, it is possible to catch and log <code>uncaughtException</code> events
from your process. With your own logger instance you can enable this behavior
when it's created or later on in your applications lifecycle:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>createLogger</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>transports</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Enable exception handling when you create your logger.</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  exceptionHandlers</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>exceptions.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Or enable it later on by adding a transport or using `.exceptions.handle`</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Call exceptions.handle with a transport to handle exceptions</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>exceptions</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>handle</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>exceptions.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>If you want to use this feature with the default logger, simply call
<code>.exceptions.handle()</code> with a transport instance.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> You can add a separate exception logger by passing it to `.exceptions.handle`</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>exceptions</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>handle</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>path/to/exceptions.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Alternatively you can set `handleExceptions` to true when adding transports</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> to winston.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>path/to/combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  handleExceptions</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h3><a id="user-content-to-exit-or-not-to-exit" class="deep-link" href="#to-exit-or-not-to-exit" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>To Exit or Not to Exit</h3>
<p>By default, winston will exit after logging an uncaughtException. If this is
not the behavior you want, set <code>exitOnError = false</code></p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> exitOnError</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> or, like this:</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>exitOnError</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>When working with custom logger instances, you can pass in separate transports
to the <code>exceptionHandlers</code> property or set <code>handleExceptions</code> on any
transport.</p>
<h5><a id="user-content-example-1" class="deep-link" href="#example-1" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example 1</h5>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>path/to/combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  exceptionHandlers</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>path/to/exceptions.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h5><a id="user-content-example-2" class="deep-link" href="#example-2" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example 2</h5>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>      handleExceptions</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  exitOnError</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>The <code>exitOnError</code> option can also be a function to prevent exit on only
certain types of errors:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>ignoreEpipe</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>err</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="keyword control js"><span>return</span></span><span> </span><span class="variable other object js"><span>err</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>code</span></span><span> </span><span class="keyword operator comparison js"><span>!==</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>EPIPE</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> exitOnError</span><span class="keyword operator assignment js"><span>:</span></span><span> ignoreEpipe </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> or, like this:</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>exitOnError</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> ignoreEpipe</span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h2><a id="user-content-profiling" class="deep-link" href="#profiling" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Profiling</h2>
<p>In addition to logging messages and metadata, <code>winston</code> also has a simple
profiling mechanism implemented for any logger:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Start profile of 'test'</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>profile</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>test</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="support function js"><span>setTimeout</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Stop profile of 'test'. Logging will now take place:</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>   '17 Jan 21:00:00 - info: test duration=1000ms'</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="variable other object js"><span>logger</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>profile</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>test</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>1000</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>Also you can start a timer and keep a reference that you can call `.done()``
on:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span> </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Returns an object corresponding to a specific timing. When done</span></span></span></div><div class="line"><span class="source js"><span> </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> is called the timer will finish and log the duration. e.g.:</span></span></span></div><div class="line"><span class="source js"><span> </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span> </span><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>profiler</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>startTimer</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span><span class="meta function-call js"><span class="support function js"><span>setTimeout</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span>   </span><span class="variable other object js"><span>profiler</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>done</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> message</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Logging message</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="meta js"><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>1000</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>All profile messages are set to 'info' level by default, and both message and
metadata are optional.  For individual profile messages, you can override the default log level by supplying a metadata object with a <code>level</code> property:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>profile</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>test</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>debug</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<h2><a id="user-content-querying-logs" class="deep-link" href="#querying-logs" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Querying Logs</h2>
<p><code>winston</code> supports querying of logs with Loggly-like options. <a href="https://www.loggly.com/docs/api-retrieving-data/" rel="nofollow">See Loggly
Search API</a>. Specifically:
<code>File</code>, <code>Couchdb</code>, <code>Redis</code>, <code>Loggly</code>, <code>Nssocket</code>, and <code>Http</code>.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>options</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  from</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>Date</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span> </span><span class="keyword operator js"><span>-</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="constant numeric decimal js"><span>24</span></span><span> </span><span class="keyword operator js"><span>*</span></span><span> </span><span class="constant numeric decimal js"><span>60</span></span><span> </span><span class="keyword operator js"><span>*</span></span><span> </span><span class="constant numeric decimal js"><span>60</span></span><span> </span><span class="keyword operator js"><span>*</span></span><span> </span><span class="constant numeric decimal js"><span>1000</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  until</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>Date</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  limit</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  start</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  order</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>desc</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  fields</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>message</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Find items logged between today and yesterday.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>query</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>options</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>err</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>results</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>err</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> </span><span class="storage type class"><span>TODO</span></span><span>: handle me </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="keyword control js"><span>throw</span></span><span> err</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>results</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h2><a id="user-content-streaming-logs" class="deep-link" href="#streaming-logs" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Streaming Logs</h2>
<p>Streaming allows you to stream your logs back from your chosen transport.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Start at the end.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>stream</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> start</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>-</span></span><span class="constant numeric decimal js"><span>1</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>on</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>log</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>log</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>log</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h2><a id="user-content-further-reading" class="deep-link" href="#further-reading" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Further Reading</h2>
<h3><a id="user-content-using-the-default-logger" class="deep-link" href="#using-the-default-logger" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using the Default Logger</h3>
<p>The default logger is accessible through the <code>winston</code> module directly. Any
method that you could call on an instance of a logger is available on the
default logger:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>winston</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>info</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Hello distributed log files!</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Hello again distributed logs</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>level</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>debug</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>debug</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Now my debug messages are written to console!</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>By default, no transports are set on the default logger. You must
add or remove transports via the <code>add()</code> and <code>remove()</code> methods:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>files</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>combined.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>console</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="entity name type object console js"><span>console</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>files</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>remove</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="entity name type object console js"><span>console</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>Or do it with one call to configure():</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>configure</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>somefile.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>For more documentation about working with each individual transport supported
by <code>winston</code> see the <a href="https://github.com/winstonjs/winston/blob/HEAD/docs/transports.md" rel="nofollow"><code>winston</code> Transports</a> document.</p>
<h3><a id="user-content-awaiting-logs-to-be-written-in-winston" class="deep-link" href="#awaiting-logs-to-be-written-in-winston" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Awaiting logs to be written in <code>winston</code></h3>
<p>Often it is useful to wait for your logs to be written before exiting the
process. Each instance of <code>winston.Logger</code> is also a [Node.js stream]. A
<code>finish</code> event will be raised when all logs have flushed to all transports
after the stream has been ended.</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>transport</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>logger</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>createLogger</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>transport</span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>on</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>finish</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>info</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> All `info` log messages has now been logged</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>CHILL WINSTON!</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> seriously</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>end</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>It is also worth mentioning that the logger also emits an 'error' event which
you should handle or suppress if you don't want unhandled exceptions:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Handle errors</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>on</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>error</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>err</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> Do Something </span><span class="punctuation definition comment js"><span>*/</span></span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Or just suppress them.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>logger</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>emitErrs</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h3><a id="user-content-working-with-multiple-loggers-in-winston" class="deep-link" href="#working-with-multiple-loggers-in-winston" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Working with multiple Loggers in winston</h3>
<p>Often in larger, more complex, applications it is necessary to have multiple
logger instances with different settings. Each logger is responsible for a
different feature area (or category). This is exposed in <code>winston</code> in two
ways: through <code>winston.loggers</code> and instances of <code>winston.Container</code>. In fact,
<code>winston.loggers</code> is just a predefined instance of <code>winston.Container</code>:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>winston</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>format</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> winston</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>combine</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>label</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>json</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> format</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Configure the logger for `category1`</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>loggers</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category1</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>label</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> label</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category one</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>json</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>silly</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>somefile.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Configure the logger for `category2`</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>loggers</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category2</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>label</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> label</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category two</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>json</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Http</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> host</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>localhost</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> port</span><span class="keyword operator assignment js"><span>:</span></span><span class="constant numeric decimal js"><span>8080</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>Now that your loggers are setup, you can require winston <em>in any file in your
application</em> and access these pre-configured loggers:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>winston</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Grab your preconfigured loggers</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>category1</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>loggers</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category1</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>category2</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>winston</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>loggers</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category2</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>category1</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>logging to file and console transports</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>category2</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>logging to http transport</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>If you prefer to manage the <code>Container</code> yourself, you can simply instantiate one:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>winston</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>winston</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>format</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> winston</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>combine</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>json</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> format</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>container</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>Container</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>container</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>add</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category1</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  format</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>combine</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>label</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> label</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category one</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>    </span><span class="meta function-call js"><span class="entity name function js"><span>json</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta function-call js"><span class="meta js"><span>  </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  transports</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>Console</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> level</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>silly</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>    </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>winston</span><span class="meta delimiter period js"><span>.</span></span><span>transports</span><span class="meta delimiter period js"><span>.</span></span><span>File</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> filename</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>somefile.log</span><span class="punctuation definition string end js"><span>'</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span>  </span><span class="meta brace square js"><span>]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="meta js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>category1</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other object js"><span>container</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>category1</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>category1</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>info</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>logging to file and console transports</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><h2><a id="user-content-installation" class="deep-link" href="#installation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<pre class="editor editor-colors"><div class="line"><span class="text"><span>npm install winston</span></span></div></pre><pre class="editor editor-colors"><div class="line"><span class="text"><span>yarn add winston</span></span></div></pre><h2><a id="user-content-run-tests" class="deep-link" href="#run-tests" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Run Tests</h2>
<p>All of the winston tests are written with <a href="https://mochajs.org" rel="nofollow"><code>mocha</code></a>, <a href="https://github.com/istanbuljs/nyc" rel="nofollow"><code>nyc</code></a>, and
<a href="https://github.com/bigpipe/assume" rel="nofollow"><code>assume</code></a>.  They can be run with <code>npm</code>.</p>
<pre class="editor editor-colors"><div class="line"><span class="text"><span>npm test</span></span></div></pre><h4><a id="user-content-author-charlie-robbins" class="deep-link" href="#author-charlie-robbins" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Author: <a href="http://github.com/indexzero" rel="nofollow">Charlie Robbins</a></h4>
<h4><a id="user-content-contributors-jarrett-cruger--david-hyde--chris-alderson" class="deep-link" href="#contributors-jarrett-cruger--david-hyde--chris-alderson" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributors: <a href="https://github.com/jcrugzz" rel="nofollow">Jarrett Cruger</a>, <a href="https://github.com/dabh" rel="nofollow">David Hyde</a>, <a href="https://github.com/chrisalderson" rel="nofollow">Chris Alderson</a></h4>
</div></article></div><div class="pv4"><h2 id="user-content-keywords" class="a0dff0b1 mt2 pt2 mb3 pb3 f4 fw6 b--black-10">Keywords</h2><ul class="list pl0"><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:winston">winston</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:logger">logger</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:logging">logging</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:logs">logs</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:sysadmin">sysadmin</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:bunyan">bunyan</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:pino">pino</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:loglevel">loglevel</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:tools">tools</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:json">json</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:stream">stream</a></li></ul></div></section></div><div class="fdbf4038 w-third-l mt3 w-100 ph3 ph4-m pv3 pv0-l order-1-ns order-0"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Install</h3><p class="d767adf4 lh-copy truncate ph0 mb3 black-80 b5be2af6 f6 flex flex-row"><svg viewBox="0 0 12.32 9.33"><g><line class="st1" x1="7.6" y1="8.9" x2="7.6" y2="6.9"></line><rect width="1.9" height="1.9"></rect><rect x="1.9" y="1.9" width="1.9" height="1.9"></rect><rect x="3.7" y="3.7" width="1.9" height="1.9"></rect><rect x="1.9" y="5.6" width="1.9" height="1.9"></rect><rect y="7.5" width="1.9" height="1.9"></rect></g></svg><code class="flex-auto truncate db" title="Copy Command to Clipboard"><span>npm i <!-- -->winston</span></code><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="copy" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"></path></svg></p><div><div><h3 class="c84e15be f5 mt2 pt2 mb0 black-50 _5cfc0900"><svg viewBox="0 0 7.22 11.76"><title>Downloads</title><g><polygon points="4.59 4.94 4.59 0 2.62 0 2.62 4.94 0 4.94 3.28 9.53 7.22 4.94 4.59 4.94"></polygon><rect x="0.11" y="10.76" width="7" height="1"></rect></g></svg>Weekly Downloads</h3><div class="_000ae427 flex flex-row-reverse items-end"><svg class="_418c4939 flex-none" width="200" height="40" stroke-width="3" stroke="#8956FF" fill="rgba(137, 86, 255, .2)"></svg><p class="_9ba9a726 f4 tl flex-auto fw6 black-80 ma0 pr2 pb1">4,497,459</p></div></div></div><div class="_702d723c dib w-50 bb b--black-10 pr2"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Version</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4">3.2.1</p></div><div class="_702d723c dib w-50 bb b--black-10 pr2"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">License</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4">MIT</p></div><div class="_702d723c dib w-50 bb b--black-10 pr2"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Unpacked Size</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4">305 kB</p></div><div class="_702d723c dib w-50 bb b--black-10 pr2"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Total Files</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4">51</p></div><div class="_702d723c dib w-50 bb b--black-10 pr2 w-100"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Homepage</h3><p class="_40aff104 fw6 mb3 mt2 truncate black-80 f5"><a class="b2812e30 f2874b88 fw6 mb3 mt2 truncate black-80 f4 link" rel="noopener noreferrer nofollow" href="https://github.com/winstonjs/winston#readme"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="link" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg>github.com/winstonjs/winston#readme</a></p></div><div class="_702d723c dib w-50 bb b--black-10 pr2 w-100"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Repository</h3><p class="_40aff104 fw6 mb3 mt2 truncate black-80 f5"><a class="b2812e30 f2874b88 fw6 mb3 mt2 truncate black-80 f4 link" rel="noopener noreferrer nofollow" href="https://github.com/winstonjs/winston"><span class="_9e13d83d dib v-mid"><svg viewBox="0 0 92 92" version="1.1" xmlns="http://www.w3.org/2000/svg"><title>Git</title><g stroke="none" fill="#0a0b09"><path d="M90.155,41.965 L50.036,1.847 C47.726,-0.464 43.979,-0.464 41.667,1.847 L33.336,10.179 L43.904,20.747 C46.36,19.917 49.176,20.474 51.133,22.431 C53.102,24.401 53.654,27.241 52.803,29.706 L62.989,39.891 C65.454,39.041 68.295,39.59 70.264,41.562 C73.014,44.311 73.014,48.768 70.264,51.519 C67.512,54.271 63.056,54.271 60.303,51.519 C58.235,49.449 57.723,46.409 58.772,43.861 L49.272,34.362 L49.272,59.358 C49.942,59.69 50.575,60.133 51.133,60.69 C53.883,63.44 53.883,67.896 51.133,70.65 C48.383,73.399 43.924,73.399 41.176,70.65 C38.426,67.896 38.426,63.44 41.176,60.69 C41.856,60.011 42.643,59.497 43.483,59.153 L43.483,33.925 C42.643,33.582 41.858,33.072 41.176,32.389 C39.093,30.307 38.592,27.249 39.661,24.691 L29.243,14.271 L1.733,41.779 C-0.578,44.092 -0.578,47.839 1.733,50.15 L41.854,90.268 C44.164,92.578 47.91,92.578 50.223,90.268 L90.155,50.336 C92.466,48.025 92.466,44.275 90.155,41.965"></path></g></svg></span><span>github.com/winstonjs/winston</span></a></p></div><div class="_702d723c dib w-50 bb b--black-10 pr2 w-100"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Last publish</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4"><time dateTime="2019-01-29T19:04:11.622Z" title="2019-1-29 19:04:11">a year ago</time></p></div><div class="w-100"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Collaborators</h3><ul class="list pl0 cf"><li class="_426b8533 fl dib mr2 mb2"><div><a href="/~chjj"><img src="https://s.gravatar.com/avatar/96160627de1a1c142b3b5f1058dff07f?size=100&amp;default=retro" style="width:42px;height:42px;min-width:42px;border-radius:4%" alt="avatar" title="chjj"/></a></div></li><li class="_426b8533 fl dib mr2 mb2"><div><a href="/~pose"><img src="https://s.gravatar.com/avatar/9d8d8bff4484ddadf83684d88cb10188?size=100&amp;default=retro" style="width:42px;height:42px;min-width:42px;border-radius:4%" alt="avatar" title="pose"/></a></div></li><li class="_426b8533 fl dib mr2 mb2"><div><a href="/~jcrugzz"><img src="https://s.gravatar.com/avatar/63c522d0daa5acc2e37046489ab6cc39?size=100&amp;default=retro" style="width:42px;height:42px;min-width:42px;border-radius:4%" alt="avatar" title="jcrugzz"/></a></div></li><li class="_426b8533 fl dib mr2 mb2"><div><a href="/~v1"><img src="https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=100&amp;default=retro" style="width:42px;height:42px;min-width:42px;border-radius:4%" alt="avatar" title="v1"/></a></div></li><li class="_426b8533 fl dib mr2 mb2"><div><a href="/~indexzero"><img src="https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=100&amp;default=retro" style="width:42px;height:42px;min-width:42px;border-radius:4%" alt="avatar" title="indexzero"/></a></div></li><li class="_426b8533 fl dib mr2 mb2"><div><a href="/~3rdeden"><img src="https://s.gravatar.com/avatar/dc6c2c2c01e11657941070a3245eaa32?size=100&amp;default=retro" style="width:42px;height:42px;min-width:42px;border-radius:4%" alt="avatar" title="3rdeden"/></a></div></li><li class="_426b8533 fl dib mr2 mb2"><div><a href="/~dabh"><img src="https://s.gravatar.com/avatar/088fe427c8c28b9735d2a6b0a8e523b8?size=100&amp;default=retro" style="width:42px;height:42px;min-width:42px;border-radius:4%" alt="avatar" title="dabh"/></a></div></li></ul></div><div class="w-100"><a class="c37751f6 _24a1e9c7 dab9924c br2 pv2 ph3 fw5 f5 tc button button-reset pointer ma2 truncate ml0 no-underline mt2 dib w-100" rel="noopener noreferrer nofollow" href="https://runkit.com/npm/winston"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="terminal" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512"><path fill="currentColor" d="M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z"></path></svg><strong>Try</strong> on RunKit</a></div><div class="_33c89934 flex flex-column-l items-start-l"><a class="_4a3f8f21 _24a1e9c7 dab9924c br2 pv2 ph3 fw5 f5 tc button button-reset pointer ma2 truncate ml0 no-underline mt2 dib w-100" href="/advisories/report?package=winston"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="flag" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M349.565 98.783C295.978 98.783 251.721 64 184.348 64c-24.955 0-47.309 4.384-68.045 12.013a55.947 55.947 0 0 0 3.586-23.562C118.117 24.015 94.806 1.206 66.338.048 34.345-1.254 8 24.296 8 56c0 19.026 9.497 35.825 24 45.945V488c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-94.4c28.311-12.064 63.582-22.122 114.435-22.122 53.588 0 97.844 34.783 165.217 34.783 48.169 0 86.667-16.294 122.505-40.858C506.84 359.452 512 349.571 512 339.045v-243.1c0-23.393-24.269-38.87-45.485-29.016-34.338 15.948-76.454 31.854-116.95 31.854z"></path></svg><strong>Report</strong> a vulnerability</a></div></div></div></main><footer class="cd2827bb bt b--black-10 mt4"><div class="center mw9 pa3 flex flex-column flex-wrap-m flex-row-ns"><div class="flex-auto pa4-ns pa3 w-100 w-10-l"><div class="_802b5507 pt3"><svg viewBox="0 0 27.23 27.23"><rect fill="#333333" width="27.23" height="27.23" rx="2"></rect><polygon fill="#fff" points="5.8 21.75 13.66 21.75 13.67 9.98 17.59 9.98 17.58 21.76 21.51 21.76 21.52 6.06 5.82 6.04 5.8 21.75"></polygon></svg></div></div><div class="flex-auto pa4-ns pa3 w-30-ns w-50-m"><h3 class="_1b8c0a9f">Help</h3><ul class="list pl0"><li class="pv1"><a class="link" href="https://docs.npmjs.com">Documentation</a></li><li class="pv1"><a class="link" href="https://npm.community">Community</a></li><li class="pv1"><a class="link" href="/resources/">Case Studies</a></li><li class="pv1"><a class="link" href="https://www.npmjs.com/advisories">Advisories</a></li><li class="pv1 npme-hidden"><a class="link" href="http://status.npmjs.org/">Status</a></li><li class="pv1"><a class="link" href="/support">Contact</a></li></ul></div><div class="flex-auto pa4-ns pa3 w-30-ns w-50-m"><h3 class="_1b8c0a9f">About</h3><ul class="list pl0"><li class="pv1"><a class="link" href="/about">Company</a></li><li class="pv1"><a class="link" href="https://blog.npmjs.org/">Blog</a></li><li class="pv1 npme-hidden"><a class="link" href="/jobs">Careers</a></li><li class="pv1"><a class="link" href="https://www.youtube.com/playlist?list=PLQso55XhxkgDSLC0GzjGFeUkJ_T6YzVXK" target="_blank" rel="noopener noreferrer nofollow">Webinars</a></li><li class="pv1"><a class="link" href="/press">Press</a></li><li class="pv1"><a class="link" href="/npm-weekly">Newsletter</a></li></ul></div><div class="flex-auto pa4-ns pa3 w-30-ns w-50-m"><h3 class="_1b8c0a9f">Terms &amp; Policies</h3><ul class="list pl0"><li class="pv1"><a class="link" href="/policies/">Policies</a></li><li class="pv1"><a class="link" href="/policies/terms">Terms of Use</a></li><li class="pv1 npme-hidden"><a class="link" href="/policies/conduct">Code of Conduct</a></li><li class="pv1 npme-hidden"><a class="link" href="/policies/privacy">Privacy</a></li></ul></div></div></footer></div><div class="_8a62ca63 fixed top-0 left-0 z-999" style="opacity:0;transform:scaleX(1);-webkit-transform:scaleX(1);-moz-transform:scaleX(1)"></div></div></div><script integrity="sha512-3a1VieBnqvPNYuHkbRbEKN7QsoRw+VjM2ZiDO7tqIY+26ODLmFqyOaMBF5Gd6kcz5ARfChvQ4gf57uP9npCzPA==">window.__context__ = {"context":{"isNpme":false,"npmExpansions":["Natural Pleistocene Monsters","Naboo's Podracing Misadventure","Nobody Preheats Microwaves","Nutella Per Minute","Norwegian Polka Music","Not Pictured: Mangoes","No Padding Module","Natively Pronounced Mandarin","Notable Pottery Manufacturer","Naturally Pacifist Marsupials"],"notifications":[],"csrftoken":"ZgCIP409WJ7-gFYu0cgYsYZvXN4nNLjy3RXuat6-3GP","user":null,"documentContext":{"readme.data":"readme"},"undefined":true,"readme":{"ref":"readme","data":null},"upsell":{"_id":"ckawuihxeziicg174v50tz3hb","published":true,"trash":false,"type":"upsell-box","title":"Open RFC discussions","upsellText":"Learn about our RFC process, Open RFC meetings \u0026 more.","linkText":"Join in the discussion!","linkURL":"https://github.com/npm/rfcs","slug":"open-rfc-discussions","tags":[],"workflowLocale":"default","workflowGuid":"ckawuihwqzii9g174x5627luk","createdAt":"2020-06-01T18:47:54.434Z","updatedAt":"2020-06-01T18:48:05.032Z","titleSortified":"open rfc discussions","highSearchText":"open rfc discussions open rfc discussions open rfc discussions learn about our rfc process open rfc meetings more join in the discussion https github com npm rfcs open rfc discussions","highSearchWords":["open","rfc","discussions","learn","about","our","process","meetings","more","join","in","the","discussion","https","github","com","npm","rfcs"],"lowSearchText":"open rfc discussions open rfc discussions open rfc discussions learn about our rfc process open rfc meetings more join in the discussion https github com npm rfcs open rfc discussions","searchSummary":"","docPermissions":[],"loginRequired":null,"viewUsersIds":[],"viewGroupsIds":[],"editUsersIds":[],"editGroupsIds":[],"viewUsersRelationships":{},"viewGroupsRelationships":{},"editUsersRelationships":{},"editGroupsRelationships":{},"_edit":true,"_publish":true,"_originalWidgets":{}},"starAction":"/package/winston/star","packageUrl":"/package/winston","canEditPackage":false,"dependents":{"dependentsCount":12171,"dependentsTruncated":["kapilteztest3","irccd","primus-logger","forever-mac","t411-api","umm","hnb_script","joola.io.config","node-shift8","tapline","garret","edgegrid-node","rfremoteserver","icarus","joola.io.status","otagai","g33k-packer","melted-node","zeddemore","nm-logger","levitate","resourceserver","transit-im","agentvsagent","yamlirc","evo-elements","guerrero","doushio","partyroom","winston-sqlserver","winston-stderr","roadmap","couch-persona","kamituel-logger","pull-list","symfio-contrib-winston","dpd-mincer","loggly-console-logger","node-barefoot","cl-rpc","sshpwordtest","parallel-wget","ios-ota","mavlink_ardupilotmega_v1.0","node-tagger","smart-router","winston-posix-syslog","browserid-certifier","ios-ota-maintainer","opfplatform"]},"downloads":[{"downloads":3126622,"label":"2019-06-15 to 2019-06-21"},{"downloads":3128374,"label":"2019-06-22 to 2019-06-28"},{"downloads":2881856,"label":"2019-06-29 to 2019-07-05"},{"downloads":3270395,"label":"2019-07-06 to 2019-07-12"},{"downloads":3145550,"label":"2019-07-13 to 2019-07-19"},{"downloads":3175641,"label":"2019-07-20 to 2019-07-26"},{"downloads":3220196,"label":"2019-07-27 to 2019-08-02"},{"downloads":3295890,"label":"2019-08-03 to 2019-08-09"},{"downloads":3534563,"label":"2019-08-10 to 2019-08-16"},{"downloads":3447140,"label":"2019-08-17 to 2019-08-23"},{"downloads":3419049,"label":"2019-08-24 to 2019-08-30"},{"downloads":3163731,"label":"2019-08-31 to 2019-09-06"},{"downloads":3394709,"label":"2019-09-07 to 2019-09-13"},{"downloads":3413608,"label":"2019-09-14 to 2019-09-20"},{"downloads":3465033,"label":"2019-09-21 to 2019-09-27"},{"downloads":3564462,"label":"2019-09-28 to 2019-10-04"},{"downloads":3524588,"label":"2019-10-05 to 2019-10-11"},{"downloads":3500423,"label":"2019-10-12 to 2019-10-18"},{"downloads":3566574,"label":"2019-10-19 to 2019-10-25"},{"downloads":3497727,"label":"2019-10-26 to 2019-11-01"},{"downloads":3671285,"label":"2019-11-02 to 2019-11-08"},{"downloads":3601718,"label":"2019-11-09 to 2019-11-15"},{"downloads":3769111,"label":"2019-11-16 to 2019-11-22"},{"downloads":3426117,"label":"2019-11-23 to 2019-11-29"},{"downloads":3770526,"label":"2019-11-30 to 2019-12-06"},{"downloads":3862873,"label":"2019-12-07 to 2019-12-13"},{"downloads":3684775,"label":"2019-12-14 to 2019-12-20"},{"downloads":2202907,"label":"2019-12-21 to 2019-12-27"},{"downloads":2264398,"label":"2019-12-28 to 2020-01-03"},{"downloads":3481156,"label":"2020-01-04 to 2020-01-10"},{"downloads":3895268,"label":"2020-01-11 to 2020-01-17"},{"downloads":3695141,"label":"2020-01-18 to 2020-01-24"},{"downloads":3896888,"label":"2020-01-25 to 2020-01-31"},{"downloads":4139611,"label":"2020-02-01 to 2020-02-07"},{"downloads":4280205,"label":"2020-02-08 to 2020-02-14"},{"downloads":4422747,"label":"2020-02-15 to 2020-02-21"},{"downloads":4611272,"label":"2020-02-22 to 2020-02-28"},{"downloads":4744170,"label":"2020-02-29 to 2020-03-06"},{"downloads":4554184,"label":"2020-03-07 to 2020-03-13"},{"downloads":4532332,"label":"2020-03-14 to 2020-03-20"},{"downloads":4583435,"label":"2020-03-21 to 2020-03-27"},{"downloads":4886611,"label":"2020-03-28 to 2020-04-03"},{"downloads":4779869,"label":"2020-04-04 to 2020-04-10"},{"downloads":4693433,"label":"2020-04-11 to 2020-04-17"},{"downloads":5151943,"label":"2020-04-18 to 2020-04-24"},{"downloads":4827610,"label":"2020-04-25 to 2020-05-01"},{"downloads":4850437,"label":"2020-05-02 to 2020-05-08"},{"downloads":4917581,"label":"2020-05-09 to 2020-05-15"},{"downloads":4763153,"label":"2020-05-16 to 2020-05-22"},{"downloads":4337039,"label":"2020-05-23 to 2020-05-29"},{"downloads":4494222,"label":"2020-05-30 to 2020-06-05"},{"downloads":4497459,"label":"2020-06-06 to 2020-06-12"}],"packument":{"author":{"name":"Charlie Robbins","avatars":{"small":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"charlie.robbins@gmail.com"},"description":"A logger for just about everything.","homepage":"https://github.com/winstonjs/winston#readme","repository":"https://github.com/winstonjs/winston","distTags":{"latest":"3.2.1","next":"3.1.0","3.x-latest":"3.1.0","2.x-latest":"2.4.4"},"keywords":["winston","logger","logging","logs","sysadmin","bunyan","pino","loglevel","tools","json","stream"],"maintainers":[{"name":"chjj","avatars":{"small":"https://s.gravatar.com/avatar/96160627de1a1c142b3b5f1058dff07f?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/96160627de1a1c142b3b5f1058dff07f?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/96160627de1a1c142b3b5f1058dff07f?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"chjjeffrey@gmail.com"},{"name":"pose","avatars":{"small":"https://s.gravatar.com/avatar/9d8d8bff4484ddadf83684d88cb10188?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/9d8d8bff4484ddadf83684d88cb10188?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/9d8d8bff4484ddadf83684d88cb10188?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"albertopose@gmail.com"},{"name":"jcrugzz","avatars":{"small":"https://s.gravatar.com/avatar/63c522d0daa5acc2e37046489ab6cc39?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/63c522d0daa5acc2e37046489ab6cc39?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/63c522d0daa5acc2e37046489ab6cc39?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"jcrugzz@gmail.com"},{"name":"v1","avatars":{"small":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"npm@3rd-Eden.com"},{"name":"indexzero","avatars":{"small":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"charlie.robbins@gmail.com"},{"name":"3rdeden","avatars":{"small":"https://s.gravatar.com/avatar/dc6c2c2c01e11657941070a3245eaa32?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/dc6c2c2c01e11657941070a3245eaa32?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/dc6c2c2c01e11657941070a3245eaa32?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"npmjs@3rd-Eden.com"},{"name":"dabh","avatars":{"small":"https://s.gravatar.com/avatar/088fe427c8c28b9735d2a6b0a8e523b8?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/088fe427c8c28b9735d2a6b0a8e523b8?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/088fe427c8c28b9735d2a6b0a8e523b8?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"dabh@alumni.stanford.edu"}],"name":"winston","license":"MIT","version":"3.2.1","versions":[{"version":"3.2.1","date":{"ts":1548788651622,"rel":"a year ago"},"dist":{"integrity":"sha512-zU6vgnS9dAWCEKg/QYigd6cgMVVNwyTzKs81XZtTFuRwJOcDdBg7AU0mXVyNbs7O5RH2zdv+BdNZUlx7mXPuOw==","shasum":"63061377976c73584028be2490a1846055f77f07","tarball":"https://registry.npmjs.org/winston/-/winston-3.2.1.tgz","fileCount":51,"unpackedSize":305100,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcUKOsCRA9TVsSAnZWagAAkJEP/ideEmSeWCrhHt690NJV\nY4nM4M75zS78j9gGKfzqB/Wet390K3OGc7UZyCjb/GpwmCnFWlQ75LnDKfQv\nrlAvU9OXJo1Zd/7gAkE+2Uhlzeg3KkkcpG97tblcPXcWgJIil6NkViFlg0LP\n+Xpbj0LIjwBOyoi927TyED0r9x7wbPnnoTiCxdkYQNi1q40D+1xW2rVYg2oO\neHF3FxGMlzKjh6aRIDhS4oK3gX8QE9HNyQsR74P1oy501S6YGruIbq4SvZHS\ns6KRhyviuM7JfQCjpfa9mXYH75sZYrzNyEDYgi3tgQx+SKwH50MaySfbHnoH\nme0HYREwey5TMDmCYeY3XehSQqygGbGjT1pIjruLbFdyouDqJXI7IJeztnEg\ncs0d/OihRXli+K2/RGKkaIiKWAxoG8cml9z8wlJgTmYb6SqZa5KmvF2Wvpzz\n1x/mg674P/8WZ1ZYAA5RTwhYuBTzlMx2qrOsvjBjO5Q7PSzAV7pMIoyFefdE\nVLR5G/3u28HESTEyfiEhEcgQ75qJNjdmpDiuz6DPE99pyMY4/rVQTUhJJRXo\nerUHugmEh0lC1d0tueEW26ONXPwlromsJZOvyi8E7oofGkXddF9qZ6JaBejf\nEef820R0yMfkIPYx9cQkRmjOZ3xS/uWksOtFJgpxJmE8RQI1cwhgpjDC83Fs\n7vOB\r\n=sRVW\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.2.0","date":{"ts":1548532128618,"rel":"a year ago"},"dist":{"integrity":"sha512-r2e2ufodByh8U1infSXNLViN7ekqVRoSkcJgpS6AzAyKve0uiUkeQq0kxdSDr8bwaM1rGXprvvoC1B+ocy5L0w==","shasum":"f42735b194a425526025d3ae721246c796172f24","tarball":"https://registry.npmjs.org/winston/-/winston-3.2.0.tgz","fileCount":51,"unpackedSize":304548,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcTLmhCRA9TVsSAnZWagAAsL8QAJrJmOwspEPAtoncdKPB\njAEG9EMzpkKazl68/yLJib+zRz/JDqaH4qMWzCzbZbs3H0fcSki3rJR11hqs\nhqJ6Lj5ruUEsmYe3S4jzAS1Asdnst8HwRNDVgT3EeGXxuHy3HEBP0ju+CG/1\ncG9cicOmrzuRhd2xJ6kIQ7yPmXJ8tQ0s05n8AkonUBN3Ug2R6av1ER3TafB9\nbfGKmaQ/mBpz419z6n7MjIRLbOq05d2encdSEBLBEAn/p0bsYtiQ1ScHzskE\n1aU2rXxuIpPNdYKvZ2kQdFqSzJN1UGL2QhyJr5fYGl8R0ZB77AYR/9ZOewXo\nP8y8rwr44IR0A0jTqaMnlSGIMhDzjjeuNCwcG2d3D0jjkvzsbFvj1xyy4JhT\n041+DzV/RVPQvW1coUqnwRgAk/9aWcqdwivnwKAjYq7H9Vw6kQsnnQm66S8Y\nXdxGoDzAcq5Jz6/l9Mi/zD6YlLB2RjFWWSz9CkpbyP4Pv0eOCFYw1xyoFsVl\nzJh/tc6wkVPd+yxTbJrnyjeB9YCX4scqfyAE0LGBUyLFolvycl34CN0FJruE\n/Eg4ANLlKPcBlbUm8lizDn21z3aYLkR89FAWgQ7+eiNJ3FOlE0kcOByEzYWw\nCVRHExjk+D6U5GRO1z/MdtJzE+9wOfzKmaZ41sDYVGvR07JpxbztJCfADAHu\njq31\r\n=ATOG\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.1.0","date":{"ts":1536070083077,"rel":"2 years ago"},"dist":{"integrity":"sha512-FsQfEE+8YIEeuZEYhHDk5cILo1HOcWkGwvoidLrDgPog0r4bser1lEIOco2dN9zpDJ1M88hfDgZvxe5z4xNcwg==","shasum":"80724376aef164e024f316100d5b178d78ac5331","tarball":"https://registry.npmjs.org/winston/-/winston-3.1.0.tgz","fileCount":33,"unpackedSize":169945,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbjpHDCRA9TVsSAnZWagAA/y4P/iNRGRsyG/Lwu9AvVSF/\niunubPBHVd5lNph2Qu+caFQyJKcDdsEuIJJG6+ellpBBNhSxwa9KYbKdysha\nm9izU1dtyeDzbHiVHDvVTknO8f1anScHkW+u6zv05X4FYYfo6Vqls8fDwieD\nhTxPmmz1eIECNgfQsVh4XiDgU/dNNh2u96uYyfrNNhxAxEU94sJICAe+XCqX\niE7ARqIz5PAN5i0SBHPeSBZ1TuxzbroPVH+q8IpOwQ+G02BQTMzTP/CX9Axq\nG1+5P35zGbD+g9l/7C4+iMxbAB1zfz4EpAKuDYeySNM1Y91fleWglQooRfvh\nFZ3tofhNDB5fXjw9TRwB8t64GjJQ1ifihadMN5P+jwX8oZwdhd0mbn27u51m\nfO9RQ/iRzrXEgWGQOPtiwb2EH05s+G2iboiWS6YixDNgivo+Tr7tcjI2HO7w\nIFOJfIaCZdYBTfttF7HVEiwFHTiWX5etsMG2DhUsTDf+O4TcUlNBOg+/V3NM\nHU2NLjJkCHSh9/JSFNnnoXh4BVeAWoZr8MfKzwj9E+1gJMYA4ULbDm9vFCzW\n8vNmpgcxtYQQF62gmJXbdqdm1IHrhCjJu+W2qHJDhYCQUadnUJHm1ZH7pbSY\nUlbRq7oGGZYI5Jdoe0z73A5YDvO/vjCUqcQHH496hkXpkuKDnI2XFPEGThXs\np8kl\r\n=z1yK\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.0.1","date":{"ts":1536069915969,"rel":"2 years ago"},"dist":{"integrity":"sha512-Qp0hlqi7rR59K8CyEu8+CLNM9vjJjfq8zf90RkS/osirjdMPeGlqYcZXcGNVvghFUr7ztW1U1FXAcolBNs6T4Q==","shasum":"ac2196df24bd5ffa7217ebf287eede455f0f2de5","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.1.tgz","fileCount":33,"unpackedSize":166181,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbjpEcCRA9TVsSAnZWagAADr4P+QFinKE/pZLF9kSnVGQd\nmIE94hILgioDKYDLGZ0wChUjmvuPlXAp4oZe6nDx1AFwZnPayDcbtYYSldaW\njIo5M93Dr9N3HFgV53o9Z/4CkyAhUWfuBMEVKzN8vEOUseXs4O8YPvvVhQTx\nnITd6jZoECu+Li7WgPaULw1knIaUa1H0j3tyGe9apdw7g9Ud3uaFJlAc+5Uj\nowCHOyMaXKEwV3a6fw3/oClpZG/R8L23EgSiRV1hq0tBXMSP/eX7+VunpnV4\nlVGTOJUoYRmHQll3LmusqHkueh2fq12jiVAg2l1wMdYzC1/UXeomxCbIz6d/\nhgMe6KgYS/LbJut3iG3YuvMNyh9KXJ6O+4nloprx9hkuaGzb6DtV/uoC7n1w\nYczN9XU0vHdxQ2SVDkl+4xSBZEQ2jZkPC5bchcTbuEEGVCqV2E2BGVhFD/vG\n9UtvcUzeYTY3iE9UxwAsmgwUXvFhJU+PCG8+wsGHUjg9XBvp+QxRSh70YSnv\nI+FWdYS5MufarjapDqGLjue5PoRjMnBzVW89gfh9d9QzhwPJwBxENNoeqJMq\nmm07szGCliKLUGi5pryuRf2+MwccQEIITZqjS7ktmHlnhVsZ9w+M1UbowDbf\nFccMBtjuNdhzioEXLzPT1Zzo3vm2uZMOIP/rkGGm4c/iJ1hjus4Zeb5Fx8kT\nMVqZ\r\n=zJfA\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.4.4","date":{"ts":1534886527552,"rel":"2 years ago"},"dist":{"integrity":"sha512-NBo2Pepn4hK4V01UfcWcDlmiVTs7VTB1h7bgnB0rgP146bYhMxX0ypCz3lBOfNxCO4Zuek7yeT+y/zM1OfMw4Q==","shasum":"a01e4d1d0a103cf4eada6fc1f886b3110d71c34b","tarball":"https://registry.npmjs.org/winston/-/winston-2.4.4.tgz","fileCount":32,"unpackedSize":189862,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbfIKACRA9TVsSAnZWagAALMsP/2Ua2w4cNGpHS2Y7ju3v\n5GR/ylqqVvZIiZyWBMV4bXNIHYnEY3U+EBv9knr7/lJqvNNiD9dQl8mx7b9R\ndLVeaLb3p1xCq5yfJcbx2fJ20x8g1dgqoVGVLl90+NsHHUr6HHLbryDVPjDM\nlt/xQflSjUOtYZV/o7h0/cUanFtKnOt18nWxepLG13dYyyegIlsAqs91zGN4\nbsaj0US7c2PWAH9bTQaTrzquNwUfOK/teTCEdn1kcUrPWMDi7cxveSqwLje4\n5vqpXKqs1T474uyAvM28onpmfFtA5wTyGkUOQoa9wW5nh3pI/ky1li2fgdI3\ncULGXTQcprDncArwDEuc+qwHUKv8Fusdipj1YZ5qkmi/u14GlzqzUQXb6N+N\nqmBE0cgRaH5H7hskKv69bFKeFiapZ43T9Hw8DosQbC7ci2VW0mYXy/VFiPQD\nOVyijqFs9be74t7WcOB3WmnKZsVQUxHlrMiYRllYySmNSk16LlpSVk+tYEcu\nXmScIAbXZLvMy0aFzq8KlQDDelJEOAQdQ9Jm3C7/TPhU9vb9yeQRWARMJpIe\n2aFZSXXbEu+j1IuAyfF6rUmMLpy7XCHWAil87UN69vdHydw2r4wqxCur9494\nD91rw1rA4ziFUcljNdE0tns76sy7lCb8n77Hb78ocqyGAvCUUJAwG4zFkd1f\n5//V\r\n=k7FV\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.0.0","date":{"ts":1528821086893,"rel":"2 years ago"},"dist":{"integrity":"sha512-7QyfOo1PM5zGL6qma6NIeQQMh71FBg/8fhkSAePqtf5YEi6t+UrPDcUuHhuuUasgso49ccvMEsmqr0GBG2qaMQ==","shasum":"1f0b24a96586798bcf0cd149fb07ed47cb01a1b2","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.0.tgz","fileCount":70,"unpackedSize":611998,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbH/VgCRA9TVsSAnZWagAAmMYP/1Bz9tGx9E+c18763TdH\nxqtMo5FFauSdwEWsRaYVXVZDWnjlWektf/tbD1kjdEM5Vx+CN/yKmL4hnnx1\nNI6nFaIpbqCh+Q5ZpqPMYxzXRYq+iHvK5Rs194O+8YHubIjnW16n7XuQf7go\ngSXbfF0bKmkdQ0lIQ9jveKcVDLck6Xl3P19aEfo+wVLzN+4Sr5RySjoP2ecm\nxmU7razcHiK5magTpPdVrD8zF1CZeFELm3hPNNaO43iVZtvJclxbMqp7F5LG\nW1GxfMAbCAchrfymzFF2VzCx1++f2HEhZYXCAg6CgV1Vp4SHX8fChKuXemHF\nHdx4XfCccwZWDFdlVtrnz5CcJC1Jx0o37FyfSzX7MAFZ3cGvB6zxvJAqP8Jy\nPT5BOSYfdVRCgi5QObfJykHrP5SJDUB8uslFRljcwNcY7FEgo+NP9uMIuh/l\nbe0HAESm5YxXe9ZanEjEfzf8G3Bsy5Sac9m5zxTWW69LKHrAZkF2pVpFb5Z1\nFTsgnOHa6Ab50FMsJlSj8RhRBuFRXiDCJDLQPzBbuQ1tUfJO+KrtWLdyeHre\nlNE+w2gY8F3BPWkh4yODrB9FVvyvdBnG1qW5+fM1C9hmkYVTyNcqHmGrnuhM\nWbZvaismFNhPMoO22HFCrOtLlWkaU5IWfdTA1bRWi0KjBcH44g3sr8pnv8y+\nIohh\r\n=0S99\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.4.3","date":{"ts":1528797184261,"rel":"2 years ago"},"dist":{"integrity":"sha512-GYKuysPz2pxYAVJD2NPsDLP5Z79SDEzPm9/j4tCjkF/n89iBNGBMJcR+dMUqxgPNgoSs6fVygPi+Vl2oxIpBuw==","shasum":"7a9fdab371b6d3d9b63a592947846d856948c517","tarball":"https://registry.npmjs.org/winston/-/winston-2.4.3.tgz","fileCount":3557,"unpackedSize":5985515,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbH5gBCRA9TVsSAnZWagAAjBkQAJmMB+VBw/VEif40VXa1\nH3ANivrsZgJ177AImlFbJACULaKxravnHI0wnS1rLxcQJqc5fWLamWy4Fxgr\nyg+xZ2gtoAdll12BB1rkrvKZsjvutG9f6KbYmy9N7bHKpuojespzb/lSienz\nd8YMCxfNj/jGv1hPg+uWVUVR/7bkHOErrSTbu5fR467n3n9Uvqja67rGElXk\n8BFtDJLMzYUjGnTo9epHnhHswJ+g0YCy3uSu8c9lrWdMjPLyjeWPE04mZ2Mz\nNg1vyKMCianZ6n0vwm//Ip1XKIfo2wJ6WoR1xhnhxXnW9maNEDfSSlHPjXkM\njH9iEr9PoUfXUEleo18DmoS33iLa6ItOdWx1JO46aki5p/OoliZbLdZlAUFr\nSIdQ4qZ5HdERu9gxElZbRUGiRofBobQLilgDPViiE2pkiYAB1xXo4D4nToxX\nUZU06piIHFPhIqAL1520dUlIrpIXqSd7wUu9dcLiTPx/PwejAy4F+8aLib2g\nqxbh2Rf8nYj6W4cxGf6E8Z1jlM9QRhzd3g0WEj9fqsgy7XKLG7wrVNKCR3JN\nasvppN62sspVgW3/zHRx9vma6QexOYYAUlAa44MXMQfNb37S71sBcSzIYPmi\ndARkNp7Q9arDg+Hz6hP2ZQ370qGtiAmCoRJttcAMqiqaxa6ku4J8G7MsvplA\nQK1L\r\n=KLNW\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.0.0-rc6","date":{"ts":1527660067464,"rel":"2 years ago"},"dist":{"integrity":"sha512-4QwLccPbU/aJMA+j6uYTQ8TobwLKPWhpceJZwz1lkQ+wYv7bxGyAHIdbfEOrxsKHD8zRCcgCXPbbpV3BDRD1rw==","shasum":"f6a0417be6cc2fe5c9a64fbb698e8da674cdf26a","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.0-rc6.tgz","fileCount":33,"unpackedSize":167966,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDj4lCRA9TVsSAnZWagAAS64P/3CTTzEmWAX51so5QXcw\nGLsW4Da281Nb6YiEsg+4wGIVm2aJ3Um2PsRbLmlvBBHCAOHKE2FxW2uZ2Exy\nchQfcOiCTwwT0cROGfdYMK1bXkLAHW6jdMhGNYxoKOr8Dyb+uXZYoYUsodLJ\n02vJX3BLXxnThD7QWgJOewbouBuxEfobonmG8vJ76qoUZ1BoMkINrShodhA+\nYGJsSXDoCqU2ge9Ff/wQmtpcVU7QFOmftJ/LVW2esBvuU1yoC8XOugqfXQjb\nudHyOKajymwIK8g7WbEujTzy/oY93dikg0kNUTZyhFYAS5mTT7NmQLRNhOfw\n1nZSh1mn2oEIA0mz/h3jitomeNLZWVqbWSC8Apu6nYwiPKqzI8pnO8kAorEJ\nX1hEARiDT33KuSy4l9igAAu77YcZbJl52tJpjoZi1JPUcB2wga/fy8kMa8in\nah7oyzFoVC8GmGGlTppCIYbgoyiEqHPT7TuIERQ1DYG7ZA3plGItPCZpawLy\nFwV9pDSe0YduC+3vIeKspw5BCP0Ms0vba/lilcaPwqob+1Wmig0xpp41l4Mi\nHXPQVKSUMPczQe9nXb5/GVKOeN1Y7SUQqDglH5jbmqwdR3MpUs/DgS6qXH8E\nNeKGfBNAR4OHXviPdIwH8aqL2HVk7I6Uv6+/gVFbY5toQ+ldb/z5Vok7sz8K\nUsiO\r\n=t0cn\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.0.0-rc5","date":{"ts":1524253458499,"rel":"2 years ago"},"dist":{"integrity":"sha512-BRYS7jsNkfLAqGu4dZW3kp6CmqiWKrComvfsIMYdsnpPre7g8BIw63nWRyX69vxyLYvZdszcEyxJkJmILXd/pA==","shasum":"bc383d32b0e774d387a66e77290fe78766468f34","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.0-rc5.tgz","fileCount":36,"unpackedSize":148880,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2kMUCRA9TVsSAnZWagAAY+cP/3wY1LaKXW1fwXmqpDNe\nBCz2l1h7d5Oc1v3WThuYgjwbPikDDKjbedIfWA0SYHGnMQf4yDEGSRlyndaM\noYrLxRByJTgB54adVxB0MJ0rs+r+LeM5iR1wf/lVj6hhhQ3rBa826/BIHguU\ngG3jrqH8ZgxIfdi4j0Ry2w9NlGbGPDR0I6aDeqmeWx9sUGNNwkna7a/H4/Fy\n2wLmvWdPnR1d3Mwc5JVamOgHmOXwrwHm2gULnrtwT009ZVyrWgGmM0Q0kjsS\nM1Vli8epKiuUl6Rh63gUeXeX4GpNqMNf6cuWG7DfDG0VTQaAC2H7C3tEdaGn\nVz8TPl/lvzdbIg993taEE71CUOg2r8AkzTDeP/+QGvGX/XT+jLII0iIge6UI\nMMcHgUVdHQmXFQZre0oYpHE2biNsJRHa63xdshNy7+L1Sqy4etRDSwFvhrPm\n0TCteoJ+7E7jH7AEBeS4UjC4Q08OE82Evw39kQdDP3ij4usVb2QI6E+6LncH\nOO8skDcbwviHMhNCn0NYzxOT9b4jOSS9s+e4tSZBuYcH+zr6R99E6B8fl6UY\nAQSvaTyN9NoGQMNW2snX3ihJNVbP4C5uwCQ1u4Mql/gb8G/dyfC7lrh1G5MD\nox6cwa6DtbkSoyoCsRWVJPHRcz8NgBwyci+JFYeewD43TEOfylemPnKaawyA\nHXlN\r\n=JXWf\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.4.2","date":{"ts":1524243306628,"rel":"2 years ago"},"dist":{"integrity":"sha512-4S/Ad4ZfSNl8OccCLxnJmNISWcm2joa6Q0YGDxlxMzH0fgSwWsjMt+SmlNwCqdpaPg3ev1HKkMBsIiXeSUwpbA==","shasum":"3ca01f763116fc48db61053b7544e750431f8db0","tarball":"https://registry.npmjs.org/winston/-/winston-2.4.2.tgz","fileCount":36,"unpackedSize":175387,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2htsCRA9TVsSAnZWagAAqPwP+wa4pALvTCdbCD5G2C78\nq1qQN3RzkM7hpD9Aq0XqjX+mXjC6VbDgZcNcihXps9zmhT4cCtG/lQCoIJwK\n+/9yHEiMcJPmP0L4kNBVRbC8tASNm6lpYhrtn6PN2giA2xFadbwjtZzi6Nhb\nXnickaoO7W7s20OfGZDh7OvivBhXWntQHyZorM8x/iXUO7NvNMtRH3bdnXr3\nKBTYgSYDyA1fwLijZbqksrk0j0tVX3P70HYaEjaY0LUwzKJzsBgxJJYsNdSY\nlmGcp7Yvt4Y5l0ZKJMnQUkOpxWmQ24jrFGg3CBSocHtwaCnGd1eYrzYdtzcM\nd5LZKCWRbtaRA16ItKwNhw4Foew3L+2emjJV6fTiJWFHOOccg0CtRUT4ofJT\ndY7yV8rcgFuMvE+cgbVw7UxS2JBXEcDPtBZrNjbZa94PNlYak2REKdVpQRLp\nApaxXJ6FOm0n8qXs4MB+cM1yWbVl028k7z+JqbHsdkfS6c+W0gHnR7Y90eFi\nkfgBrLKGqdgoL8ENjWi08YMAUdbEaYPhP5LA3oHU8glK8shQ3C9OEG86Yc0R\nxJ58LP3VfrVelS3+VP7MML+UgtIJqJnsIy8Xp67Rp3qzw9VjZStfGAzeF3L0\nkz3sK68v+39p6+uc7pEGFL0UsIHlF1bP5GcFftkbES0Ble+Nry9iaf2akIvx\n6AT+\r\n=qFsT\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.0.0-rc4","date":{"ts":1523035013520,"rel":"2 years ago"},"dist":{"integrity":"sha512-wyLu9Uky/uB6F6VqVyodYMevBigxlX0qTIbQhD39+G/7XiMf4G4oX9meMMDJNTvCdZyUUUFXOidnLW5yR3oedQ==","shasum":"2e34e05b1130bae677c79b3ace993d091e678c5f","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.0-rc4.tgz","fileCount":30,"unpackedSize":145093}},{"version":"3.0.0-rc3","date":{"ts":1521223180002,"rel":"2 years ago"},"dist":{"integrity":"sha512-KPvs53IB5m6wMHAm4j5DgL8MkgfXZKjwNqzTr3IA8SijHTXeN6l8ebyR24rlCSVotuqtXhooFHvYLbA3fAViSw==","shasum":"dd31ebbd76e35968dcf5f130e57473329534904e","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.0-rc3.tgz","fileCount":30,"unpackedSize":143167}},{"version":"3.0.0-rc2","date":{"ts":1520623085047,"rel":"2 years ago"},"dist":{"integrity":"sha512-wkyf9OzpX6gWJEb8zw1NM6pR2mz2CbrH6ziqDPoVWDDapzFhfJ417N43nSG4aS/ZOC8PZfCvYz3hE5gbEQwGJg==","shasum":"c30d043b20822c5f6da4797242108b1c5860a3a2","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.0-rc2.tgz","fileCount":30,"unpackedSize":142343}},{"version":"2.4.1","date":{"ts":1520622437315,"rel":"2 years ago"},"dist":{"integrity":"sha512-k/+Dkzd39ZdyJHYkuaYmf4ff+7j+sCIy73UCOWHYA67/WXU+FF/Y6PF28j+Vy7qNRPHWO+dR+/+zkoQWPimPqg==","shasum":"a3a9265105564263c6785b4583b8c8aca26fded6","tarball":"https://registry.npmjs.org/winston/-/winston-2.4.1.tgz","fileCount":31,"unpackedSize":172485}},{"version":"3.0.0-rc1","date":{"ts":1508444239718,"rel":"3 years ago"},"dist":{"integrity":"sha512-aNtKirnK2UEe5v56SK0TIEr5ylyYdXyjAaIJXZTk21UlNx7FQclTkVU2T1ZzMtdDM+Rk2b7vrI/e/4n8U84XaQ==","shasum":"982bc0ad4ef5c53000ca68036d78a3deaa28cac5","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.0-rc1.tgz"}},{"version":"3.0.0-rc0","date":{"ts":1506921436169,"rel":"3 years ago"},"dist":{"shasum":"08ee0b1304cd671f1708ea360ffeeb4135d6dcf3","tarball":"https://registry.npmjs.org/winston/-/winston-3.0.0-rc0.tgz"}},{"version":"2.4.0","date":{"ts":1506920354456,"rel":"3 years ago"},"dist":{"shasum":"808050b93d52661ed9fb6c26b3f0c826708b0aee","tarball":"https://registry.npmjs.org/winston/-/winston-2.4.0.tgz"}},{"version":"2.3.1","date":{"ts":1484937499965,"rel":"3 years ago"},"dist":{"shasum":"0b48420d978c01804cf0230b648861598225a119","tarball":"https://registry.npmjs.org/winston/-/winston-2.3.1.tgz"}},{"version":"2.3.0","date":{"ts":1478060836329,"rel":"4 years ago"},"dist":{"shasum":"207faaab6fccf3fe493743dd2b03dbafc7ceb78c","tarball":"https://registry.npmjs.org/winston/-/winston-2.3.0.tgz"}},{"version":"2.2.0","date":{"ts":1456439000901,"rel":"4 years ago"},"dist":{"shasum":"2c853dd87ab552a8e8485d72cbbf9a2286f029b7","tarball":"https://registry.npmjs.org/winston/-/winston-2.2.0.tgz"}},{"version":"2.1.1","date":{"ts":1447883524196,"rel":"5 years ago"},"dist":{"shasum":"3c9349d196207fd1bdff9d4bc43ef72510e3a12e","tarball":"https://registry.npmjs.org/winston/-/winston-2.1.1.tgz"}},{"version":"2.1.0","date":{"ts":1446616899648,"rel":"5 years ago"},"dist":{"shasum":"34688215cc8dbb784838b9aa626e73aee44fe4b6","tarball":"https://registry.npmjs.org/winston/-/winston-2.1.0.tgz"}},{"version":"2.0.1","date":{"ts":1446536195149,"rel":"5 years ago"},"dist":{"shasum":"999d682648f0b24ae4a3096d774409c5bb86d87c","tarball":"https://registry.npmjs.org/winston/-/winston-2.0.1.tgz"}},{"version":"2.0.0","date":{"ts":1446168642064,"rel":"5 years ago"},"dist":{"shasum":"d3ad5dc2db5ce716ff1825b9283cbfbb6f481aee","tarball":"https://registry.npmjs.org/winston/-/winston-2.0.0.tgz"}},{"version":"1.1.2","date":{"ts":1446109224773,"rel":"5 years ago"},"dist":{"shasum":"68edd769ff79d4f9528cf0e5d80021aade67480c","tarball":"https://registry.npmjs.org/winston/-/winston-1.1.2.tgz"}},{"version":"1.1.1","date":{"ts":1445189160110,"rel":"5 years ago"},"dist":{"shasum":"9f1887afb92cc0f23459d20de2a185b5ae11a9b0","tarball":"https://registry.npmjs.org/winston/-/winston-1.1.1.tgz"}},{"version":"1.1.0","date":{"ts":1444403315400,"rel":"5 years ago"},"dist":{"shasum":"8e86ff561ccea5007711712159c21ed057209011","tarball":"https://registry.npmjs.org/winston/-/winston-1.1.0.tgz"}},{"version":"1.0.2","date":{"ts":1443218510066,"rel":"5 years ago"},"dist":{"shasum":"351c58e2323f8a4ca29a45195aa9aa3b4c35d76f","tarball":"https://registry.npmjs.org/winston/-/winston-1.0.2.tgz"}},{"version":"1.0.1","date":{"ts":1435369807404,"rel":"5 years ago"},"dist":{"shasum":"4c6f5a1167ebc516ac29b76e4eadb873c15289a4","tarball":"https://registry.npmjs.org/winston/-/winston-1.0.1.tgz"}},{"version":"1.0.0","date":{"ts":1428447773645,"rel":"5 years ago"},"dist":{"shasum":"30e36e0041fc0a864b0029565719e4dc41d026a4","tarball":"https://registry.npmjs.org/winston/-/winston-1.0.0.tgz"}},{"version":"0.9.0","date":{"ts":1422989608304,"rel":"5 years ago"},"dist":{"shasum":"b5726e6c42291e305e36286ce7ae9f3b74a527a8","tarball":"https://registry.npmjs.org/winston/-/winston-0.9.0.tgz"}},{"version":"0.8.3","date":{"ts":1415144758648,"rel":"6 years ago"},"dist":{"shasum":"64b6abf4cd01adcaefd5009393b1d8e8bec19db0","tarball":"https://registry.npmjs.org/winston/-/winston-0.8.3.tgz"}},{"version":"0.8.2","date":{"ts":1415138729713,"rel":"6 years ago"},"dist":{"shasum":"1af036705152aa7ea62b60c11df4d21614e845b8","tarball":"https://registry.npmjs.org/winston/-/winston-0.8.2.tgz"}},{"version":"0.8.1","date":{"ts":1412627860790,"rel":"6 years ago"},"dist":{"shasum":"86bc9ec6c02aefe5c6dfdb88f3aff1b19d629216","tarball":"https://registry.npmjs.org/winston/-/winston-0.8.1.tgz"}},{"version":"0.8.0","date":{"ts":1410810217312,"rel":"6 years ago"},"dist":{"shasum":"61d0830fa699706212206b0a2b5ca69a93043668","tarball":"https://registry.npmjs.org/winston/-/winston-0.8.0.tgz"}},{"version":"0.7.3","date":{"ts":1395725513165,"rel":"6 years ago"},"dist":{"shasum":"7ae313ba73fcdc2ecb4aa2f9cd446e8298677266","tarball":"https://registry.npmjs.org/winston/-/winston-0.7.3.tgz"}},{"version":"0.7.2","date":{"ts":1371222755844,"rel":"7 years ago"},"dist":{"shasum":"2570ae1aa1d8a9401e8d5a88362e1cf936550ceb","tarball":"https://registry.npmjs.org/winston/-/winston-0.7.2.tgz"}},{"version":"0.7.1","date":{"ts":1366540761275,"rel":"7 years ago"},"dist":{"shasum":"e291ab24eddbf79ea40ff532619277a0d30b0eb3","tarball":"https://registry.npmjs.org/winston/-/winston-0.7.1.tgz"}},{"version":"0.7.0","date":{"ts":1366523876796,"rel":"7 years ago"},"dist":{"shasum":"6dc5c097897df706ea4eb555adcfd08c050b15e6","tarball":"https://registry.npmjs.org/winston/-/winston-0.7.0.tgz"}},{"version":"0.6.2","date":{"ts":1341730942663,"rel":"8 years ago"},"dist":{"shasum":"4144fe2586cdc19a612bf8c035590132c9064bd2","tarball":"https://registry.npmjs.org/winston/-/winston-0.6.2.tgz"}},{"version":"0.6.1","date":{"ts":1338492464116,"rel":"8 years ago"},"dist":{"shasum":"22bfc4c995e307bf61603c0df5f3abbb319f7495","tarball":"https://registry.npmjs.org/winston/-/winston-0.6.1.tgz"}},{"version":"0.5.11","date":{"ts":1332547182494,"rel":"8 years ago"},"dist":{"shasum":"9d84ead981a497a92ddf76616137abef661c414f","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.11.tgz"}},{"version":"0.5.10","date":{"ts":1329888113531,"rel":"8 years ago"},"dist":{"shasum":"34167c79a07d2757f11407f766150acf97de9b70","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.10.tgz"}},{"version":"0.5.9","date":{"ts":1322819094777,"rel":"9 years ago"},"dist":{"shasum":"3160f86b2298781599ef061bac742752e7cc3c3a","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.9.tgz"}},{"version":"0.5.8","date":{"ts":1322636541061,"rel":"9 years ago"},"dist":{"shasum":"8a2f068613f25975d810d7f5dd45df141d67edb9","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.8.tgz"}},{"version":"0.5.7","date":{"ts":1321822425416,"rel":"9 years ago"},"dist":{"shasum":"50597e0e6860eef9f9716a709b2857aab817e51c","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.7.tgz"}},{"version":"0.5.6","date":{"ts":1319263973069,"rel":"9 years ago"},"dist":{"shasum":"0f4bae04ebe00c8bfd0a351797c3d2ce0416d033","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.6.tgz"}},{"version":"0.5.5","date":{"ts":1318188557799,"rel":"9 years ago"},"dist":{"shasum":"f4f859ea6d7cb38cb2f4496b4fa5ea12050e5c92","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.5.tgz"}},{"version":"0.5.4","date":{"ts":1318031630549,"rel":"9 years ago"},"dist":{"shasum":"e6d5fbfe6549a8a3e39900ad68967bc74c1c1586","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.4.tgz"}},{"version":"0.5.3","date":{"ts":1316806030866,"rel":"9 years ago"},"dist":{"shasum":"2b40e4eaacfe76b27e0c0436e626aa820da5990e","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.3.tgz"}},{"version":"0.5.2","date":{"ts":1316063640793,"rel":"9 years ago"},"dist":{"shasum":"5adcbf0a8a872e3b3584a11b1173765329b00765","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.2.tgz"}},{"version":"0.5.1","date":{"ts":1315906525860,"rel":"9 years ago"},"dist":{"shasum":"2b2f40cdbf469b60f1885cc549757c4b9973e5ea","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.1.tgz"}},{"version":"0.5.0","date":{"ts":1315848707276,"rel":"9 years ago"},"dist":{"shasum":"38269506eaf446ecb8808295ea1d3da05010ab82","tarball":"https://registry.npmjs.org/winston/-/winston-0.5.0.tgz"}},{"version":"0.4.1","date":{"ts":1315717242302,"rel":"9 years ago"},"dist":{"shasum":"ed47572fc787a266d4c65fcf14151e0298907b95","tarball":"https://registry.npmjs.org/winston/-/winston-0.4.1.tgz"}},{"version":"0.4.0","date":{"ts":1314009214512,"rel":"9 years ago"},"dist":{"shasum":"c66bffffbb94b0c5d5173871fc26aa485be01a28","tarball":"https://registry.npmjs.org/winston/-/winston-0.4.0.tgz"}},{"version":"0.3.5","date":{"ts":1312901996544,"rel":"9 years ago"},"dist":{"shasum":"04d3fc80b7049872c065ee8a912c0fd3f5199668","tarball":"https://registry.npmjs.org/winston/-/winston-0.3.5.tgz"}},{"version":"0.3.4","date":{"ts":1312438630075,"rel":"9 years ago"},"dist":{"shasum":"bade1b45c944731970d8df9fb1d1927b0fbcf697","tarball":"https://registry.npmjs.org/winston/-/winston-0.3.4.tgz"}},{"version":"0.3.3","date":{"ts":1311486701205,"rel":"9 years ago"},"dist":{"shasum":"e4b38e7117e5cc91dc632a2338efbbbdcdf72034","tarball":"https://registry.npmjs.org/winston/-/winston-0.3.3.tgz"}},{"version":"0.2.11","date":{"ts":1306720984360,"rel":"9 years ago"},"dist":{"shasum":"596c131ac552a2194b37ba622ded9f887131599c","tarball":"https://registry.npmjs.org/winston/-/winston-0.2.11.tgz"}}],"deprecations":[]},"package":"winston","isStarred":false,"packageVersion":{"author":{"name":"Charlie Robbins","avatars":{"small":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"charlie.robbins@gmail.com"},"description":"A logger for just about everything.","homepage":"https://github.com/winstonjs/winston#readme","repository":"https://github.com/winstonjs/winston","keywords":["winston","logger","logging","logs","sysadmin","bunyan","pino","loglevel","tools","json","stream"],"dependencies":{"async":"^2.6.1","diagnostics":"^1.1.1","is-stream":"^1.1.0","logform":"^2.1.1","one-time":"0.0.4","readable-stream":"^3.1.1","stack-trace":"0.0.x","triple-beam":"^1.3.0","winston-transport":"^4.3.0"},"devDependencies":{"@babel/cli":"^7.2.3","@babel/core":"^7.2.2","@babel/preset-env":"^7.3.1","@types/node":"^10.12.19","abstract-winston-transport":"\u003e= 0.5.1","assume":"^2.1.0","colors":"^1.3.3","cross-spawn-async":"^2.2.5","eslint-config-populist":"^4.2.0","hock":"^1.3.3","mocha":"^5.2.0","nyc":"^13.1.0","rimraf":"^2.6.3","split2":"^3.1.0","std-mocks":"^1.0.1","through2":"^3.0.0","winston-compat":"^0.1.4"},"maintainers":[{"name":"3rdeden","avatars":{"small":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"npm@3rd-Eden.com"},{"name":"chjj","avatars":{"small":"https://s.gravatar.com/avatar/96160627de1a1c142b3b5f1058dff07f?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/96160627de1a1c142b3b5f1058dff07f?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/96160627de1a1c142b3b5f1058dff07f?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"chjjeffrey@gmail.com"},{"name":"indexzero","avatars":{"small":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/d43e8ea63b61e7669ded5b9d3c2e980f?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"charlie.robbins@gmail.com"},{"name":"jcrugzz","avatars":{"small":"https://s.gravatar.com/avatar/63c522d0daa5acc2e37046489ab6cc39?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/63c522d0daa5acc2e37046489ab6cc39?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/63c522d0daa5acc2e37046489ab6cc39?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"jcrugzz@gmail.com"},{"name":"pose","avatars":{"small":"https://s.gravatar.com/avatar/9d8d8bff4484ddadf83684d88cb10188?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/9d8d8bff4484ddadf83684d88cb10188?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/9d8d8bff4484ddadf83684d88cb10188?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"albertopose@gmail.com"},{"name":"v1","avatars":{"small":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/203075c33f2e68ed3d7bafd3ac0fae3b?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"npm@3rd-Eden.com"}],"name":"winston","license":"MIT","version":"3.2.1","versions":[],"deprecations":[]},"private":false,"ghapi":"https://api.github.com/repos/winstonjs/winston","files":{"noContentCode":"NOORG"}},"chunks":{"commons":["commons.429f3059e540b2c7cc49.js","commons.429f3059e540b2c7cc49.js.map"],"styles":["styles.8ea0c2fab78a753ab019.css","minicssextractbug.ca74408b353c740d5d0c.js","styles.8ea0c2fab78a753ab019.css.map","minicssextractbug.ca74408b353c740d5d0c.js.map"],"advisories/detail":["advisories/detail.0132958db6d18c0e6e01.js","advisories/detail.0132958db6d18c0e6e01.js.map"],"advisories/list":["advisories/list.3290ddc4e23207bdb4b4.js","advisories/list.3290ddc4e23207bdb4b4.js.map"],"advisories/report":["advisories/report.b064331d619988111965.js","advisories/report.b064331d619988111965.js.map"],"advisories/versions":["advisories/versions.d67b64d44aaa6fc39045.js","advisories/versions.d67b64d44aaa6fc39045.js.map"],"auth/cli":["auth/cli.1d16c91afb0c4e0635f2.js","auth/cli.1d16c91afb0c4e0635f2.js.map"],"auth/common-passwords":["auth/common-passwords.436ae493e0cbdc0c6db1.js","auth/common-passwords.436ae493e0cbdc0c6db1.js.map"],"auth/escalate":["auth/escalate.77815e32a3160e2cc4f8.js","auth/escalate.77815e32a3160e2cc4f8.js.map"],"auth/forgot":["auth/forgot.ca1f1907a0dafb38be4e.js","auth/forgot.ca1f1907a0dafb38be4e.js.map"],"auth/forgot-sent":["auth/forgot-sent.ad98b7e97894a93df025.js","auth/forgot-sent.ad98b7e97894a93df025.js.map"],"auth/forgot-sent-anonymized":["auth/forgot-sent-anonymized.4497c80cd62374748250.js","auth/forgot-sent-anonymized.4497c80cd62374748250.js.map"],"auth/invite-signup":["auth/invite-signup.ac5f299fece9e43e617b.js","auth/invite-signup.ac5f299fece9e43e617b.js.map"],"auth/login":["auth/login.7c1f7c0107ad04fd59ed.js","auth/login.7c1f7c0107ad04fd59ed.js.map"],"auth/otp":["auth/otp.48bbad1a86ecd76e44cc.js","auth/otp.48bbad1a86ecd76e44cc.js.map"],"auth/reset-password":["auth/reset-password.fc1738c87ab5c3ef247d.js","auth/reset-password.fc1738c87ab5c3ef247d.js.map"],"auth/signup":["auth/signup.b40074058b4e707ea227.js","auth/signup.b40074058b4e707ea227.js.map"],"auth/sso-signup":["auth/sso-signup.0b7610c6ef4dda2ec44c.js","auth/sso-signup.0b7610c6ef4dda2ec44c.js.map"],"billing/detail":["billing/detail.f8e9ee9a27affb78dfc3.js","billing/detail.f8e9ee9a27affb78dfc3.js.map"],"billing/downgrade":["billing/downgrade.53230b3ff30717d1a4b7.js","billing/downgrade.53230b3ff30717d1a4b7.js.map"],"billing/upgrade":["billing/upgrade.6b87dc282722783c2cdf.js","billing/upgrade.6b87dc282722783c2cdf.js.map"],"contact/contact":["contact/contact.af3dd468f54370ffc937.js","contact/contact.af3dd468f54370ffc937.js.map"],"debug/badstatus":["debug/badstatus.b25763c32e9962e75983.js","debug/badstatus.b25763c32e9962e75983.js.map"],"debug/detail":["debug/detail.fa739fbd6bffd23fdec4.js","debug/detail.fa739fbd6bffd23fdec4.js.map"],"debug/failcomponent":["debug/failcomponent.64ec10ea7c542e7d5643.js","debug/failcomponent.64ec10ea7c542e7d5643.js.map"],"egg/egg":["egg/egg.79edc258ae578ab94361.js","egg/egg.79edc258ae578ab94361.js.map"],"enterprise/complete":["enterprise/complete.7d2a0a50838c3cf4c282.js","enterprise/complete.7d2a0a50838c3cf4c282.js.map"],"enterprise/license-paid":["enterprise/license-paid.263c8eefe4a649aa3178.js","enterprise/license-paid.263c8eefe4a649aa3178.js.map"],"enterprise/license-purchase":["enterprise/license-purchase.b680ce084f4e43676354.js","enterprise/license-purchase.b680ce084f4e43676354.js.map"],"enterprise/on-site-buy-now":["enterprise/on-site-buy-now.2dcfd4982a9280c07332.js","enterprise/on-site-buy-now.2dcfd4982a9280c07332.js.map"],"enterprise/on-site-contact-confirmation":["enterprise/on-site-contact-confirmation.1acc1b1075cb9137ec4a.js","enterprise/on-site-contact-confirmation.1acc1b1075cb9137ec4a.js.map"],"enterprise/on-site-trial":["enterprise/on-site-trial.bb39b9fe336832948cad.js","enterprise/on-site-trial.bb39b9fe336832948cad.js.map"],"enterprise/orgs-terms":["enterprise/orgs-terms.ec9d8eb743ba7ee1d6f2.js","enterprise/orgs-terms.ec9d8eb743ba7ee1d6f2.js.map"],"enterprise/signup-confirmation":["enterprise/signup-confirmation.e9a47426323eb52f1bf3.js","enterprise/signup-confirmation.e9a47426323eb52f1bf3.js.map"],"errors/not-found":["errors/not-found.97bd5716ece086aaad31.js","errors/not-found.97bd5716ece086aaad31.js.map"],"errors/server":["errors/server.fbdccd9b2cccc09eac2a.js","errors/server.fbdccd9b2cccc09eac2a.js.map"],"errors/template":["errors/template.8ffbdf0311437fe50302.js","errors/template.8ffbdf0311437fe50302.js.map"],"flatpage/flatpage":["flatpage/flatpage.5974d2428c425547961c.js","flatpage/flatpage.5974d2428c425547961c.js.map"],"homepage/homepage":["homepage/homepage.7d324375879de472ca8b.js","homepage/homepage.7d324375879de472ca8b.js.map"],"homepage/homepage-logged-in":["homepage/homepage-logged-in.3f80425d936ee6f3087e.js","homepage/homepage-logged-in.3f80425d936ee6f3087e.js.map"],"npme/invite":["npme/invite.e7776f7993d32a9dcab6.js","npme/invite.e7776f7993d32a9dcab6.js.map"],"npme/invites":["npme/invites.189a31a0dedc3e8e0147.js","npme/invites.189a31a0dedc3e8e0147.js.map"],"npme/login":["npme/login.6da65eb556a96fab728a.js","npme/login.6da65eb556a96fab728a.js.map"],"npme/overrides/components/tutorials/creating-org":["npme/overrides/components/tutorials/creating-org.5ba2f5f246e7e935d5b1.js","npme/overrides/components/tutorials/creating-org.5ba2f5f246e7e935d5b1.js.map"],"npme/overrides/components/tutorials/default-registry":["npme/overrides/components/tutorials/default-registry.7a6a34d4866fa0f2a920.js","npme/overrides/components/tutorials/default-registry.7a6a34d4866fa0f2a920.js.map"],"npme/overrides/components/tutorials/installing-package":["npme/overrides/components/tutorials/installing-package.d8774ff2ee7dca298875.js","npme/overrides/components/tutorials/installing-package.d8774ff2ee7dca298875.js.map"],"npme/overrides/components/tutorials/publishing-package":["npme/overrides/components/tutorials/publishing-package.d0ea8e384d063b47f66d.js","npme/overrides/components/tutorials/publishing-package.d0ea8e384d063b47f66d.js.map"],"npme/overrides/components/tutorials/tabs":["npme/overrides/components/tutorials/tabs.7673682b6d66d0b1de5a.js","npme/overrides/components/tutorials/tabs.7673682b6d66d0b1de5a.js.map"],"npme/overrides/homepage":["npme/overrides/homepage.8ff91fccaa8e023bb039.js","npme/overrides/homepage.8ff91fccaa8e023bb039.js.map"],"npme/overrides/orgs/create":["npme/overrides/orgs/create.d9ead4893c30a8601ad0.js","npme/overrides/orgs/create.d9ead4893c30a8601ad0.js.map"],"npme/settings":["npme/settings.06a67d4f7c8a71721d95.js","npme/settings.06a67d4f7c8a71721d95.js.map"],"npme/setup":["npme/setup.c12d71f6b9ecbff6f38c.js","npme/setup.c12d71f6b9ecbff6f38c.js.map"],"npme/sso-config":["npme/sso-config.e84454b27e4a552c01af.js","npme/sso-config.e84454b27e4a552c01af.js.map"],"npme/users":["npme/users.42d3195bd5c2a6022750.js","npme/users.42d3195bd5c2a6022750.js.map"],"orgs/create":["orgs/create.171bca2ded58b4e14c5e.js","orgs/create.171bca2ded58b4e14c5e.js.map"],"orgs/detail":["orgs/detail.8fa815fcb0c41c9987f1.js","orgs/detail.8fa815fcb0c41c9987f1.js.map"],"orgs/invite":["orgs/invite.28f8cd75195b676071fb.js","orgs/invite.28f8cd75195b676071fb.js.map"],"orgs/upgrade":["orgs/upgrade.5235274d83feb44fbb07.js","orgs/upgrade.5235274d83feb44fbb07.js.map"],"package-list/dependents-list":["package-list/dependents-list.e9a601eeb2b555f452c3.js","package-list/dependents-list.e9a601eeb2b555f452c3.js.map"],"package-list/most-depended":["package-list/most-depended.6e1ab19ed1908586a5c9.js","package-list/most-depended.6e1ab19ed1908586a5c9.js.map"],"package-list/recently-updated":["package-list/recently-updated.69c946c7f737f0f0dc65.js","package-list/recently-updated.69c946c7f737f0f0dc65.js.map"],"package/package":["package/package.be8e9b4834418a2b9c38.js","package/package.be8e9b4834418a2b9c38.js.map"],"profile/profile":["profile/profile.b2109d4d3217b9406608.js","profile/profile.b2109d4d3217b9406608.js.map"],"search/search":["search/search.e995fcdd89068743db8c.js","search/search.e995fcdd89068743db8c.js.map"],"settings/change-password":["settings/change-password.78b06f67ff5dfb6a8879.js","settings/change-password.78b06f67ff5dfb6a8879.js.map"],"settings/email":["settings/email.ed51dd0d469cd05a95ca.js","settings/email.ed51dd0d469cd05a95ca.js.map"],"settings/memberships":["settings/memberships.61f459f4849c34f3c46a.js","settings/memberships.61f459f4849c34f3c46a.js.map"],"settings/packages":["settings/packages.dddbfb89bd1f7b383751.js","settings/packages.dddbfb89bd1f7b383751.js.map"],"settings/profile":["settings/profile.6d519ddcacdea976fdd5.js","settings/profile.6d519ddcacdea976fdd5.js.map"],"teams/create":["teams/create.e41bb7c3fe29b31b6fe2.js","teams/create.e41bb7c3fe29b31b6fe2.js.map"],"teams/detail":["teams/detail.aa21f1c0cff81d5a9737.js","teams/detail.aa21f1c0cff81d5a9737.js.map"],"teams/list":["teams/list.1d56429a8e3585a8f589.js","teams/list.1d56429a8e3585a8f589.js.map"],"teams/packages":["teams/packages.981aa0592e10d82567c5.js","teams/packages.981aa0592e10d82567c5.js.map"],"teams/users":["teams/users.3d3acaef1bfbaa0cee70.js","teams/users.3d3acaef1bfbaa0cee70.js.map"],"tfa/enable":["tfa/enable.4c2e2bc3ec4f1f9e4ef9.js","tfa/enable.4c2e2bc3ec4f1f9e4ef9.js.map"],"tfa/showTFAQRCode":["tfa/showTFAQRCode.050331203dfe9f0ebf60.js","tfa/showTFAQRCode.050331203dfe9f0ebf60.js.map"],"tfa/showTFASuccess":["tfa/showTFASuccess.d9ce251323915d5333d3.js","tfa/showTFASuccess.d9ce251323915d5333d3.js.map"],"tfa/tfa-mode-selection":["tfa/tfa-mode-selection.e84e19b0be79c26b2a06.js","tfa/tfa-mode-selection.e84e19b0be79c26b2a06.js.map"],"tfa/tfa-password-entry":["tfa/tfa-password-entry.ef2c4000b312d799ab94.js","tfa/tfa-password-entry.ef2c4000b312d799ab94.js.map"],"tokens/create":["tokens/create.1752db5cead6a7ea5273.js","tokens/create.1752db5cead6a7ea5273.js.map"],"tokens/list":["tokens/list.9c84d82b677ac313ec85.js","tokens/list.9c84d82b677ac313ec85.js.map"],"vouchers/view":["vouchers/view.cedbc4d21f18db2bf110.js","vouchers/view.cedbc4d21f18db2bf110.js.map"]},"hash":"429f3059e540b2c7cc49","name":"package/package","containerId":"app","headerName":"x-spiferack","publicPath":"https://static.npmjs.com/"}</script><script crossorigin="anonymous" src="https://static.npmjs.com/commons.429f3059e540b2c7cc49.js"></script>
<script crossorigin="anonymous" src="https://static.npmjs.com/minicssextractbug.ca74408b353c740d5d0c.js"></script>
<script crossorigin="anonymous" src="https://static.npmjs.com/package/package.be8e9b4834418a2b9c38.js"></script>
  </body>
</html>


<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://static.npmjs.com/styles.8ea0c2fab78a753ab019.css" />
      <title data-react-helmet="true">eslint-plugin-flowtype  -  npm</title>
      <meta data-react-helmet="true" http-equiv="cleartype" content="on"/><meta data-react-helmet="true" name="apple-mobile-web-app-capable" content="yes"/><meta data-react-helmet="true" name="viewport" content="width=device-width,minimum-scale=1.0,initial-scale=1,user-scalable=yes"/><meta data-react-helmet="true" property="og:image" content="https://static.npmjs.com/338e4905a2684ca96e08c7780fc68412.png"/><meta data-react-helmet="true" name="msapplication-TileColor" content="#cb3837"/><meta data-react-helmet="true" name="msapplication-TileImage" content="https://static.npmjs.com/7a7ffabbd910fc60161bc04f2cee4160.png"/><meta data-react-helmet="true" name="msapplication-config" content="https://static.npmjs.com/668aac888e52ae13cac9cfd71fabd31f.xml"/><meta data-react-helmet="true" name="theme-color" content="#cb3837"/><meta data-react-helmet="true" name="description" content="Flowtype linting rules for ESLint."/><meta data-react-helmet="true" property="og:description" content="Flowtype linting rules for ESLint."/><meta data-react-helmet="true" property="og:title" content="eslint-plugin-flowtype"/><meta data-react-helmet="true" property="og:url" content="https://www.npmjs.com/package/eslint-plugin-flowtype"/><meta data-react-helmet="true" property="og:site_name" content="npm"/><meta data-react-helmet="true" name="keywords" content="eslint,plugin,flowtype"/><meta data-react-helmet="true" name="twitter:card" content="summary"/><meta data-react-helmet="true" name="twitter:url" content="https://www.npmjs.com/package/eslint-plugin-flowtype"/><meta data-react-helmet="true" name="twitter:title" content="npm: eslint-plugin-flowtype"/><meta data-react-helmet="true" name="twitter:description" content="Flowtype linting rules for ESLint."/>
      <link data-react-helmet="true" rel="apple-touch-icon" sizes="120x120" href="https://static.npmjs.com/58a19602036db1daee0d7863c94673a4.png"/><link data-react-helmet="true" rel="apple-touch-icon" sizes="144x144" href="https://static.npmjs.com/7a7ffabbd910fc60161bc04f2cee4160.png"/><link data-react-helmet="true" rel="apple-touch-icon" sizes="152x152" href="https://static.npmjs.com/34110fd7686e2c90a487ca98e7336e99.png"/><link data-react-helmet="true" rel="apple-touch-icon" sizes="180x180" href="https://static.npmjs.com/3dc95981de4241b35cd55fe126ab6b2c.png"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/b0f1a8318363185cc2ea6a40ac23eeb2.png" sizes="32x32"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/1996fcfdf7ca81ea795f67f093d7f449.png" sizes="230x230"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/f1786e9b7cba9753ca7b9c40e8b98f67.png" sizes="96x96"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/5f6e93af5bf0f5dcdd1eecdac99f51ee.png" sizes="192x192"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/c426a1116301d1fd178c51522484127a.png" sizes="228x228"/><link data-react-helmet="true" rel="icon" type="image/png" href="https://static.npmjs.com/da3ab40fb0861d15c83854c29f5f2962.png" sizes="16x16"/><link data-react-helmet="true" rel="stylesheet" href="https://static.npmjs.com/6f0fec69a6599ac07cbe906fef441123.css"/>
      
      <script data-react-helmet="true" type="text/javascript" id="hs-script-loader" onload async="true" defer="true" src="https://js.hs-scripts.com/5326678.js"></script>
    
  </head>
  <body>
    <div id="app"><div class="_452c3ec4 d68c66a8"><ul class="cf325dbd list ma0 pa0 tr z-999" aria-live="polite"></ul><div class="flex flex-column vh-100"><header class="_755f5b0f bg-white z-2 bb b--black-20"><div class="a6ff2de1"><a class="_1c6d86d1" href="https://github.blog/2020-04-15-npm-has-joined-github/"><svg class="_93bbf0b4" viewBox="0 0 780 250"><path fill="white" d="M240,250h100v-50h100V0H240V250z M340,50h50v100h-50V50z M480,0v200h100V50h50v150h50V50h50v150h50V0H480z M0,200h100V50h50v150h50V0H0V200z"></path></svg><span><strong>npm</strong> is now a part of <strong>GitHub</strong></span><svg class="_5532dff2" width="33px" height="33px" viewBox="0 0 33 33" version="1.1" role="img" xmlns="http://www.w3.org/2000/svg"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(-136.000000, -331.000000)"><path fill="white" d="M152.608,331.455 C143.614,331.455 136.32,338.748 136.32,347.745 C136.32,354.942 140.987,361.047 147.46,363.201 C148.275,363.351 148.572,362.848 148.572,362.416 C148.572,362.029 148.558,361.005 148.55,359.646 C144.019,360.63 143.063,357.462 143.063,357.462 C142.322,355.58 141.254,355.079 141.254,355.079 C139.775,354.069 141.366,354.089 141.366,354.089 C143.001,354.204 143.861,355.768 143.861,355.768 C145.314,358.257 147.674,357.538 148.602,357.121 C148.75,356.069 149.171,355.351 149.636,354.944 C146.019,354.533 142.216,353.135 142.216,346.893 C142.216,345.115 142.851,343.66 143.893,342.522 C143.725,342.11 143.166,340.453 144.053,338.211 C144.053,338.211 145.42,337.773 148.532,339.881 C149.831,339.519 151.225,339.339 152.61,339.332 C153.994,339.339 155.387,339.519 156.688,339.881 C159.798,337.773 161.163,338.211 161.163,338.211 C162.052,340.453 161.493,342.11 161.326,342.522 C162.37,343.66 163,345.115 163,346.893 C163,353.151 159.191,354.528 155.563,354.931 C156.147,355.434 156.668,356.428 156.668,357.947 C156.668,360.125 156.648,361.882 156.648,362.416 C156.648,362.852 156.942,363.359 157.768,363.2 C164.236,361.041 168.899,354.94 168.899,347.745 C168.899,338.748 161.605,331.455 152.608,331.455"></path></g></g></svg></a></div><div></div><div class="e7070742 pv3-ns ph1-ns bg-white"><div class="ef7c6e62 center mw9 border-box ph4-ns ph3 flex"><span class="_0edb515f pr3 dn dib-ns link lh-title dim b--white-30">❤</span><span class="_99e3854f f6 fw4 link dn dib-ns tl dim mr4 nowrap">Nine Parsecs from Milwaukee</span><nav class="_4a5f2a79 db w-100 w-auto-ns tr truncate"><ul class="list pl0"><li class="dib npme-hidden"><a class="c6c55db4 link f6-ns f7 fw5 pr2 pl2" id="nav-products-link" href="/products"><span class="dim">Products</span></a><ul class="_3f98ab29 mt2 pa0 bg-white br2 shadow-1 tl"><li><a id="nav-pro-link" class="b8f9b0bd link f6-ns f7 fw5 db ph3 pv2 nowrap dim" tabindex="0" href="/products/pro">Pro</a></li><li><a id="nav-teams-link" class="b8f9b0bd link f6-ns f7 fw5 db ph3 pv2 nowrap dim" tabindex="0" href="/products/teams">Teams</a></li><li><a id="nav-enterprise-link" class="b8f9b0bd link f6-ns f7 fw5 db ph3 pv2 nowrap dim" tabindex="0" href="/products/enterprise">Enterprise</a></li></ul></li><li class="dib npme-hidden"><a class="c6c55db4 link f6-ns f7 fw5 dim pr2 pl2" id="nav-pricing-link" href="/products">Pricing</a></li><li class="dib"><a class="c6c55db4 link f6-ns f7 fw5 dim pr2 pl2" id="nav-docs-link" href="https://docs.npmjs.com">Documentation</a></li><li class="dib npme-hidden"><a class="c6c55db4 link f6-ns f7 fw5 dim pr2 pl2" id="nav-resources-link" href="https://npm.community">Community</a></li></ul></nav></div></div><div class="_4ea0e50d bt b--black-10"><div class="c5b9953b center mw9 flex flex-wrap ph4-ns border-box"><h1 class="_657f443d">npm</h1><div class="af43375d mt3 db mr4-ns pb3 pb0-ns flex-auto 2-ns ph3 ph0-ns"><a href="/"><svg viewBox="0 0 780 250"><path fill="#231F20" d="M240,250h100v-50h100V0H240V250z M340,50h50v100h-50V50z M480,0v200h100V50h50v150h50V50h50v150h50V0H480z M0,200h100V50h50v150h50V0H0V200z"></path></svg></a></div><div class="_581ebd89 relative flex-auto w-100 w-50-ns pv2-ns order-1-ns order-2"><form id="search" method="GET" action="/search" class="_13c93d41 relative flex bg-transparent ph3 ph2 pv2 ph0-ns pv0-ns bt b--black-10 bn-ns"><div class="e82b10fd relative flex-grow-1"><div class="_2f299eeb nowrap flex"><span class="_705cdf4f db fl pl3 pr1"><svg width="15px" height="15px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 18 18" aria-hidden="true"><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="Artboard-1" stroke="#777777" stroke-width="1.3"><g id="Group"><path d="M13.4044,7.0274 C13.4044,10.5494 10.5494,13.4044 7.0274,13.4044 C3.5054,13.4044 0.6504,10.5494 0.6504,7.0274 C0.6504,3.5054 3.5054,0.6504 7.0274,0.6504 C10.5494,0.6504 13.4044,3.5054 13.4044,7.0274 Z" id="Stroke-3"></path><path d="M11.4913,11.4913 L17.8683,17.8683" id="Stroke-7"></path></g></g></g></svg></span><input type="search" name="q" hotkeys="[object Object]" placeholder="Search packages" autoComplete="off" aria-label="Search packages" inputref="[object Object]" class="_390acbc5 f5 fw3 black relative" value="" element="input"/></div></div><button type="submit" class="_0da775bb bn pv2 ph4 f6 white pointer">Search</button><input type="hidden" name="csrftoken" value="ZgCIP409WJ7-gFYu0cgYsYZvXN4nNLjy3RXuat6-3GP"/></form></div><div class="_6f31c82b ml3 mt2 mt0-ns pv2-ns flex-auto tr nowrap relative pointer fw6 order-1 order-2-ns"><div class="_1066d9e7 flex items-center self-center pl3"><a href="/signup" class="_9752c8b3 pa2 lh-copy br2 f6 no-underline fw5 black dim ph3 mr3">Sign Up</a><a class="_352269a0 pa1 lh-copy br2 f6 no-underline fw5 black dim" href="/login">Sign In</a></div></div></div></div></header><main><div data-promotion-id="Open RFC discussions" data-promotion-spot="below-header"><div><div class="_98714ae6"><span rel="npm:upsellbox:text" class="d321523e">Learn about our RFC process, Open RFC meetings &amp; more.</span><span class="c7d083b3"><a href="https://github.com/npm/rfcs">Join in the discussion!<!-- --> »</a></span></div></div></div><div class="_36ae70e9 flex flex-row flex-wrap pb5 ph3-l mw-100 mt4-ns mt1 center-ns mh1" id="top"><div class="w-100 ph0-l ph3 ph4-m"><h2 class="cd6ce1fd flex flex-column w-100 fw6 mt3 black dib ma0 tracked-tight no-underline hover-black f3-ns"><span class="_50685029 truncate flex-auto" title="eslint-plugin-flowtype">eslint-plugin-flowtype</span></h2><span class="_76473bea f6 dib ph0 pv2 mb2-ns black-80 nowrap f5 fw4 lh-copy">5.1.3<!-- --> • </span><span class="_813b53b2 _76473bea f6 dib ph0 pv2 mb2-ns black-80 nowrap f5 fw4 lh-copy green">Public</span><span class="_76473bea f6 dib ph0 pv2 mb2-ns black-80 nowrap f5 fw4 lh-copy"> • Published <time dateTime="2020-05-27T18:36:11.882Z" title="2020-5-27 18:36:11">17 days ago</time></span></div><ul class="cfb2a888 flex flex-column flex-row-l w-100 ma0 pa0 mr2 mr0-l list"><li class="_8055e658 f5 fw5 tc pointer d9f99065 ac5f7ef8 f4 fw6 black-50"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=readme"><span><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="file-alt" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path fill="currentColor" d="M288 248v28c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-28c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm-12 72H108c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-28c0-6.6-5.4-12-12-12zm108-188.1V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h204.1C264.8 0 277 5.1 286 14.1L369.9 98c9 8.9 14.1 21.2 14.1 33.9zm-128-80V128h76.1L256 51.9zM336 464V176H232c-13.3 0-24-10.7-24-24V48H48v416h288z"></path></svg> Readme</span></a></li><li class="_8055e658 f5 fw5 tc pointer undefined"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=explore"><span><span><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="file-archive" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"><path fill="currentColor" d="M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zM128.4 336c-17.9 0-32.4 12.1-32.4 27 0 15 14.6 27 32.5 27s32.4-12.1 32.4-27-14.6-27-32.5-27zM224 136V0h-63.6v32h-32V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM95.9 32h32v32h-32zm32.3 384c-33.2 0-58-30.4-51.4-62.9L96.4 256v-32h32v-32h-32v-32h32v-32h-32V96h32V64h32v32h-32v32h32v32h-32v32h32v32h-32v32h22.1c5.7 0 10.7 4.1 11.8 9.7l17.3 87.7c6.4 32.4-18.4 62.6-51.4 62.6z"></path></svg> Explore</span><span class="_22665c13">BETA</span></span></a></li><li class="_8055e658 f5 fw5 tc pointer c1f85151"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=dependencies"><span><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="cube" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z"></path></svg><span class="c3fc8940">2</span>Dependencies</span></a></li><li class="_8055e658 f5 fw5 tc pointer _7cec0316"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=dependents"><span><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="cubes" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z"></path></svg><span class="c3fc8940">4,445</span>Dependents</span></a></li><li class="_8055e658 f5 fw5 tc pointer b4fcfd19"><a class="_38ce9a85 link db ph4 fw6" href="?activeTab=versions"><span><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="tags" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512"><path fill="currentColor" d="M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z"></path></svg><span class="c3fc8940">157</span>Versions</span></a></li></ul><div class="_6620a4fd mw8-l mw-100 w-100 w-two-thirds-l ph3-m pt2 pl0-ns pl2 order-1-m order-0-ns order-1 order-2-m"><section class="e22ba268 ph2 ph0-ns ml0-ns mr3-ns black-80"><div class=""><article> <div class="_6d9832ac pr4-ns pl0-ns ph1-m pr3-m pr2  markdown" id="readme"><p><a name="eslint-plugin-flowtype"></a></p>
<h1 class="package-name-redundant"><a id="user-content-eslint-plugin-flowtype" class="deep-link" href="#eslint-plugin-flowtype" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>eslint-plugin-flowtype</h1>
<p><a href="https://gitspo.com/mentions/gajus/eslint-plugin-flowtype" rel="nofollow"><img src="https://gitspo.com/badges/mentions/gajus/eslint-plugin-flowtype?style=flat-square" alt="GitSpo Mentions" /></a>
<a href="https://www.npmjs.org/package/eslint-plugin-flowtype" rel="nofollow"><img src="http://img.shields.io/npm/v/eslint-plugin-flowtype.svg?style=flat-square" alt="NPM version" /></a>
<a href="https://travis-ci.org/gajus/eslint-plugin-flowtype" rel="nofollow"><img src="http://img.shields.io/travis/gajus/eslint-plugin-flowtype/master.svg?style=flat-square" alt="Travis build status" /></a>
<a href="https://github.com/gajus/canonical" rel="nofollow"><img src="https://img.shields.io/badge/code%20style-canonical-blue.svg?style=flat-square" alt="js-canonical-style" /></a></p>
<p class="package-description-redundant"><a href="http://flowtype.org/" rel="nofollow">Flow type</a> linting rules for ESLint.</p>
<ul>
<li><a href="#eslint-plugin-flowtype" rel="nofollow">eslint-plugin-flowtype</a>
<ul>
<li><a href="#eslint-plugin-flowtype-installation" rel="nofollow">Installation</a></li>
<li><a href="#eslint-plugin-flowtype-configuration" rel="nofollow">Configuration</a>
<ul>
<li><a href="#eslint-plugin-flowtype-configuration-shareable-configurations" rel="nofollow">Shareable configurations</a></li>
<li><a href="#eslint-plugin-flowtype-configuration-community-maintained-configurations" rel="nofollow">Community maintained configurations</a></li>
</ul>
</li>
<li><a href="#eslint-plugin-flowtype-settings" rel="nofollow">Settings</a>
<ul>
<li><a href="#eslint-plugin-flowtype-settings-onlyfileswithflowannotation" rel="nofollow"><code>onlyFilesWithFlowAnnotation</code></a></li>
</ul>
</li>
<li><a href="#eslint-plugin-flowtype-rules" rel="nofollow">Rules</a>
<ul>
<li><a href="#eslint-plugin-flowtype-rules-array-style-complex-type" rel="nofollow"><code>array-style-complex-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-array-style-simple-type" rel="nofollow"><code>array-style-simple-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-arrow-parens" rel="nofollow"><code>arrow-parens</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-boolean-style" rel="nofollow"><code>boolean-style</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-define-flow-type" rel="nofollow"><code>define-flow-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-delimiter-dangle" rel="nofollow"><code>delimiter-dangle</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-generic-spacing" rel="nofollow"><code>generic-spacing</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-newline-after-flow-annotation" rel="nofollow"><code>newline-after-flow-annotation</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-dupe-keys" rel="nofollow"><code>no-dupe-keys</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-existential-type" rel="nofollow"><code>no-existential-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-flow-fix-me-comments" rel="nofollow"><code>no-flow-fix-me-comments</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-mixed" rel="nofollow"><code>no-mixed</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-mutable-array" rel="nofollow"><code>no-mutable-array</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-primitive-constructor-types" rel="nofollow"><code>no-primitive-constructor-types</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-types-missing-file-annotation" rel="nofollow"><code>no-types-missing-file-annotation</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-unused-expressions" rel="nofollow"><code>no-unused-expressions</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-no-weak-types" rel="nofollow"><code>no-weak-types</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-object-type-delimiter" rel="nofollow"><code>object-type-delimiter</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-compound-type-alias" rel="nofollow"><code>require-compound-type-alias</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-exact-type" rel="nofollow"><code>require-exact-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-indexer-name" rel="nofollow"><code>require-indexer-name</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-inexact-type" rel="nofollow"><code>require-inexact-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-parameter-type" rel="nofollow"><code>require-parameter-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-readonly-react-props" rel="nofollow"><code>require-readonly-react-props</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-return-type" rel="nofollow"><code>require-return-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-types-at-top" rel="nofollow"><code>require-types-at-top</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-valid-file-annotation" rel="nofollow"><code>require-valid-file-annotation</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-require-variable-type" rel="nofollow"><code>require-variable-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-semi" rel="nofollow"><code>semi</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-sort-keys" rel="nofollow"><code>sort-keys</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-space-after-type-colon" rel="nofollow"><code>space-after-type-colon</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-space-before-generic-bracket" rel="nofollow"><code>space-before-generic-bracket</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-space-before-type-colon" rel="nofollow"><code>space-before-type-colon</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-spread-exact-type" rel="nofollow"><code>spread-exact-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-type-id-match" rel="nofollow"><code>type-id-match</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-type-import-style" rel="nofollow"><code>type-import-style</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-union-intersection-spacing" rel="nofollow"><code>union-intersection-spacing</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-use-flow-type" rel="nofollow"><code>use-flow-type</code></a></li>
<li><a href="#eslint-plugin-flowtype-rules-valid-syntax" rel="nofollow"><code>valid-syntax</code></a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p><a name="eslint-plugin-flowtype-installation"></a></p>
<h2><a id="user-content-installation" class="deep-link" href="#installation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<ol>
<li>Install <a href="https://www.github.com/eslint/eslint" rel="nofollow">ESLint</a>.</li>
<li>Install <a href="https://github.com/babel/babel-eslint" rel="nofollow"><code>babel-eslint</code></a> parser (ESLint parser <a href="https://github.com/eslint/eslint/issues/2157" rel="nofollow">does not support type annotations</a>).</li>
<li>Install <a href="https://github.com/gajus/eslint-plugin-flowtype" rel="nofollow"><code>eslint-plugin-flowtype</code></a> plugin.</li>
</ol>

<div class="highlight sh"><pre class="editor editor-colors"><div class="line"><span class="source shell"><span>npm install eslint --save-dev</span></span></div><div class="line"><span class="source shell"><span>npm install babel-eslint --save-dev</span></span></div><div class="line"><span class="source shell"><span>npm install eslint-plugin-flowtype --save-dev</span></span></div><div class="line"><span class="source shell"><span> </span></span></div><div class="line"><span class="source shell"><span class="comment line number-sign shell"><span class="punctuation definition comment shell"><span>#</span></span><span> Or all at once:</span><span> </span></span></span></div><div class="line"><span class="source shell"><span>npm install eslint babel-eslint eslint-plugin-flowtype --save-dev</span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-configuration"></a></p>
<h2><a id="user-content-configuration" class="deep-link" href="#configuration" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Configuration</h2>
<ol>
<li>Set <code>parser</code> property to <code>babel-eslint</code>.</li>
<li>Add <code>plugins</code> section and specify <code>eslint-plugin-flowtype</code> as a plugin.</li>
<li>Enable rules.</li>
</ol>

<div class="highlight json"><pre class="editor editor-colors"><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="punctuation definition dictionary begin json"><span>{</span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span>  </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>parser</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>babel-eslint</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span>  </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>plugins</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>  </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span>  </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure dictionary json"><span class="punctuation definition dictionary begin json"><span>{</span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/boolean-style</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>boolean</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/define-flow-type</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>1</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/delimiter-dangle</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>never</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/generic-spacing</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>never</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/no-mixed</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/no-primitive-constructor-types</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/no-types-missing-file-annotation</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/no-weak-types</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/object-type-delimiter</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>comma</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/require-parameter-type</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/require-readonly-react-props</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>0</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/require-return-type</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="meta structure dictionary json"><span class="punctuation definition dictionary begin json"><span>{</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span class="meta structure dictionary json"><span>        </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>annotateUndefined</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>never</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>      </span></span><span class="punctuation definition dictionary end json"><span>}</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/require-valid-file-annotation</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/semi</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/space-after-type-colon</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/space-before-generic-bracket</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>never</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/space-before-type-colon</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>never</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/type-id-match</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>^([A-Z][a-z0-9]+)+Type$</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/union-intersection-spacing</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="constant numeric json"><span>2</span></span><span class="punctuation separator array json"><span>,</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/use-flow-type</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>1</span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype/valid-syntax</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant numeric json"><span>1</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>  </span></span><span class="punctuation definition dictionary end json"><span>}</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span>  </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>settings</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure dictionary json"><span class="punctuation definition dictionary begin json"><span>{</span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure dictionary json"><span class="punctuation definition dictionary begin json"><span>{</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>      </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>onlyFilesWithFlowAnnotation</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="constant language json"><span>false</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>    </span></span><span class="punctuation definition dictionary end json"><span>}</span></span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span>  </span></span><span class="punctuation definition dictionary end json"><span>}</span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="punctuation definition dictionary end json"><span>}</span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-configuration-shareable-configurations"></a></p>
<h3><a id="user-content-shareable-configurations" class="deep-link" href="#shareable-configurations" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Shareable configurations</h3>
<p><a name="eslint-plugin-flowtype-configuration-shareable-configurations-recommended"></a></p>
<h4><a id="user-content-recommended" class="deep-link" href="#recommended" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Recommended</h4>
<p>This plugin exports a <a href="https://github.com/gajus/eslint-plugin-flowtype/blob/HEAD/src/configs/recommended.json" rel="nofollow">recommended configuration</a> that enforces Flow type good practices.</p>
<p>To enable this configuration use the extends property in your <code>.eslintrc</code> config file:</p>
<div class="highlight json"><pre class="editor editor-colors"><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="punctuation definition dictionary begin json"><span>{</span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span>  </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>extends</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>plugin:flowtype/recommended</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>  </span><span class="punctuation definition array end json"><span>]</span></span></span><span class="punctuation separator dictionary json"><span>,</span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span>  </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>plugins</span><span class="punctuation definition string end json"><span>&quot;</span></span></span><span class="meta structure dictionary json"><span class="punctuation separator dictionary key-value json"><span>:</span></span><span> </span><span class="meta structure array json"><span class="punctuation definition array begin json"><span>[</span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>    </span><span class="string quoted double json"><span class="punctuation definition string begin json"><span>&quot;</span></span><span>flowtype</span><span class="punctuation definition string end json"><span>&quot;</span></span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="meta structure dictionary json"><span class="meta structure array json"><span>  </span><span class="punctuation definition array end json"><span>]</span></span></span></span></span></span></div><div class="line"><span class="source json"><span class="meta structure dictionary json"><span class="punctuation definition dictionary end json"><span>}</span></span></span></span></div></pre></div>
<p>See <a href="http://eslint.org/docs/user-guide/configuring#extending-configuration-files" rel="nofollow">ESLint documentation</a> for more information about extending configuration files.</p>
<p><a name="eslint-plugin-flowtype-configuration-community-maintained-configurations"></a></p>
<h3><a id="user-content-community-maintained-configurations" class="deep-link" href="#community-maintained-configurations" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Community maintained configurations</h3>
<p>The following are third-party submitted/ maintained configurations of <code>eslint-plugin-flowtype</code>:</p>
<ul>
<li><a href="https://github.com/wemake-services/eslint-config-flowtype-essential" rel="nofollow">https://github.com/wemake-services/eslint-config-flowtype-essential</a></li>
</ul>
<p><a name="eslint-plugin-flowtype-settings"></a></p>
<h2><a id="user-content-settings" class="deep-link" href="#settings" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Settings</h2>
<p><a name="eslint-plugin-flowtype-settings-onlyfileswithflowannotation"></a></p>
<h3><a id="user-content-onlyfileswithflowannotation" class="deep-link" href="#onlyfileswithflowannotation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>onlyFilesWithFlowAnnotation</code></h3>
<p>When <code>true</code>, only checks files with a <a href="http://flowtype.org/docs/about-flow.html#gradual" rel="nofollow"><code>@flow</code> annotation</a> in the first comment.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>settings</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>onlyFilesWithFlowAnnotation</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules"></a></p>
<h2><a id="user-content-rules" class="deep-link" href="#rules" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Rules</h2>

<p><a name="eslint-plugin-flowtype-rules-array-style-complex-type"></a></p>
<h3><a id="user-content-array-style-complex-type" class="deep-link" href="#array-style-complex-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>array-style-complex-type</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces a particular annotation style of complex types.</p>
<p>Type is considered complex in these cases:</p>
<ul>
<li><a href="https://flow.org/en/docs/types/maybe/" rel="nofollow">Maybe type</a></li>
<li><a href="https://flow.org/en/docs/types/functions/" rel="nofollow">Function type</a></li>
<li><a href="https://flow.org/en/docs/types/objects/" rel="nofollow">Object type</a></li>
<li><a href="https://flow.org/en/docs/types/tuples/" rel="nofollow">Tuple type</a></li>
<li><a href="https://flow.org/en/docs/types/unions/" rel="nofollow">Union type</a></li>
<li><a href="https://flow.org/en/docs/types/intersections/" rel="nofollow">Intersection type</a></li>
</ul>
<p>This rule takes one argument.</p>
<p>If it is <code>'verbose'</code> then a problem is raised when using <code>Type[]</code> instead of <code>Array&lt;Type&gt;</code>.</p>
<p>If it is <code>'shorthand'</code> then a problem is raised when using <code>Array&lt;Type&gt;</code> instead of <code>Type[]</code>.</p>
<p>The default value is <code>'verbose'</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>?</span></span><span>string)</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;?string&gt;&quot;, not &quot;(?string)[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;verbose&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>?</span></span><span>string)</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;?string&gt;&quot;, not &quot;(?string)[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;shorthand&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="keyword operator js"><span>?</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;(?string)[]&quot;, not &quot;Array&lt;?string&gt;&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;shorthand&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;{foo: string}[]&quot;, not &quot;Array&lt;{foo: string}&gt;&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;string | number&gt;&quot;, not &quot;(string | number)[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string </span><span class="keyword operator js"><span>&amp;</span></span><span> number</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;string &amp; number&gt;&quot;, not &quot;(string &amp; number)[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="meta brace square js"><span>]</span><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;[string, number]&gt;&quot;, not &quot;[string, number][]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;{foo: string}&gt;&quot;, not &quot;{foo: string}[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>string</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;string =&gt; number&gt;&quot;, not &quot;(string =&gt; number)[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;{ foo: string, bar: number }&gt;&quot;, not &quot;{ foo: string, bar: number }[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    quo</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    hey</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Date</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;Type&gt;&quot;, not &quot;Type[]&quot;</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="keyword operator js"><span>?</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;verbose&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="keyword operator js"><span>?</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;shorthand&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>?</span></span><span>string)</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;shorthand&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;shorthand&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="keyword operator js"><span>?</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-array-style-simple-type"></a></p>
<h3><a id="user-content-array-style-simple-type" class="deep-link" href="#array-style-simple-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>array-style-simple-type</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces a particular array type annotation style of simple types.</p>
<p>Type is considered simple in these cases:</p>
<ul>
<li><a href="https://flow.org/en/docs/types/primitives/" rel="nofollow">Primitive types</a></li>
<li><a href="https://flow.org/en/docs/types/literals/" rel="nofollow">Literal types</a></li>
<li><a href="https://flow.org/en/docs/types/mixed/" rel="nofollow">Mixed type</a></li>
<li><a href="https://flow.org/en/docs/types/any/" rel="nofollow">Any type</a></li>
<li><a href="https://flow.org/en/docs/types/classes/" rel="nofollow">Class type</a></li>
<li><a href="https://flow.org/en/docs/types/generics/" rel="nofollow">Generic type</a></li>
<li>Array type <a href="https://flow.org/en/docs/types/arrays/#toc-array-type-shorthand-syntax" rel="nofollow">shorthand notation</a></li>
</ul>
<p>This rule takes one argument.</p>
<p>If it is <code>'verbose'</code> then a problem is raised when using <code>Type[]</code> instead of <code>Array&lt;Type&gt;</code>.</p>
<p>If it is <code>'shorthand'</code> then a problem is raised when using <code>Array&lt;Type&gt;</code> instead of <code>Type[]</code>.</p>
<p>The default value is <code>'verbose'</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;string&gt;&quot;, not &quot;string[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;verbose&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;string&gt;&quot;, not &quot;string[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;shorthand&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;string[]&quot;, not &quot;Array&lt;string&gt;&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Date</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;Date&gt;&quot;, not &quot;Date[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;Promise&lt;string&gt;&gt;&quot;, not &quot;Promise&lt;string&gt;[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> $Keys</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;$Keys&lt;{foo: string}&gt;&gt;&quot;, not &quot;$Keys&lt;{foo: string}&gt;[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> any</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;any&gt;&quot;, not &quot;any[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> mixed</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;mixed&gt;&quot;, not &quot;mixed[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;void&gt;&quot;, not &quot;void[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant language null js"><span>null</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;null&gt;&quot;, not &quot;null[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="meta brace square js"><span>[</span><span>]</span><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;string[]&gt;&quot;, not &quot;string[][]&quot;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;string&gt;&quot;, not &quot;string[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;Promise&lt;{ foo: string, bar: number }&gt;&gt;&quot;, not &quot;Promise&lt;{ foo: string, bar: number }&gt;[]&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    quo</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;Array&lt;Type&gt;&quot;, not &quot;Type[]&quot;</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;verbose&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;shorthand&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator js"><span>&gt;&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;verbose&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>?</span></span><span>string)</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;verbose&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>typeof</span></span><span> </span><span class="support class js"><span>Array</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-arrow-parens"></a></p>
<h3><a id="user-content-arrow-parens" class="deep-link" href="#arrow-parens" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>arrow-parens</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces the consistent use of parentheses in arrow functions.</p>
<p>This rule has a string option and an object one.</p>
<p>String options are:</p>
<ul>
<li><code>&quot;always&quot;</code> (default) requires parens around arguments in all cases.</li>
<li><code>&quot;as-needed&quot;</code> enforces no braces where they can be omitted.</li>
</ul>
<p>Object properties for variants of the <code>&quot;as-needed&quot;</code> option:</p>
<ul>
<li><code>&quot;requireForBlockBody&quot;: true</code> modifies the as-needed rule in order to require parens if the function body is in an instructions block (surrounded by braces).</li>
</ul>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>a</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>foo</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>a</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>foo</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>foo</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="constant language boolean true js"><span>true</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function-call js"><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>foo</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="constant language boolean true js"><span>true</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span class="meta brace round js"><span>(</span></span><span>a</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span class="meta brace round js"><span>(</span></span><span>a</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: undefined</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>a</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>a</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="constant language boolean true js"><span>true</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>a</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="constant language boolean true js"><span>true</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>a</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>a</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="constant language boolean true js"><span>true</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>a</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>if</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="constant language boolean true js"><span>true</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="keyword operator js"><span>...</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric decimal js"><span>0</span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>a</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>T</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a </span><span class="keyword operator js"><span>+</span></span><span> b</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="keyword operator js"><span>...</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric decimal js"><span>0</span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>a</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>a</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>T</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>T</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> a</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:false}]</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>T</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> a</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>T</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> a</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>T</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> a</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;as-needed&quot;,{&quot;requireForBlockBody&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>a</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>%</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>checks</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>typeof</span></span><span> a </span><span class="keyword operator comparison js"><span>===</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>number</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-boolean-style"></a></p>
<h3><a id="user-content-boolean-style" class="deep-link" href="#boolean-style" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>boolean-style</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces a particular style for boolean type annotations. This rule takes one argument.</p>
<p>If it is <code>'boolean'</code> then a problem is raised when using <code>bool</code> instead of <code>boolean</code>.</p>
<p>If it is <code>'bool'</code> then a problem is raised when using <code>boolean</code> instead of <code>bool</code>.</p>
<p>The default value is <code>'boolean'</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> bool</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;boolean&quot;, not &quot;bool&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;boolean&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> bool</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;boolean&quot;, not &quot;bool&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;bool&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> boolean</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;bool&quot;, not &quot;boolean&quot;</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> boolean</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;boolean&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> boolean</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;bool&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> bool</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;boolean&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> bool</span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-define-flow-type"></a></p>
<h3><a id="user-content-define-flow-type" class="deep-link" href="#define-flow-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>define-flow-type</code></h3>
<p>Marks Flow type identifiers as defined.</p>
<p>Used to suppress <a href="http://eslint.org/docs/rules/no-undef" rel="nofollow"><code>no-undef</code></a> reporting of type identifiers.</p>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>var</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>BType</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>A</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare type </span><span class="constant other js"><span>A</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>opaque type </span><span class="constant other js"><span>A</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>AType</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>AType</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>AType</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>a</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: AType </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: AType </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>C</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>C</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>AType</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>a</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>C</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>AType</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>a</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>b</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>C</span></span></span><span> </span><span class="storage modifier js"><span>implements</span></span><span> AType </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare </span><span class="storage type js"><span>interface</span></span><span> </span><span class="constant other js"><span>A</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span class="meta function method definition js"><span class="entity name function js"><span>b</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="constant other js"><span>Y</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>AType</span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> BType</span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment block documentation js"><span class="punctuation definition comment js"><span>/**</span></span></span></span></div><div class="line"><span class="source js"><span class="comment block documentation js"><span>* Copyright 2019 no corp</span></span></span></div><div class="line"><span class="source js"><span class="comment block documentation js"><span>* @flow</span></span></span></div><div class="line"><span class="source js"><span class="comment block documentation js"><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>var</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>BType</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>A</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare type </span><span class="constant other js"><span>A</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>opaque type </span><span class="constant other js"><span>A</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>AType</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>AType</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>AType</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>a</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: AType </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>f</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: AType </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>C</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> AType </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>C</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>AType</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>a</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>C</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable other object js"><span>AType</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>a</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>b</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>C</span></span></span><span> </span><span class="storage modifier js"><span>implements</span></span><span> AType </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare </span><span class="storage type js"><span>interface</span></span><span> </span><span class="constant other js"><span>A</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span class="meta function method definition js"><span class="entity name function js"><span>b</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> AType</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="constant other js"><span>Y</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>AType</span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> BType</span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment block documentation js"><span class="punctuation definition comment js"><span>/**</span></span></span></span></div><div class="line"><span class="source js"><span class="comment block documentation js"><span>* Copyright 2019 no corp</span></span></span></div><div class="line"><span class="source js"><span class="comment block documentation js"><span>* @flow</span></span></span></div><div class="line"><span class="source js"><span class="comment block documentation js"><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-undef&quot;:2,&quot;no-use-before-define&quot;:[2,&quot;nofunc&quot;]}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-delimiter-dangle"></a></p>
<h3><a id="user-content-delimiter-dangle" class="deep-link" href="#delimiter-dangle" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>delimiter-dangle</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces consistent use of trailing commas in Object and Tuple annotations.</p>
<p>This rule takes three arguments where the possible values are the same as ESLint's default <code>comma-dangle</code> rule:</p>
<ol>
<li>The first argument is for Object and Tuple annotations. The default value is <code>'never'</code>.</li>
<li>The second argument is used for Interface annotations. This defaults to the value of the first argument.</li>
<li>The third argument is used for inexact object notation (trailing <code>...</code>). The default value is <code>'never'</code>.</li>
</ol>
<p>If it is <code>'never'</code> then a problem is raised when there is a trailing comma.</p>
<p>If it is <code>'always'</code> then a problem is raised when there is no trailing comma.</p>
<p>If it is <code>'always-multiline'</code> then a problem is raised when there is no trailing comma on a multi-line definition, or there <em>is</em> a trailing comma on a single-line definition.</p>
<p>If it is <code>'only-multiline'</code> then a problem is raised when there is a trailing comma on a single-line definition. It allows, but does not enforce, trailing commas on multi-line definitions.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>interface</span></span><span> </span><span class="constant other js"><span>X</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>aReallyLongPropertyNameHere</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>aReallyLongPropertyNameHere</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>number</span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing trailing delimiter</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected trailing delimiter</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>interface</span></span><span> </span><span class="constant other js"><span>X</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,&quot;never&quot;,&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>...</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>number</span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span> foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> string </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> string </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>string</span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;only-multiline&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-generic-spacing"></a></p>
<h3><a id="user-content-generic-spacing" class="deep-link" href="#generic-spacing" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>generic-spacing</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces consistent spacing within generic type annotation parameters.</p>
<p>This rule takes one argument. If it is <code>'never'</code> then a problem is raised when there is a space surrounding the generic type parameters. If it is <code>'always'</code> then a problem is raised when there is no space surrounding the generic type parameters.</p>
<p>The default value is <code>'never'</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span> string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space at start of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>  string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space at start of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> FooBar</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space at end of &quot;FooBar&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span> string </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space at start of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space at end of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span><span>(</span></span><span>baz</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space at start of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space at end of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space at start of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> FooBar</span><span class="keyword operator comparison js"><span>&lt;</span></span><span> string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space at end of &quot;FooBar&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space at start of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space at end of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span><span>(</span></span><span>baz</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space at start of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space at end of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> FooBar</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>  string </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be one space at start of &quot;FooBar&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> FooBar</span><span class="keyword operator comparison js"><span>&lt;</span></span><span> string  </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be one space at end of &quot;FooBar&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>  </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span><span>(</span></span><span>baz</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span>  </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be one space at start of &quot;Promise&quot; generic type annotation</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be one space at end of &quot;Promise&quot; generic type annotation</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span><span>(</span></span><span>baz</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  bar</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace round js"><span>(</span><span>(</span><span>(</span></span><span>baz</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span> string </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span><span>(</span></span><span>baz</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-newline-after-flow-annotation"></a></p>
<h3><a id="user-content-newline-after-flow-annotation" class="deep-link" href="#newline-after-flow-annotation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>newline-after-flow-annotation</code></h3>
<p>This rule requires an empty line after the Flow annotation.</p>
<p><a name="eslint-plugin-flowtype-rules-newline-after-flow-annotation-options"></a></p>
<h4><a id="user-content-options" class="deep-link" href="#options" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The rule has a string option:</p>
<ul>
<li><code>&quot;always&quot;</code> (default): Enforces that <code>@flow</code> annotations be followed by an empty line, separated by newline (LF)</li>
<li><code>&quot;always-windows&quot;</code>: Identical to &quot;always&quot;, but will use a CRLF when autofixing</li>
<li><code>&quot;never&quot;</code>: Enforces that <code>@flow</code> annotations are not followed by empty lines</li>
</ul>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/newline-after-flow-annotation</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>./foo</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected newline after flow annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>./foo</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected newline after flow annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-windows&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>./foo</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected newline after flow annotation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected no newline after flow annotation</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>./foo</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always-windows&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>./foo</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>./foo</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-dupe-keys"></a></p>
<h3><a id="user-content-no-dupe-keys" class="deep-link" href="#no-dupe-keys" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-dupe-keys</code></h3>
<p>Checks for duplicate properties in Object annotations.</p>
<p>This rule mirrors ESLint's <a href="http://eslint.org/docs/rules/no-dupe-keys" rel="nofollow">no-dupe-keys</a> rule.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/no-dupe-keys</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span><span class="meta delimiter decimal period js"><span>.</span></span><span>1</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span><span class="meta delimiter decimal period js"><span>.</span></span><span>1</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> a</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> a</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> b </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> c </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> c</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> c</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> d </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> d</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> d</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> e </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> e</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> e</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> e </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="constant numeric decimal js"><span>1</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> e</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> e</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>fn</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> fn</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> fn</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Duplicate property.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>b</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span><span class="meta delimiter decimal period js"><span>.</span></span><span>1</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span><span class="meta delimiter decimal period js"><span>.</span></span><span>2</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>b</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta brace square js"><span>]</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>b</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta brace square js"><span>]</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>b</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> key2</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>b</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>var</span></span><span> b </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> a</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> a </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>var</span></span><span> b </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type f </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> a</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type a </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>C</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>config</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span>C</span><span class="meta delimiter object comma js"><span>,</span></span><span> key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>C</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>interface</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span> </span><span class="variable other module js"><span>get</span></span><span> </span><span class="variable other module js"><span>foo</span></span><span>(): </span><span class="variable other module js"><span>boolean</span></span><span>; </span><span class="variable other module js"><span>get</span></span><span> </span><span class="variable other module js"><span>bar</span></span><span>(): </span><span class="variable other module js"><span>string</span></span><span>; </span><span class="punctuation definition end js"><span>}</span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-existential-type"></a></p>
<h3><a id="user-content-no-existential-type" class="deep-link" href="#no-existential-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-existential-type</code></h3>
<p>Disallows use of the existential type (*). <a href="https://flow.org/en/docs/types/utilities/#toc-existential-type" rel="nofollow">See more</a></p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/no-existential-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>T</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>*</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of existential type (*).</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>T</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant other js"><span>U</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="keyword operator js"><span>*</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>*</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of existential type (*).</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of existential type (*).</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>f</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>*</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>null</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant language null js"><span>null</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of existential type (*).</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>T</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="constant language null js"><span>null</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-flow-fix-me-comments"></a></p>
<h3><a id="user-content-no-flow-fix-me-comments" class="deep-link" href="#no-flow-fix-me-comments" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-flow-fix-me-comments</code></h3>
<p>Disallows <code>$FlowFixMe</code> comment suppressions.</p>
<p>This is especially useful as a warning to ensure instances of <code>$FlowFixMe</code> in your codebase get fixed over time.</p>
<p><a name="eslint-plugin-flowtype-rules-no-flow-fix-me-comments-options-1"></a></p>
<h4><a id="user-content-options-1" class="deep-link" href="#options-1" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>This rule takes an optional RegExp that comments a text RegExp that makes the supression valid.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/no-flow-fix-me-comments</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>TODO</span><span class="constant character js"><span>\s</span></span><span>+[0-9]+</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> $FlowFixMe I am doing something evil here</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>text</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>HELLO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: $FlowFixMe is treated as `any` and should be fixed.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;</span><span class="storage type class"><span>TODO</span></span><span> [0-9]+&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> $FlowFixMe I am doing something evil here</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>text</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>HELLO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: $FlowFixMe is treated as `any` and should be fixed. Fix it or match `/</span><span class="storage type class"><span>TODO</span></span><span> [0-9]+/`.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;</span><span class="storage type class"><span>TODO</span></span><span> [0-9]+&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> $FlowFixMe </span><span class="storage type class"><span>TODO</span></span><span> abc 47 I am doing something evil here</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>text</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>HELLO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: $FlowFixMe is treated as `any` and should be fixed. Fix it or match `/</span><span class="storage type class"><span>TODO</span></span><span> [0-9]+/`.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> $$FlowFixMeProps I am doing something evil here</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>text</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>HELLO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: $FlowFixMe is treated as `any` and should be fixed.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;</span><span class="storage type class"><span>TODO</span></span><span> [0-9]+&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> $FlowFixMeProps I am doing something evil here</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>text</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>HELLO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: $FlowFixMe is treated as `any` and should be fixed. Fix it or match `/</span><span class="storage type class"><span>TODO</span></span><span> [0-9]+/`.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>text</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>HELLO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;</span><span class="storage type class"><span>TODO</span></span><span> [0-9]+&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> $FlowFixMe </span><span class="storage type class"><span>TODO</span></span><span> 48</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>text</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>HELLO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-mixed"></a></p>
<h3><a id="user-content-no-mixed" class="deep-link" href="#no-mixed" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-mixed</code></h3>
<p>Warns against &quot;mixed&quot; type annotations.
These types are not strict enough and could often be made more specific.</p>
<p>The following patterns are considered problems:</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: mixed </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of mixed type</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;mixed&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of mixed type</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;Promise&lt;mixed&gt;&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of mixed type</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: string </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;string&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;Promise&lt;string&gt;&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string }) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>var</span></span><span> </span><span>foo</span><span class="keyword operator js"><span>:</span></span><span> string</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> props</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-mutable-array"></a></p>
<h3><a id="user-content-no-mutable-array" class="deep-link" href="#no-mutable-array" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-mutable-array</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Requires use of <a href="https://github.com/facebook/flow/blob/v0.46.0/lib/core.js#L185" rel="nofollow"><code>$ReadOnlyArray</code></a> instead of just <code>Array</code> or array <a href="https://flow.org/en/docs/types/arrays/#toc-array-type-shorthand-syntax" rel="nofollow">shorthand notation</a>. <code>$ReadOnlyArray</code> is immutable array collection type and the superclass of Array and tuple types in Flow. Use of <code>$ReadOnlyArray</code> instead of <code>Array</code> can solve some &quot;problems&quot; in typing with Flow (e.g., <a href="https://github.com/facebook/flow/issues/3425" rel="nofollow">1</a>, <a href="https://github.com/facebook/flow/issues/4251" rel="nofollow">2</a>).</p>
<p>General reasons for using immutable data structures:</p>
<ul>
<li>They are simpler to construct, test, and use</li>
<li>They help to avoid temporal coupling</li>
<li>Their usage is side-effect free (no defensive copies)</li>
<li>Identity mutability problem is avoided</li>
<li>They always have failure atomicity</li>
<li>They are much easier to cache</li>
</ul>
<p>Note that initialization of a variable with an empty array is considered valid (e.g., <code>const values: Array&lt;string&gt; = [];</code>). This behavior resembles the behavior of Flow's <a href="https://flow.org/en/docs/types/objects/#toc-unsealed-objects" rel="nofollow">unsealed objects</a>, as it is assumed that empty array is intended to be mutated.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;$ReadOnlyArray&quot; instead of &quot;Array&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="meta brace square js"><span>[</span><span>]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;$ReadOnlyArray&quot; instead of array shorthand notation</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>values</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>Array</span></span><span>&lt;</span><span class="constant other js"><span>Array</span></span><span>&lt;</span><span class="constant other js"><span>string</span></span><span>&gt;&gt; </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;$ReadOnlyArray&quot; instead of &quot;Array&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>let</span></span><span> values</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator js"><span>&gt;&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;$ReadOnlyArray&quot; instead of &quot;Array&quot;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use &quot;$ReadOnlyArray&quot; instead of &quot;Array&quot;</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnlyArray</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>values</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>Array</span></span><span>&lt;</span><span class="constant other js"><span>$ReadOnlyArray</span></span><span>&lt;</span><span class="constant other js"><span>string</span></span><span>&gt;&gt; </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>values</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>$ReadOnlyArray</span></span><span>&lt;</span><span class="constant other js"><span>string</span></span><span>&gt;</span><span class="meta brace square js"><span>[</span><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>values</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>Array</span></span><span>&lt;</span><span class="constant other js"><span>$ReadOnlyArray</span></span><span>&lt;</span><span class="constant other js"><span>string</span></span><span>&gt;&gt; </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta class instance constructor js"><span class="keyword operator js"><span>new</span></span><span> </span><span class="entity name type instance js"><span>Array</span></span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>values</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>Array</span></span><span>&lt;</span><span class="constant other js"><span>$ReadOnlyArray</span></span><span>&lt;</span><span class="constant other js"><span>string</span></span><span>&gt;&gt; </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-primitive-constructor-types"></a></p>
<h3><a id="user-content-no-primitive-constructor-types" class="deep-link" href="#no-primitive-constructor-types" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-primitive-constructor-types</code></h3>
<p>Disallows use of primitive constructors as types, such as <code>Boolean</code>, <code>Number</code> and <code>String</code>. <a href="https://flowtype.org/docs/builtins.html" rel="nofollow">See more</a>.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/no-primitive-constructor-types</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Number</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of Number constructor type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>String</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of String constructor type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Boolean</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of Boolean constructor type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Number</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of Number constructor type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>String</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of String constructor type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Boolean</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of Boolean constructor type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>x</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of Number constructor type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>x</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>String</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of String constructor type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>x</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Boolean</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of Boolean constructor type.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> boolean</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>x</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>x</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>x</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>boolean</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> MyNumber</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> MyString</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type x </span><span class="keyword operator assignment js"><span>=</span></span><span> MyBoolean</span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-types-missing-file-annotation"></a></p>
<h3><a id="user-content-no-types-missing-file-annotation" class="deep-link" href="#no-types-missing-file-annotation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-types-missing-file-annotation</code></h3>
<p>Disallows Flow type imports, aliases, and annotations in files missing a valid Flow file declaration (or a @noflow annotation).</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/no-types-missing-file-annotation</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>x</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>number</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type annotations require valid Flow declaration.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type aliases require valid Flow declaration.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type imports require valid Flow declaration.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>A</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type imports require valid Flow declaration.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type imports require valid Flow declaration.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>A</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type exports require valid Flow declaration.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> t&lt;T&gt;</span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: T</span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type annotations require valid Flow declaration.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>x</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>number</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type annotations require valid Flow declaration.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>x</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>number</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @flow weak </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @noflow </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @noflow </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @noflow </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @noflow </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>A</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> an unrelated comment</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>A</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-unused-expressions"></a></p>
<h3><a id="user-content-no-unused-expressions" class="deep-link" href="#no-unused-expressions" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-unused-expressions</code></h3>
<p>An extension of <a href="https://eslint.org/docs/rules/no-unused-expressions" rel="nofollow">ESLint's <code>no-unused-expressions</code></a>.
This rule ignores type cast expressions, but otherwise behaves the same as ESLint's
<code>no-unused-expressions</code>.</p>
<p>Bare type casts are useful, for example to assert the exhaustiveness of a <code>switch</code>:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type Action</span></span></div><div class="line"><span class="source js"><span>  </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> type</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>FOO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function json js"><span class="entity name function js"><span>doFoo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>_</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> type</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>BAR</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function json js"><span class="entity name function js"><span>doBar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>_</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type State </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>runFooBar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>action</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Action</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>state</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>State</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: void </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta js"><span class="keyword control js"><span>switch</span></span><span> </span><span class="punctuation definition begin round js"><span>(</span></span><span class="variable other object js"><span>action</span></span><span class="meta delimiter period js"><span>.</span></span><span class="support variable dom js"><span>type</span></span><span class="punctuation definition end round js"><span>)</span></span><span> </span><span class="punctuation definition section begin curly js"><span>{</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>    </span><span class="keyword control case js"><span>case</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>FOO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition section js"><span>:</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>      </span><span class="meta function-call js"><span class="entity name function js"><span>doFoo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable other object js"><span>state</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>      </span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>    </span><span class="keyword control case js"><span>case</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>BAR</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition section js"><span>:</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>      </span><span class="meta function-call js"><span class="entity name function js"><span>doBar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable other object js"><span>state</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>bar</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>      </span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>    </span><span class="keyword control js"><span>default</span></span><span class="punctuation definition section js"><span>:</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>      </span><span class="meta brace round js"><span>(</span></span><span>action</span><span class="keyword operator assignment js"><span>:</span></span><span> empty</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>  </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> type error when `Action` is extended with new types</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>      </span><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>error</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted template js"><span class="punctuation definition string begin js"><span>`</span></span><span>Impossible action: </span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span class="variable other object js"><span>action</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toString</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation section embedded js"><span>}</span></span></span><span class="punctuation definition string end js"><span>`</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span>  </span><span class="punctuation definition section end curly js"><span>}</span></span></span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div></pre></div>
<p>This rule takes the same arguments as ESLint's <code>no-unused-expressions</code>. See
<a href="https://eslint.org/docs/rules/no-unused-expressions" rel="nofollow">that rule's documentation</a> for details.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>foo </span><span class="keyword operator js"><span>+</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected an assignment or function call and instead saw an expression.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta brace round js"><span>)</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-no-weak-types"></a></p>
<h3><a id="user-content-no-weak-types" class="deep-link" href="#no-weak-types" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>no-weak-types</code></h3>
<p>Warns against weak type annotations <em>any</em>, <em>Object</em> and <em>Function</em>.
These types can cause flow to silently skip over portions of your code,
which would have otherwise caused type errors.</p>
<p>This rule optionally takes one argument, an object to configure which type warnings to enable. By default, all of the
warnings are enabled. e.g. to disable the <code>any</code> warning (allowing it to exist in your code), while continuing to warn
about <code>Object</code> and <code>Function</code>:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/no-weak-types</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>any</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Object</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Function</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> or, the following is equivalent as default is true:</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/no-weak-types</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>any</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: any </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;any&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;Promise&lt;any&gt;&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Object </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;Object&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;Promise&lt;Object&gt;&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Function </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;Function&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;Promise&lt;Function&gt;&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>any</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Function</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>any</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="support class js"><span>Function</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> any </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Object</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>any</span></span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> any</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Function</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> any </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Object</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Object</span></span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Function</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>any</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Object</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Function</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Object</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> props</span><span class="keyword operator assignment js"><span>:</span></span><span> any </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> props</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Object</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> any</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;Function&quot;:false}]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> any</span><span class="punctuation terminator statement js"><span>;</span></span><span> type </span><span class="constant other js"><span>Y</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Function</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type </span><span class="constant other js"><span>Z</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Object</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;any&quot;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Object&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;any&quot;:false,&quot;Object&quot;:false}]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> any</span><span class="punctuation terminator statement js"><span>;</span></span><span> type </span><span class="constant other js"><span>Y</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Function</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type </span><span class="constant other js"><span>Z</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Object</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected use of weak type &quot;Function&quot;</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: string </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;string&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;Promise&lt;string&gt;&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string }) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>var</span></span><span> </span><span>foo</span><span class="keyword operator js"><span>:</span></span><span> string</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> props</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;any&quot;:false,&quot;Object&quot;:false}]</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> any</span><span class="punctuation terminator statement js"><span>;</span></span><span> type </span><span class="constant other js"><span>Y</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Object</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;Function&quot;:false}]</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Function</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>thing</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Function </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-object-type-delimiter"></a></p>
<h3><a id="user-content-object-type-delimiter" class="deep-link" href="#object-type-delimiter" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>object-type-delimiter</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces consistent separators between properties in Flow object types.</p>
<p>This rule takes one argument.</p>
<p>If it is <code>'comma'</code> then a problem is raised when using <code>;</code> as a separator.</p>
<p>If it is <code>'semicolon'</code> then a problem is raised when using <code>,</code> as a separator.</p>
<p>The default value is <code>'comma'</code>.</p>
<p><em>This rule is ported from <code>babel/flow-object-type</code>, however the default option was changed.</em></p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer semicolons to commas in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer commas to semicolons in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer semicolons to commas in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer commas to semicolons in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer semicolons to commas in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer commas to semicolons in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer semicolons to commas in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer commas to semicolons in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer semicolons to commas in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer commas to semicolons in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer semicolons to commas in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer commas to semicolons in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer semicolons to commas in object and class types</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Prefer commas to semicolons in object and class types</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;comma&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;semicolon&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> Foo</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> Bar </span><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-compound-type-alias"></a></p>
<h3><a id="user-content-require-compound-type-alias" class="deep-link" href="#require-compound-type-alias" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-compound-type-alias</code></h3>
<p>Requires to make a type alias for all <a href="https://flow.org/en/docs/types/unions/" rel="nofollow">union</a> and <a href="https://flow.org/en/docs/types/intersections/" rel="nofollow">intersection</a> types. If these are used in &quot;raw&quot; forms it might be tempting to just copy&amp;paste them around the code. However, this brings sort of a source code pollution and unnecessary changes on several parts when these compound types need to be changed.</p>
<p><a name="eslint-plugin-flowtype-rules-require-compound-type-alias-options-2"></a></p>
<h4><a id="user-content-options-2" class="deep-link" href="#options-2" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The rule has a string option:</p>
<ul>
<li><code>&quot;never&quot;</code></li>
<li><code>&quot;always&quot;</code></li>
</ul>
<p>The default value is <code>&quot;always&quot;</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>A</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>B</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All union types must be declared with named type alias.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span>&quot;</span><span class="constant other js"><span>A</span></span><span>&quot; | &quot;</span><span class="constant other js"><span>B</span></span><span>&quot; </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>A</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All union types must be declared with named type alias.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>A</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>B</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All union types must be declared with named type alias.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All union types must be declared with named type alias.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>&amp;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All intersection types must be declared with named type alias.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span>n</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>number</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> &amp; </span><span class="meta brace curly js"><span>{</span></span><span> </span><span>s</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>string</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All intersection types must be declared with named type alias.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>&amp;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All intersection types must be declared with named type alias.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>&amp;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All intersection types must be declared with named type alias.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>A</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>B</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>A</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>B</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Bar</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> disjoint</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>A</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> disjoint</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>B</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>&amp;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>&amp;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Bar</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>A</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>B</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> n</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>&amp;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> s</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-exact-type"></a></p>
<h3><a id="user-content-require-exact-type" class="deep-link" href="#require-exact-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-exact-type</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>This rule enforces <a href="https://flow.org/en/docs/types/objects/#toc-exact-object-types" rel="nofollow">exact object types</a>.</p>
<p><a name="eslint-plugin-flowtype-rules-require-exact-type-options-3"></a></p>
<h4><a id="user-content-options-3" class="deep-link" href="#options-3" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The rule has one string option:</p>
<ul>
<li><code>&quot;always&quot;</code> (default): Report all object type definitions that aren't exact.</li>
<li><code>&quot;never&quot;</code>: Report all object type definitions that are exact.</li>
</ul>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-exact-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-exact-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>never</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must be exact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must be exact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span>bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must be exact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span>bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must be exact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must not be exact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must not be exact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> baz</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must not be exact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must not be exact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Object type must not be exact.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> baz</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> baz</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span>bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-indexer-name"></a></p>
<h3><a id="user-content-require-indexer-name" class="deep-link" href="#require-indexer-name" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-indexer-name</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>This rule validates Flow object indexer name.</p>
<p><a name="eslint-plugin-flowtype-rules-require-indexer-name-options-4"></a></p>
<h4><a id="user-content-options-4" class="deep-link" href="#options-4" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The rule has a string option:</p>
<ul>
<li><code>&quot;never&quot;</code> (default): Never report files that are missing an indexer key name.</li>
<li><code>&quot;always&quot;</code>: Always report files that are missing an indexer key name.</li>
</ul>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-indexer-name</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All indexers must be declared with key name.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-inexact-type"></a></p>
<h3><a id="user-content-require-inexact-type" class="deep-link" href="#require-inexact-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-inexact-type</code></h3>
<p>This rule enforces explicit inexact object types.</p>
<p><a name="eslint-plugin-flowtype-rules-require-inexact-type-options-5"></a></p>
<h4><a id="user-content-options-5" class="deep-link" href="#options-5" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The rule has one string option:</p>
<ul>
<li><code>&quot;always&quot;</code> (default): Report all object type definitions that aren't explicit inexact, but ignore exact objects.</li>
<li><code>&quot;never&quot;</code>: Report all object type definitions that are explicit inexact.</li>
</ul>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-inexact-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-inexact-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>never</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type must be explicit inexact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type must be explicit inexact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type must be explicit inexact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type must be explicit inexact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>...</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type must not be explicit inexact.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type must not be explicit inexact.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>interface</span></span><span> Foo </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>key</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>...</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-parameter-type"></a></p>
<h3><a id="user-content-require-parameter-type" class="deep-link" href="#require-parameter-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-parameter-type</code></h3>
<p>Requires that all function parameters have type annotations.</p>
<p><a name="eslint-plugin-flowtype-rules-require-parameter-type-options-6"></a></p>
<h4><a id="user-content-options-6" class="deep-link" href="#options-6" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>You can skip all arrow functions by providing the <code>excludeArrowFunctions</code> option with <code>true</code>.</p>
<p>Alternatively, you can want to exclude only concise arrow functions (e.g. <code>x =&gt; x * 2</code>). Provide <code>excludeArrowFunctions</code> with <code>expressionsOnly</code> for this.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-parameter-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>excludeArrowFunctions</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-parameter-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>excludeArrowFunctions</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>expressionsOnly</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>You can exclude parameters that match a certain regex by using <code>excludeParameterMatch</code>.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-parameter-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>excludeParameterMatch</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>^_</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>This excludes all parameters that start with an underscore (<code>_</code>).
The default pattern is <code>a^</code>, which doesn't match anything, i.e., all parameters are checked.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeArrowFunctions&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>FOO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="keyword operator js"><span>...</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span>foo</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;{foo}&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span class="variable function js"><span>foo</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;[foo]&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span>foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;{foo = 1}&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeArrowFunctions&quot;:&quot;expressionsOnly&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeArrowFunctions&quot;:&quot;expressionsOnly&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeParameterMatch&quot;:&quot;^_&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>_foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>bar</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;bar&quot; parameter type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeParameterMatch&quot;:&quot;^_&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>_foo</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>bar</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;bar&quot; parameter type annotation.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>FOO</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="keyword operator js"><span>...</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>f</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>Foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span>foo</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span class="variable function js"><span>foo</span></span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>fn</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>f</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>fn</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeArrowFunctions&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeArrowFunctions&quot;:&quot;expressionsOnly&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeParameterMatch&quot;:&quot;^_&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>_foo</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeParameterMatch&quot;:&quot;^_&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>_foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>bar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-readonly-react-props"></a></p>
<h3><a id="user-content-require-readonly-react-props" class="deep-link" href="#require-readonly-react-props" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-readonly-react-props</code></h3>
<p>This rule validates that React props are marked as $ReadOnly. React props are immutable and modifying them could lead to unexpected results. Marking prop shapes as $ReadOnly avoids these issues.</p>
<p>The rule tries its best to work with both class and functional components. For class components, it does a fuzzy check for one of &quot;Component&quot;, &quot;PureComponent&quot;, &quot;React.Component&quot; and &quot;React.PureComponent&quot;. It doesn't actually infer that those identifiers resolve to a proper <code>React.Component</code> object.</p>
<p>For example, this will NOT be checked:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>MyReact</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>react</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>MyReact</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>As a result, you can safely use other classes without getting warnings from this rule:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>MyClass</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>MySuperClass</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>React's functional components are hard to detect statically. The way it's done here is by searching for JSX within a function. When present, a function is considered a React component:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> this gets checked</span></span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>MyComponent</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Props</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> this doesn't get checked since no JSX is present in a function</span></span></span></div><div class="line"><span class="source js"><span>type Options </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>SomeHelper</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>options</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Options</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> ...</span></span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> this doesn't get checked since no JSX is present directly in a function</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>helper</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>MyComponent</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Props</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="keyword control js"><span>return</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>helper</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div></pre></div>
<p>The rule only works for locally defined props that are marked with a <code>$ReadOnly</code> or using covariant notation. It doesn't work with imported props:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> the rule has no way of knowing whether ImportedProps are read-only</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>ImportedProps</span></span><span> </span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>./somewhere</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>ImportedProps</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> the rule also checks for covariant properties</span></span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Bar</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> this fails because the object is not fully read-only</span></span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Bar</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> this fails because spreading makes object mutable (as of Flow 0.98)</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> </span><span class="markup underline link hyperlink"><span>https://github.com/gajus/eslint-plugin-flowtype/pull/400#issuecomment-489813899</span></span></span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="keyword operator js"><span>...</span></span><span>bar</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Bar</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-readonly-react-props</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type OtherProps </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>OtherProps</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: OtherProps must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Foo class props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="meta delimiter object comma js"><span>,</span></span><span> State</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>PureComponent</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Props</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="punctuation definition end js"><span>}</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>...</span></span><span>bar </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>-</span></span><span>bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Props</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Props</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> foo </span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>span </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Foo component props must be $ReadOnly</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Props</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="punctuation definition end js"><span>}</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Props</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Props must be $ReadOnly</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>$ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator js"><span>&gt;&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>PureComponent</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>$ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> State</span><span class="keyword operator js"><span>&gt;&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="meta delimiter object comma js"><span>,</span></span><span> State</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>PureComponent</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Bar</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>FooType</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Props</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> $</span><span class="variable other module js"><span>ReadOnly</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation definition begin js"><span>{</span></span><span class="punctuation definition end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="meta delimiter object comma js"><span>,</span></span><span> State</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Props</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> $</span><span class="variable other module js"><span>ReadOnly</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation definition begin js"><span>{</span></span><span class="punctuation definition end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span></span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> $FlowFixMe</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator logical js"><span>||</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>Component</span></span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator logical js"><span>||</span></span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>UnknownProps</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Props</span></span><span> </span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>file</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span><span> </span><span class="storage modifier js"><span>extends</span></span><span> </span><span class="entity other js"><span>React</span></span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>Component</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Props</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> $ReadOnly</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Props</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Props </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>OtherProps</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>$FlowFixMe</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>Foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>props</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator logical js"><span>||</span></span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>p </span><span class="keyword operator js"><span>/</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-return-type"></a></p>
<h3><a id="user-content-require-return-type" class="deep-link" href="#require-return-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-return-type</code></h3>
<p>Requires that functions have return type annotation.</p>
<p><a name="eslint-plugin-flowtype-rules-require-return-type-options-7"></a></p>
<h4><a id="user-content-options-7" class="deep-link" href="#options-7" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>You can skip all arrow functions by providing the <code>excludeArrowFunctions</code> option with <code>true</code>.</p>
<p>Alternatively, you can exclude a concise arrow function (e.g. <code>() =&gt; 2</code>). Provide <code>excludeArrowFunctions</code> with <code>expressionsOnly</code> for this.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-return-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>excludeArrowFunctions</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-return-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>excludeArrowFunctions</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>expressionsOnly</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>You can exclude or include specific tests with the <code>includeOnlyMatching</code> and <code>excludeMatching</code> rules.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-return-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>includeOnlyMatching</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>                  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>^F.*</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>                  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Ba(r|z)</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-return-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>excludeMatching</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>                  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>^F.*</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>                  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Ba(r|z)</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div></pre></div>
<p>Both rules take an array that can contain either strings or valid RegExp statements.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>foo</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>foo</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>foo</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>undefined</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>void</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>undefined</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>void</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;never&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>undefined</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;never&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>void</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;never&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>undefined</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;never&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="keyword operator js"><span>void</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;never&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant language js"><span>undefined</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must not annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Must annotate undefined return type.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function method definition js"><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span class="storage modifier js"><span>*</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeArrowFunctions&quot;:&quot;expressionsOnly&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeArrowFunctions&quot;:&quot;expressionsOnly&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>4</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;includeOnlyMatching&quot;:[&quot;bar&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;includeOnlyMatching&quot;:[&quot;bar&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>bar</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;includeOnlyMatching&quot;:[&quot;bar&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function method definition js"><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function json js"><span class="entity name function js"><span>foobar</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="storage type function js"><span>function</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeMatching&quot;:[&quot;bar&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function method definition js"><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta function method definition js"><span class="entity name function js"><span>baz</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="storage modifier js"><span>*</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="meta control js"><span class="keyword control js"><span>yield</span></span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="storage modifier js"><span>*</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="meta control js"><span class="keyword control js"><span>yield</span></span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing return type annotation.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>string</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>f</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>Foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>string</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>fn</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span>f</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>fn</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>Object</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="meta brace round js"><span>(</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span> </span><span class="meta brace round js"><span>)</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>undefined</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>void</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;never&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;never&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;never&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>undefined</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>void</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="constant numeric decimal js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>doThing</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;void&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;ignore&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>doThing</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Promise&lt;void&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;ignore&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>doThing</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span class="storage modifier js"><span>*</span></span><span> </span><span class="entity name function js"><span>doThing</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Generator&lt;number, void, void&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="meta control js"><span class="keyword control js"><span>yield</span></span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;,&quot;excludeMatching&quot;:[&quot;constructor&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeMatching&quot;:[&quot;foo&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function method definition js"><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeMatching&quot;:[&quot;foo&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeMatching&quot;:[&quot;foo&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Test</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>number</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeArrowFunctions&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeArrowFunctions&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>4</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeArrowFunctions&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant language js"><span>undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;,&quot;excludeArrowFunctions&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant language js"><span>undefined</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;,&quot;excludeArrowFunctions&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant language js"><span>undefined</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeArrowFunctions&quot;:&quot;expressionsOnly&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeArrowFunctions&quot;:&quot;expressionsOnly&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeMatching&quot;:[&quot;foo&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;includeOnlyMatching&quot;:[&quot;bar&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeMatching&quot;:[&quot;bar&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: number </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;includeOnlyMatching&quot;:[&quot;foo&quot;,&quot;baz&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: number </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeMatching&quot;:[&quot;^b.*&quot;,&quot;qux&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: number </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;includeOnlyMatching&quot;:[&quot;^f.*&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: number </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;includeOnlyMatching&quot;:[&quot;bar&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function method definition js"><span class="entity name function js"><span>baz</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;excludeMatching&quot;:[&quot;bar&quot;]}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function method definition js"><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="keyword control js"><span>return</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="storage modifier js"><span>*</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Iterable&lt;number&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="meta control js"><span class="keyword control js"><span>yield</span></span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotateUndefined&quot;:&quot;always&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="storage modifier js"><span>*</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: AsyncIterable&lt;number&gt; </span><span class="punctuation definition function begin curly js"><span>{</span></span><span> </span><span class="meta control js"><span class="keyword control js"><span>yield</span></span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="punctuation definition function end curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-types-at-top"></a></p>
<h3><a id="user-content-require-types-at-top" class="deep-link" href="#require-types-at-top" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-types-at-top</code></h3>
<p>Requires all type declarations to be at the top of the file, after any import declarations.</p>
<p><a name="eslint-plugin-flowtype-rules-require-types-at-top-options-8"></a></p>
<h4><a id="user-content-options-8" class="deep-link" href="#options-8" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The rule has a string option:</p>
<ul>
<li><code>&quot;never&quot;</code></li>
<li><code>&quot;always&quot;</code></li>
</ul>
<p>The default value is <code>&quot;always&quot;</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All type declaration should be at the top of the file, after any import declarations.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>opaque type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All type declaration should be at the top of the file, after any import declarations.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other module js"><span>number</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All type declaration should be at the top of the file, after any import declarations.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>opaque</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other module js"><span>number</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All type declaration should be at the top of the file, after any import declarations.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All type declaration should be at the top of the file, after any import declarations.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>bar</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>./bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: All type declaration should be at the top of the file, after any import declarations.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>opaque type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other module js"><span>number</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable other module js"><span>opaque</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>Foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable other module js"><span>number</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>bar</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>./bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>bar</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>./bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-valid-file-annotation"></a></p>
<h3><a id="user-content-require-valid-file-annotation" class="deep-link" href="#require-valid-file-annotation" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-valid-file-annotation</code></h3>
<p>This rule validates Flow file annotations.</p>
<p>This rule can optionally report missing or missed placed annotations, common typos (e.g. <code>// @floww</code>), and enforce a consistent annotation style.</p>
<p><a name="eslint-plugin-flowtype-rules-require-valid-file-annotation-options-9"></a></p>
<h4><a id="user-content-options-9" class="deep-link" href="#options-9" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The rule has a string option:</p>
<ul>
<li><code>&quot;never&quot;</code> (default): Never report files that are missing an <code>@flow</code> annotation.</li>
<li><code>&quot;always&quot;</code>: Always report files that are missing an <code>@flow</code> annotation</li>
</ul>
<p>This rule has an object option:</p>
<ul>
<li>
<p><code>&quot;annotationStyle&quot;</code> - Enforce a consistent file annotation style.</p>
<ul>
<li><code>&quot;none&quot;</code> (default): Either annotation style is accepted.</li>
<li><code>&quot;line&quot;</code>: Require single line annotations (i.e. <code>// @flow</code>).</li>
<li><code>&quot;block&quot;</code>: Require block annotations (i.e. <code>/* @flow */</code>).</li>
</ul>
</li>
<li>
<p><code>&quot;strict&quot;</code> - Enforce a strict flow file annotation.</p>
<ul>
<li><code>false</code> (default): strict flow annotation is not required.</li>
<li><code>true</code>: Require strict flow annotation (i.e. <code>// @flow strict</code>).</li>
</ul>
</li>
</ul>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-valid-file-annotation</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-valid-file-annotation</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>always</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>annotationStyle</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>block</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>strict</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="punctuation terminator statement js"><span>;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation not at the top of the file.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation not at the top of the file.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @Flow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Malformed Flow file annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @NoFlow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Malformed Flow file annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @Noflow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Malformed Flow file annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @floweeeeeee</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Misspelled or malformed Flow file annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @nofloweeeeeee</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Misspelled or malformed Flow file annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation is missing.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @flow </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation style must be `// @flow`</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;block&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation style must be `/* @flow */`</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;block&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation style must be `/* @flow */`</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;,&quot;strict&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Strict Flow file annotation is required, should be `// @flow strict`</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @noflow </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation style must be `// @noflow`</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;block&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @noflow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation style must be `/* @noflow */`</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation is missing.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;block&quot;}]</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation is missing.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;,&quot;strict&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation is missing.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;,&quot;strict&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>b</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Strict Flow file annotation is required, should be `// @flow strict`</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @flow </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>b</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation style must be `// @flow`</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @flow strict </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span>b</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Flow file annotation style must be `// @flow strict`</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>@flow</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>**@flow</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> foo @flow bar </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @FLow</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @noflow</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>a</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;,&quot;strict&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @noflow</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;line&quot;,&quot;strict&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @flow strict</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;,{&quot;annotationStyle&quot;:&quot;none&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @function</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> @fixable</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;annotationStyle&quot;:&quot;block&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> @flow </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-require-variable-type"></a></p>
<h3><a id="user-content-require-variable-type" class="deep-link" href="#require-variable-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>require-variable-type</code></h3>
<p>Requires that all variable declarators have type annotations.</p>
<p><a name="eslint-plugin-flowtype-rules-require-variable-type-options-10"></a></p>
<h4><a id="user-content-options-10" class="deep-link" href="#options-10" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>You can exclude variables that match a certain regex by using <code>excludeVariableMatch</code>.</p>
<p>This excludes all parameters that start with an underscore (<code>_</code>).
The default pattern is <code>a^</code>, which doesn't match anything, i.e., all parameters are checked.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-variable-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>excludeVariableMatch</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>^_</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>You can choose specific variable types (<code>var</code>, <code>let</code>, and <code>const</code>) to ignore using <code>excludeVariableTypes</code>.</p>
<p>This excludes <code>var</code> and <code>let</code> declarations from needing type annotations, but forces <code>const</code> declarations to have it.
By default, all declarations are checked.</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/require-variable-type</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>excludeVariableTypes</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>                </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>var</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>                </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>let</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>                </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>const</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>              </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;foo&quot; variable type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;bar&quot; variable type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeVariableMatch&quot;:&quot;^_&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> _foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;bar&quot; variable type annotation.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeVariableTypes&quot;:{&quot;let&quot;:false,&quot;var&quot;:true}}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>const</span></span><span> </span><span>oob </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>string</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>oob</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>let</span></span><span> hey </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>yah</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing &quot;hey&quot; variable type annotation.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar </span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeVariableMatch&quot;:&quot;^_&quot;}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> _foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar </span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeVariableTypes&quot;:{&quot;var&quot;:true}}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [{&quot;excludeVariableTypes&quot;:{&quot;let&quot;:true,&quot;var&quot;:true}}]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>bar</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>const</span></span><span> </span><span>oob </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>string</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>oob</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>let</span></span><span> hey </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>yah</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-semi"></a></p>
<h3><a id="user-content-semi" class="deep-link" href="#semi" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>semi</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces consistent use of semicolons after type aliases.</p>
<p>This rule takes one argument. If it is <code>'never'</code> then a problem is raised when there is a semicolon after a type alias. If it is <code>'always'</code> then a problem is raised when there is no semicolon after a type alias.</p>
<p>The default value is <code>'always'</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: []</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing semicolon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing semicolon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Extra semicolon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: []</span></span></span></div><div class="line"><span class="source js"><span>opaque type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Missing semicolon.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>opaque type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-sort-keys"></a></p>
<h3><a id="user-content-sort-keys" class="deep-link" href="#sort-keys" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>sort-keys</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces sorting of Object annotations.</p>
<p>This rule mirrors ESlint's <a href="http://eslint.org/docs/rules/sort-keys" rel="nofollow">sort-keys</a> rule.</p>
<p><a name="eslint-plugin-flowtype-rules-sort-keys-options-11"></a></p>
<h4><a id="user-content-options-11" class="deep-link" href="#options-11" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The first option specifies sort order.</p>
<ul>
<li><code>&quot;asc&quot;</code> (default) - enforce ascending sort order.</li>
<li><code>&quot;desc&quot;</code> - enforce descending sort order.</li>
</ul>
<p>The second option takes an object with two possible properties.</p>
<ul>
<li><code>caseSensitive</code> - if <code>true</code>, enforce case-sensitive sort order. Default is <code>true</code>.</li>
<li><code>natural</code> - if <code>true</code>, enforce <a href="https://en.wikipedia.org/wiki/Natural_sort_order" rel="nofollow">natural sort order</a>. Default is <code>false</code>.</li>
</ul>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/sort-keys</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>asc</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>caseSensitive</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean true js"><span>true</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>natural</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant language boolean false js"><span>false</span></span></span></div><div class="line"><span class="source js"><span>      </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>C</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;C&quot; should be before &quot;b&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;10&quot; should be before &quot;2&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;desc&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in descending order. &quot;b&quot; should be before &quot;a&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;desc&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>C</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in descending order. &quot;b&quot; should be before &quot;C&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;desc&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in descending order. &quot;2&quot; should be before &quot;10&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;asc&quot;,{&quot;caseSensitive&quot;:false}]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>C</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in insensitive ascending order. &quot;b&quot; should be before &quot;C&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;asc&quot;,{&quot;caseSensitive&quot;:false}]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>C</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in insensitive ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;asc&quot;,{&quot;natural&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="keyword operator assignment js"><span>:</span></span><span> boolean </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in natural ascending order. &quot;2&quot; should be before &quot;10&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> $ReadOnlyArray</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>number</span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> $ReadOnlyMap</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Map</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="support class js"><span>Map</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="keyword operator js"><span>&gt;&gt;&gt;</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span>ErrorsInRecursiveGenericTypeArgsButDoesNotFix</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>            y</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            x</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            z</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              j</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>              l</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>              k</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="support class js"><span>Map</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="support class js"><span>Array</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>ErrorsInRecursiveGenericTypeArgsButDoesNotFix</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>            y</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            x</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            z</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              j</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>              l</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>              k</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator js"><span>&gt;&gt;&gt;</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;x&quot; should be before &quot;y&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;k&quot; should be before &quot;l&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;x&quot; should be before &quot;y&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;k&quot; should be before &quot;l&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span>BPreservesSpreadOrder</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span>APreservesSpreadOrder</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span>BPreservesSpreadSpans</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span>APreservesSpreadSpans</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span>CPreservesSpreadSpans</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          e</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          d</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;d&quot; should be before &quot;e&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span>BPreservesSpreadOrderAndTypeArgs</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="meta delimiter object comma js"><span>,</span></span><span> number</span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span>APreservesSpreadOrderAndTypeArgs</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>number</span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves block comment before spread BType </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> preserves line comment before spread BType</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves comment in spread BType </span><span class="punctuation definition comment js"><span>*/</span></span></span><span> BType</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>Generic</span><span class="keyword operator comparison js"><span>&gt;</span></span><span> </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves trailing comment in spread AType </span><span class="punctuation definition comment js"><span>*/</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves block comment before spread AType </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> preserves line comment before spread AType</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>...</span></span><span> </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves comment in spread AType </span><span class="punctuation definition comment js"><span>*/</span></span></span><span> AType </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves trailing comment in spread AType </span><span class="punctuation definition comment js"><span>*/</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves block comment before reordered key &quot;c&quot; </span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> preserves line comment before reordered key &quot;c&quot;</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves comment and white space or lack of it </span><span class="punctuation definition comment js"><span>*/</span></span></span><span>string</span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span> preserves trailing comment for key &quot;c&quot; </span><span class="punctuation definition comment js"><span>*/</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          dWithoutComma</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>+</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>-</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span>b</span><span class="keyword operator js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta function json js"><span class="entity name function js"><span>a</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta function json js"><span class="entity name function js"><span>b</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>param</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta function json js"><span class="entity name function js"><span>b</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>param</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta function json js"><span class="entity name function js"><span>b</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>param</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;a&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>            z</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            x</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            y</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta function json js"><span class="entity name function js"><span>b</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>param</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;x&quot; should be before &quot;z&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;a&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          c</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>            z</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>              j</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>              l</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>              k</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            x</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            y</span><span class="keyword operator assignment js"><span>:</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span> boolean</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="meta function json js"><span class="entity name function js"><span>b</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>param</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;k&quot; should be before &quot;l&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;x&quot; should be before &quot;z&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;a&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>+</span></span><span>c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>-</span></span><span>b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;a&quot; should be before &quot;b&quot;.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>        type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>|</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>+</span></span><span>c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          </span><span class="keyword operator js"><span>-</span></span><span>b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>          a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span>      </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;b&quot; should be before &quot;c&quot;.</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Expected type annotations to be in ascending order. &quot;a&quot; should be before &quot;b&quot;.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>boolean </span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant other js"><span>C</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> foo </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="keyword operator assignment js"><span>:</span></span><span> boolean </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;desc&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;desc&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>C</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;desc&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="keyword operator assignment js"><span>:</span></span><span> boolean </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;asc&quot;,{&quot;caseSensitive&quot;:false}]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>C</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;asc&quot;,{&quot;caseSensitive&quot;:false}]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant other js"><span>C</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> c</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;asc&quot;,{&quot;natural&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="constant numeric decimal js"><span>1</span></span><span class="keyword operator assignment js"><span>:</span></span><span>number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>2</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="constant numeric decimal js"><span>10</span></span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-space-after-type-colon"></a></p>
<h3><a id="user-content-space-after-type-colon" class="deep-link" href="#space-after-type-colon" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>space-after-type-colon</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces consistent spacing after the type annotation colon.</p>
<p><a name="eslint-plugin-flowtype-rules-space-after-type-colon-options-12"></a></p>
<h4><a id="user-content-options-12" class="deep-link" href="#options-12" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>This rule has a string argument.</p>
<ul>
<li><code>&quot;always&quot;</code> (default): Require a space after the type annotation colon (e.g. foo: BarType).</li>
<li><code>&quot;never&quot;</code>: Require no spaces after the type annotation colon (e.g. foo:BarType).</li>
</ul>
<p>This rule has an option object.</p>
<ul>
<li><code>&quot;allowLineBreak&quot;</code> - Allow a line break to count as a space following the annotation colon.
<ul>
<li><code>&quot;true&quot;</code>: Enable</li>
<li><code>&quot;false&quot;</code>: Disable</li>
</ul>
</li>
</ul>
<p>{
&quot;rules&quot;: {
&quot;flowtype/space-after-type-colon&quot;: [
2,
&quot;always&quot;, {
&quot;allowLineBreak&quot;: false
}
]
}
}</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> lorem</span><span class="meta delimiter object comma js"><span>,</span></span><span> ipsum</span><span class="meta delimiter object comma js"><span>,</span></span><span> dolor </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span>   </span><span class="variable function js"><span>SomeType</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;{ lorem, ipsum, dolor }&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;{ a, b }&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span> </span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span> </span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;[ a, b ]&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;i&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span>  </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;i&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;i&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span></span></div><div class="line"><span class="source js"><span>  </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must not be a line break after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must not be a line break after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must not be a line break after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>Object</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>Object</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>Object</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta js"><span class="keyword control js"><span>export</span></span><span> </span><span class="variable language js"><span>default</span></span><span> </span></span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> lorem</span><span class="meta delimiter object comma js"><span>,</span></span><span> ipsum</span><span class="meta delimiter object comma js"><span>,</span></span><span> dolor </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>SomeType</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;{ lorem, ipsum, dolor }&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;i&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span>  </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;i&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;i&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>:x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>:  x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator js"><span>?</span></span><span>number) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator js"><span>?</span></span><span class="meta brace round js"><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span></span><span>) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>TArrayPredicate</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>el</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> boolean</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;i&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>TArrayPredicate</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>el</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span>  </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> boolean</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;i&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>TArrayPredicate</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>el</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="constant other js"><span>T</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> boolean</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;i&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>  string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>  string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>  string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span><span>?</span></span><span>string }</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span>  </span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;barType&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span><span>(</span><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;barType&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;barType&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="meta brace round js"><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;barType&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;barType&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function json js"><span class="entity name function js"><span>get</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;get&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> get</span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;get&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function json js"><span class="entity name function js"><span>get</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;get&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> get</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;get&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function json js"><span class="entity name function js"><span>get</span></span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;get&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> get</span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;get&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>  string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span>  string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>    b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>    b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>    c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>  b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>  c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>b</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>c</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>b</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>c</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span>  </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space after type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span>x</span><span class="keyword operator assignment js"><span>:</span></span><span class="constant other js"><span>number</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>7</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after const type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>let</span></span><span> </span><span>x</span><span class="keyword operator js"><span>:</span></span><span>number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after let type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>var</span></span><span> x</span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after var type annotation colon.</span></span></span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="keyword operator js"><span>|</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> lorem</span><span class="meta delimiter object comma js"><span>,</span></span><span> ipsum</span><span class="meta delimiter object comma js"><span>,</span></span><span> dolor </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>SomeType</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span>) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span> </span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span> </span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;allowLineBreak&quot;:true}]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>  </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;,{&quot;allowLineBreak&quot;:true}]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>  </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator js"><span>:</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>Object</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>Object</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>number</span></span><span class="keyword operator js"><span>|</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>string</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="keyword operator js"><span>|</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>string</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span> </span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span>number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> lorem</span><span class="meta delimiter object comma js"><span>,</span></span><span> ipsum</span><span class="meta delimiter object comma js"><span>,</span></span><span> dolor </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>SomeType</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>:x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: (number | string) </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> :(number | string) </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>type</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>type</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>type</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>number) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>number) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta brace curly js"><span>{</span></span><span> x</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span>) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator js"><span>?</span></span><span class="meta brace curly js"><span>{</span></span><span> x</span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span><span>) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta brace round js"><span>(</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span><span>(</span></span><span>number</span><span class="meta brace round js"><span>)</span><span>)</span><span>)</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>TArrayPredicate</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>el</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>T</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> boolean</span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>TArrayPredicate</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>el</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="constant other js"><span>T</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>i</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> boolean</span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="keyword operator js"><span>?</span></span><span>number) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> bar </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="keyword operator js"><span>?</span></span><span>number) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> bar </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span><span>?</span></span><span>string }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type Foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> barType</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span><span>(</span></span><span>string </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="keyword operator js"><span>void</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> get</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>get</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> get</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function json js"><span class="entity name function js"><span>get</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> get</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function json js"><span class="entity name function js"><span>get</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> get</span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="constant other js"><span>A</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span>x</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>number</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>7</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>let</span></span><span> </span><span>x</span><span class="keyword operator js"><span>:</span></span><span> number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>var</span></span><span> x</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-space-before-generic-bracket"></a></p>
<h3><a id="user-content-space-before-generic-bracket" class="deep-link" href="#space-before-generic-bracket" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>space-before-generic-bracket</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces consistent spacing before the opening <code>&lt;</code> of generic type annotation parameters.</p>
<p>This rule takes one argument. If it is <code>'never'</code> then a problem is raised when there is a space before the <code>&lt;</code>. If it is <code>'always'</code> then a problem is raised when there is no space before the <code>&lt;</code>.</p>
<p>The default value is <code>'never'</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;Promise&quot; generic type annotation bracket</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;Promise&quot; generic type annotation bracket</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span>  </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;Promise&quot; generic type annotation bracket</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;Promise&quot; generic type annotation bracket</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span>  </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be one space before &quot;Promise&quot; generic type annotation bracket</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="support class js"><span>Promise</span></span><span> </span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator comparison js"><span>&gt;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-space-before-type-colon"></a></p>
<h3><a id="user-content-space-before-type-colon" class="deep-link" href="#space-before-type-colon" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>space-before-type-colon</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces consistent spacing before the type annotation colon.</p>
<p>This rule takes one argument. If it is <code>'always'</code> then a problem is raised when there is no space before the type annotation colon. If it is <code>'never'</code> then a problem is raised when there is a space before the type annotation colon. The default value is <code>'never'</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span>  </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>  </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span>  </span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> lorem</span><span class="meta delimiter object comma js"><span>,</span></span><span> ipsum</span><span class="meta delimiter object comma js"><span>,</span></span><span> dolor </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>SomeType</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;{ lorem, ipsum, dolor }&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;{ a, b }&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span> </span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span> </span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;[ a, b ]&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>x</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>x</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta brace round js"><span>(</span><span>)</span></span><span>  </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>x</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="storage type js"><span>var</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span> </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span> </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> lorem</span><span class="meta delimiter object comma js"><span>,</span></span><span> ipsum</span><span class="meta delimiter object comma js"><span>,</span></span><span> dolor </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>SomeType</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;{ lorem, ipsum, dolor }&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> : x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>  : x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before return type colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span>  </span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span></span><span>     </span><span class="keyword operator js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; parameter type annotation colon.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span><span>?</span></span><span>string) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; parameter type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span>string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> bar </span><span class="keyword operator assignment js"><span>:</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;bar&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> bar </span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;bar&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;bar&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;bar&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo  </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo  </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; class property type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo  </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span></span><span>  </span><span class="keyword operator js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo   </span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo  </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span></span><span>  </span><span class="keyword operator js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before &quot;foo&quot; type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a  </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a  </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span>  </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a  </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span>  </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>b</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>c</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>b</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>c</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span>  </span><span class="keyword operator assignment js"><span>:</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span>  </span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be 1 space before type cast colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span>x</span><span class="keyword operator assignment js"><span>:</span></span><span class="constant other js"><span>number</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>7</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before const type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>let</span></span><span> </span><span>x</span><span class="keyword operator js"><span>:</span></span><span>number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before let type annotation colon.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>var</span></span><span> x</span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before var type annotation colon.</span></span></span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span>  </span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> lorem</span><span class="meta delimiter object comma js"><span>,</span></span><span> ipsum</span><span class="meta delimiter object comma js"><span>,</span></span><span> dolor </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>SomeType</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span>) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a </span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span><span> </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace square js"><span>[</span></span><span> </span><span class="variable function js"><span>a</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable function js"><span>b</span></span><span> </span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>x</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>x</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>)</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>var</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>var</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function method definition js"><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> bar </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Props</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="variable language js"><span>this</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>props</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span> </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta function js"><span class="entity name function constructor js"><span>constructor</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span> </span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage modifier js"><span>async</span></span><span> </span><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>foo</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> lorem</span><span class="meta delimiter object comma js"><span>,</span></span><span> ipsum</span><span class="meta delimiter object comma js"><span>,</span></span><span> dolor </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>SomeType</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="meta delimiter object comma js"><span>,</span></span><span> b </span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta delimiter object comma js"><span>,</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> : x </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: (number | string) </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>a</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> : (number | string) </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>type</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>type</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> </span><span class="variable function js"><span>number</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="variable function js"><span>type</span></span><span> </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span>   </span><span class="keyword operator js"><span>?</span><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> number</span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="keyword operator js"><span>?</span></span><span>number) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> bar </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>number</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="keyword operator js"><span>?</span></span><span>number) </span><span class="meta function js"><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>number</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="meta function js"><span class="entity name function js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> bar </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span> </span><span class="storage type function js"><span>=&gt;</span></span></span><span> string</span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>3</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span class="keyword operator js"><span>?</span></span><span>string }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> bar </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> number </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> bar </span><span class="keyword operator assignment js"><span>:</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> bar</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>Foo</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> bar </span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>X</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="storage modifier js"><span>static</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo   </span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> foo</span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo </span><span class="keyword operator assignment js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span>foo</span><span class="keyword operator js"><span>?</span></span><span> </span><span class="keyword operator js"><span>:</span></span><span> string </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>string</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> b</span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="keyword operator js"><span>+</span></span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span>b</span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span>c </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>b</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>]</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>c</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta brace square js"><span>[</span></span><span>a</span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>b</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>]</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="meta brace round js"><span>(</span></span><span>c</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="keyword operator assignment js"><span>:</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span class="constant other js"><span>x</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace round js"><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta brace round js"><span>(</span><span>(</span></span><span>x</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace round js"><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>const</span></span><span> </span><span>x </span><span class="keyword operator assignment js"><span>:</span></span><span class="constant other js"><span>number</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>7</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>let</span></span><span> </span><span>x</span><span> </span><span class="keyword operator js"><span>:</span></span><span>number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="meta function js"><span class="meta js"><span class="storage type js"><span>var</span></span><span> x </span><span class="keyword operator assignment js"><span>:</span></span><span>number </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant numeric decimal js"><span>42</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-spread-exact-type"></a></p>
<h3><a id="user-content-spread-exact-type" class="deep-link" href="#spread-exact-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>spread-exact-type</code></h3>
<p>Enforce object types, that are spread to be exact type explicitly.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>...</span></span><span class="meta brace curly js"><span>{</span></span><span>test</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use $Exact to make type spreading safe.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span>test</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>...</span></span><span>foo</span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Use $Exact to make type spreading safe.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>...</span></span><span>$Exact</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="meta brace curly js"><span>{</span></span><span>test</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span>test</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type bar </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span class="keyword operator js"><span>...</span></span><span>$Exact</span><span class="keyword operator comparison js"><span>&lt;</span></span><span>foo</span><span class="keyword operator comparison js"><span>&gt;</span></span><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-type-id-match"></a></p>
<h3><a id="user-content-type-id-match" class="deep-link" href="#type-id-match" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>type-id-match</code></h3>
<p>Enforces a consistent naming pattern for type aliases.</p>
<p><a name="eslint-plugin-flowtype-rules-type-id-match-options-13"></a></p>
<h4><a id="user-content-options-13" class="deep-link" href="#options-13" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>This rule needs a text RegExp to operate with Its signature is as follows:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>rules</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>flowtype/type-id-match</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="meta brace square js"><span>[</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="constant numeric decimal js"><span>2</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div><div class="line"><span class="source js"><span>            </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>^([A-Z][a-z0-9]*)+Type$</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span></div><div class="line"><span class="source js"><span>        </span><span class="meta brace square js"><span>]</span></span></span></div><div class="line"><span class="source js"><span>    </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p><code>'^([A-Z][a-z0-9]*)+Type$$'</code> is the default pattern.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type identifier 'foo' does not match pattern '/^([A-Z][a-z0-9]*)+Type$/'.</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;^foo$&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Type identifier 'FooType' does not match pattern '/^foo$/'.</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type FooType </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;^foo$&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type foo </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-type-import-style"></a></p>
<h3><a id="user-content-type-import-style" class="deep-link" href="#type-import-style" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>type-import-style</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces a particular style for type imports:</p>
<pre><code>// 'identifier' style
import {type T, type U, type V} from '...';

// 'declaration' style
import type {T, U, V} from '...';
</code></pre><p><a name="eslint-plugin-flowtype-rules-type-import-style-options-14"></a></p>
<h4><a id="user-content-options-14" class="deep-link" href="#options-14" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h4>
<p>The rule has a string option:</p>
<ul>
<li><code>&quot;identifier&quot;</code> (default): Enforces that type imports are all in the
'identifier' style.</li>
<li><code>&quot;declaration&quot;</code>: Enforces that type imports are all in the 'declaration'
style.</li>
</ul>
<p>This rule has an object option:</p>
<ul>
<li><code>ignoreTypeDefault</code> - if <code>true</code>, when in &quot;identifier&quot; mode, default type imports will be ignored. Default is <code>false</code>.</li>
</ul>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>A</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other module js"><span>B</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected &quot;import type&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;identifier&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>A</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other module js"><span>B</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected &quot;import type&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;identifier&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>A</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other module js"><span>B</span></span><span> </span><span class="keyword control js"><span>as</span></span><span> </span><span class="variable other js"><span>C</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected &quot;import type&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;identifier&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected &quot;import type&quot;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;declaration&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>B</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected type import</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: Unexpected type import</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>B</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;identifier&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>B</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;declaration&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="punctuation definition begin js"><span>{</span></span><span class="variable other module js"><span>A</span></span><span class="meta delimiter object comma js"><span>,</span></span><span> </span><span class="variable other module js"><span>B</span></span><span class="punctuation definition end js"><span>}</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;identifier&quot;]</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>typeof</span></span><span> </span><span class="variable language js"><span>*</span></span><span> </span><span class="keyword control js"><span>as</span></span><span> </span><span class="variable other js"><span>A</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;identifier&quot;,{&quot;ignoreTypeDefault&quot;:true}]</span></span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;identifier&quot;]</span></span></span></div><div class="line"><span class="source js"><span>declare </span><span class="support variable js"><span>module</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>m</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> </span><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>a</span><span class="punctuation definition string end js"><span>'</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-union-intersection-spacing"></a></p>
<h3><a id="user-content-union-intersection-spacing" class="deep-link" href="#union-intersection-spacing" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>union-intersection-spacing</code></h3>
<p><em>The <code>--fix</code> option on the command line automatically fixes problems reported by this rule.</em></p>
<p>Enforces consistent spacing around union and intersection type separators (<code>|</code> and <code>&amp;</code>).</p>
<p>This rule takes one argument. If it is <code>'always'</code> then a problem is raised when there is no space around the separator. If it is <code>'never'</code> then a problem is raised when there is a space around the separator.</p>
<p>The default value is <code>'always'</code>.</p>
<p>The following patterns are considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>|</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span>x</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator js"><span>|</span></span><span class="meta brace curly js"><span>{</span></span><span>y</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span>boolean</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>|</span></span><span>number</span><span class="keyword operator js"><span>|</span></span><span>boolean</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="keyword operator js"><span>|</span></span><span class="meta brace round js"><span>(</span></span><span>number </span><span class="keyword operator js"><span>|</span></span><span> foo</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after union type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>&amp;</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;always&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>&amp;</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>&amp;</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span>x</span><span class="keyword operator assignment js"><span>:</span></span><span> string</span><span class="meta brace curly js"><span>}</span></span><span class="keyword operator js"><span>&amp;</span></span><span class="meta brace curly js"><span>{</span></span><span>y</span><span class="keyword operator assignment js"><span>:</span></span><span> number</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>&amp;</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>&amp;</span></span><span> number </span><span class="keyword operator js"><span>&amp;</span></span><span>boolean</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>&amp;</span></span><span>number</span><span class="keyword operator js"><span>&amp;</span></span><span>boolean</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span></span><span class="keyword operator js"><span>&amp;</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="keyword operator js"><span>&amp;</span></span><span class="meta brace round js"><span>(</span></span><span>number </span><span class="keyword operator js"><span>&amp;</span></span><span> foo</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be a space after intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>&amp;</span></span><span>number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space before intersection type annotation separator</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>&amp;</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Message: There must be no space after intersection type annotation separator</span></span></span></div></pre></div>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>|</span></span><span> number </span><span class="keyword operator js"><span>|</span></span><span> boolean</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="keyword operator js"><span>|</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>number </span><span class="keyword operator js"><span>|</span></span><span> foo</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>|</span></span><span>number</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>|</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>|</span></span><span> number</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>|</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>|</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>|</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>&amp;</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string </span><span class="keyword operator js"><span>&amp;</span></span><span> number </span><span class="keyword operator js"><span>&amp;</span></span><span> boolean</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span></span><span> </span><span class="keyword operator js"><span>&amp;</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace round js"><span>(</span><span>(</span></span><span>string</span><span class="meta brace round js"><span>)</span><span>)</span></span><span> </span><span class="keyword operator js"><span>&amp;</span></span><span> </span><span class="meta brace round js"><span>(</span></span><span>number </span><span class="keyword operator js"><span>&amp;</span></span><span> foo</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Options: [&quot;never&quot;]</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>&amp;</span></span><span>number</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>&amp;</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>&amp;</span></span><span> number</span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>&amp;</span></span><span> string</span></span></div><div class="line"><span class="source js"><span class="keyword operator js"><span>&amp;</span></span><span> number</span></span></div><div class="line"><span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Settings: {&quot;flowtype&quot;:{&quot;onlyFilesWithFlowAnnotation&quot;:true}}</span></span></span></div><div class="line"><span class="source js"><span>type </span><span class="constant other js"><span>X</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> string</span><span class="keyword operator js"><span>&amp;</span></span><span> number</span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-use-flow-type"></a></p>
<h3><a id="user-content-use-flow-type" class="deep-link" href="#use-flow-type" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>use-flow-type</code></h3>
<p>Marks Flow <a href="https://flowtype.org/docs/type-aliases.html" rel="nofollow">type alias</a> declarations as used.</p>
<p>Used to suppress <a href="http://eslint.org/docs/rules/no-unused-vars" rel="nofollow"><code>no-unused-vars</code></a> errors that are triggered by type aliases.</p>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span>declare </span><span class="meta class js"><span class="storage type class js"><span>class</span></span><span> </span><span class="entity name type class js"><span>A</span></span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-unused-vars&quot;:1}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare </span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>A</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>: Y</span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-unused-vars&quot;:1}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare </span><span class="support variable js"><span>module</span></span><span> </span><span class="constant other js"><span>A</span></span><span> </span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-unused-vars&quot;:1}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare </span><span class="support variable js"><span>module</span></span><span> </span><span class="constant other js"><span>A</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> declare </span><span class="storage type js"><span>var</span></span><span> a</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>Y</span></span><span> </span><span class="meta brace curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-unused-vars&quot;:1}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span>declare </span><span class="storage type js"><span>var</span></span><span> </span><span class="constant other js"><span>A</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>Y</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-unused-vars&quot;:1}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type </span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>B</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> ComponentType</span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>A</span></span><span class="keyword operator js"><span>&gt;&gt;</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>B</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>let</span></span><span> x</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>X</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>x</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-unused-vars&quot;:1}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta import js"><span class="keyword control js"><span>import</span></span><span> </span><span class="variable other module js"><span>type</span></span><span> </span><span class="variable other module js"><span>A</span></span><span> </span><span class="keyword control js"><span>from</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>a</span><span class="punctuation definition string end js"><span>&quot;</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span><span> type </span><span class="constant other js"><span>X</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span class="constant other js"><span>B</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="constant other js"><span>A</span></span><span class="keyword operator comparison js"><span>&lt;</span></span><span>string</span><span class="keyword operator js"><span>&gt;&gt;</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta brace curly js"><span>{</span></span><span> b</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>B</span></span><span> </span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="storage type js"><span>let</span></span><span> x</span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="constant other js"><span>X</span></span><span class="punctuation terminator statement js"><span>;</span></span><span> </span><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>x</span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span> Additional rules: {&quot;no-unused-vars&quot;:1}</span></span></span></div></pre></div>
<p><a name="eslint-plugin-flowtype-rules-valid-syntax"></a></p>
<h3><a id="user-content-valid-syntax" class="deep-link" href="#valid-syntax" aria-hidden="true" rel="nofollow"><svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>valid-syntax</code></h3>
<p><strong>Deprecated</strong> Babylon (the Babel parser) v6.10.0 fixes parsing of the invalid syntax this plugin warned against.</p>
<p>Checks for simple Flow syntax errors.</p>
<p>The following patterns are not considered problems:</p>
<div class="highlight js"><pre class="editor editor-colors"><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>string</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>1</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div><div class="line"><span class="source js"><span> </span></span></div><div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span> </span><span class="entity name function js"><span>x</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>foo</span></span><span class="keyword operator assignment js"><span>:</span></span><span> </span><span class="variable function js"><span>Type</span></span><span> </span><span class="keyword operator assignment js"><span>=</span></span><span> </span><span class="meta function-call js"><span class="entity name function js"><span>bar</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span> </span><span class="punctuation definition function begin curly js"><span>{</span></span><span class="punctuation definition function end curly js"><span>}</span></span></span></div></pre></div>
</div></article></div><div class="pv4"><h2 id="user-content-keywords" class="a0dff0b1 mt2 pt2 mb3 pb3 f4 fw6 b--black-10">Keywords</h2><ul class="list pl0"><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:eslint">eslint</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:plugin">plugin</a></li><li class="dib mr2"><a class="_75a5f581 f4 fw6 fl db pv1 ma1 black-70 link hover-black animate" href="/search?q=keywords:flowtype">flowtype</a></li></ul></div></section></div><div class="fdbf4038 w-third-l mt3 w-100 ph3 ph4-m pv3 pv0-l order-1-ns order-0"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Install</h3><p class="d767adf4 lh-copy truncate ph0 mb3 black-80 b5be2af6 f6 flex flex-row"><svg viewBox="0 0 12.32 9.33"><g><line class="st1" x1="7.6" y1="8.9" x2="7.6" y2="6.9"></line><rect width="1.9" height="1.9"></rect><rect x="1.9" y="1.9" width="1.9" height="1.9"></rect><rect x="3.7" y="3.7" width="1.9" height="1.9"></rect><rect x="1.9" y="5.6" width="1.9" height="1.9"></rect><rect y="7.5" width="1.9" height="1.9"></rect></g></svg><code class="flex-auto truncate db" title="Copy Command to Clipboard"><span>npm i <!-- -->eslint-plugin-flowtype</span></code><svg aria-hidden="true" focusable="false" data-prefix="far" data-icon="copy" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"></path></svg></p><div><div><h3 class="c84e15be f5 mt2 pt2 mb0 black-50 _5cfc0900"><svg viewBox="0 0 7.22 11.76"><title>Downloads</title><g><polygon points="4.59 4.94 4.59 0 2.62 0 2.62 4.94 0 4.94 3.28 9.53 7.22 4.94 4.59 4.94"></polygon><rect x="0.11" y="10.76" width="7" height="1"></rect></g></svg>Weekly Downloads</h3><div class="_000ae427 flex flex-row-reverse items-end"><svg class="_418c4939 flex-none" width="200" height="40" stroke-width="3" stroke="#8956FF" fill="rgba(137, 86, 255, .2)"></svg><p class="_9ba9a726 f4 tl flex-auto fw6 black-80 ma0 pr2 pb1">2,985,010</p></div></div></div><div class="_702d723c dib w-50 bb b--black-10 pr2"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Version</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4">5.1.3</p></div><div class="_702d723c dib w-50 bb b--black-10 pr2"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">License</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4">BSD-3-Clause</p></div><div class="_702d723c dib w-50 bb b--black-10 pr2"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Unpacked Size</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4">284 kB</p></div><div class="_702d723c dib w-50 bb b--black-10 pr2"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Total Files</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4">72</p></div><div class="_702d723c dib w-50 bb b--black-10 pr2 w-100"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Homepage</h3><p class="_40aff104 fw6 mb3 mt2 truncate black-80 f5"><a class="b2812e30 f2874b88 fw6 mb3 mt2 truncate black-80 f4 link" rel="noopener noreferrer nofollow" href="https://github.com/gajus/eslint-plugin-flowtype#readme"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="link" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg>github.com/gajus/eslint-plugin-flowtype#readme</a></p></div><div class="_702d723c dib w-50 bb b--black-10 pr2 w-100"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Repository</h3><p class="_40aff104 fw6 mb3 mt2 truncate black-80 f5"><a class="b2812e30 f2874b88 fw6 mb3 mt2 truncate black-80 f4 link" rel="noopener noreferrer nofollow" href="https://github.com/gajus/eslint-plugin-flowtype"><span class="_9e13d83d dib v-mid"><svg viewBox="0 0 92 92" version="1.1" xmlns="http://www.w3.org/2000/svg"><title>Git</title><g stroke="none" fill="#0a0b09"><path d="M90.155,41.965 L50.036,1.847 C47.726,-0.464 43.979,-0.464 41.667,1.847 L33.336,10.179 L43.904,20.747 C46.36,19.917 49.176,20.474 51.133,22.431 C53.102,24.401 53.654,27.241 52.803,29.706 L62.989,39.891 C65.454,39.041 68.295,39.59 70.264,41.562 C73.014,44.311 73.014,48.768 70.264,51.519 C67.512,54.271 63.056,54.271 60.303,51.519 C58.235,49.449 57.723,46.409 58.772,43.861 L49.272,34.362 L49.272,59.358 C49.942,59.69 50.575,60.133 51.133,60.69 C53.883,63.44 53.883,67.896 51.133,70.65 C48.383,73.399 43.924,73.399 41.176,70.65 C38.426,67.896 38.426,63.44 41.176,60.69 C41.856,60.011 42.643,59.497 43.483,59.153 L43.483,33.925 C42.643,33.582 41.858,33.072 41.176,32.389 C39.093,30.307 38.592,27.249 39.661,24.691 L29.243,14.271 L1.733,41.779 C-0.578,44.092 -0.578,47.839 1.733,50.15 L41.854,90.268 C44.164,92.578 47.91,92.578 50.223,90.268 L90.155,50.336 C92.466,48.025 92.466,44.275 90.155,41.965"></path></g></svg></span><span>github.com/gajus/eslint-plugin-flowtype</span></a></p></div><div class="_702d723c dib w-50 bb b--black-10 pr2 w-100"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Last publish</h3><p class="f2874b88 fw6 mb3 mt2 truncate black-80 f4"><time dateTime="2020-05-27T18:36:11.882Z" title="2020-5-27 18:36:11">17 days ago</time></p></div><div class="w-100"><h3 class="c84e15be f5 mt2 pt2 mb0 black-50">Collaborators</h3><ul class="list pl0 cf"><li class="_426b8533 fl dib mr2 mb2"><div><a href="/~gajus"><img src="https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=100&amp;default=retro" style="width:42px;height:42px;min-width:42px;border-radius:4%" alt="avatar" title="gajus"/></a></div></li></ul></div><div class="w-100"><a class="c37751f6 _24a1e9c7 dab9924c br2 pv2 ph3 fw5 f5 tc button button-reset pointer ma2 truncate ml0 no-underline mt2 dib w-100" rel="noopener noreferrer nofollow" href="https://runkit.com/npm/eslint-plugin-flowtype"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="terminal" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512"><path fill="currentColor" d="M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z"></path></svg><strong>Try</strong> on RunKit</a></div><div class="_33c89934 flex flex-column-l items-start-l"><a class="_4a3f8f21 _24a1e9c7 dab9924c br2 pv2 ph3 fw5 f5 tc button button-reset pointer ma2 truncate ml0 no-underline mt2 dib w-100" href="/advisories/report?package=eslint-plugin-flowtype"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="flag" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M349.565 98.783C295.978 98.783 251.721 64 184.348 64c-24.955 0-47.309 4.384-68.045 12.013a55.947 55.947 0 0 0 3.586-23.562C118.117 24.015 94.806 1.206 66.338.048 34.345-1.254 8 24.296 8 56c0 19.026 9.497 35.825 24 45.945V488c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-94.4c28.311-12.064 63.582-22.122 114.435-22.122 53.588 0 97.844 34.783 165.217 34.783 48.169 0 86.667-16.294 122.505-40.858C506.84 359.452 512 349.571 512 339.045v-243.1c0-23.393-24.269-38.87-45.485-29.016-34.338 15.948-76.454 31.854-116.95 31.854z"></path></svg><strong>Report</strong> a vulnerability</a></div></div></div></main><footer class="cd2827bb bt b--black-10 mt4"><div class="center mw9 pa3 flex flex-column flex-wrap-m flex-row-ns"><div class="flex-auto pa4-ns pa3 w-100 w-10-l"><div class="_802b5507 pt3"><svg viewBox="0 0 27.23 27.23"><rect fill="#333333" width="27.23" height="27.23" rx="2"></rect><polygon fill="#fff" points="5.8 21.75 13.66 21.75 13.67 9.98 17.59 9.98 17.58 21.76 21.51 21.76 21.52 6.06 5.82 6.04 5.8 21.75"></polygon></svg></div></div><div class="flex-auto pa4-ns pa3 w-30-ns w-50-m"><h3 class="_1b8c0a9f">Help</h3><ul class="list pl0"><li class="pv1"><a class="link" href="https://docs.npmjs.com">Documentation</a></li><li class="pv1"><a class="link" href="https://npm.community">Community</a></li><li class="pv1"><a class="link" href="/resources/">Case Studies</a></li><li class="pv1"><a class="link" href="https://www.npmjs.com/advisories">Advisories</a></li><li class="pv1 npme-hidden"><a class="link" href="http://status.npmjs.org/">Status</a></li><li class="pv1"><a class="link" href="/support">Contact</a></li></ul></div><div class="flex-auto pa4-ns pa3 w-30-ns w-50-m"><h3 class="_1b8c0a9f">About</h3><ul class="list pl0"><li class="pv1"><a class="link" href="/about">Company</a></li><li class="pv1"><a class="link" href="https://blog.npmjs.org/">Blog</a></li><li class="pv1 npme-hidden"><a class="link" href="/jobs">Careers</a></li><li class="pv1"><a class="link" href="https://www.youtube.com/playlist?list=PLQso55XhxkgDSLC0GzjGFeUkJ_T6YzVXK" target="_blank" rel="noopener noreferrer nofollow">Webinars</a></li><li class="pv1"><a class="link" href="/press">Press</a></li><li class="pv1"><a class="link" href="/npm-weekly">Newsletter</a></li></ul></div><div class="flex-auto pa4-ns pa3 w-30-ns w-50-m"><h3 class="_1b8c0a9f">Terms &amp; Policies</h3><ul class="list pl0"><li class="pv1"><a class="link" href="/policies/">Policies</a></li><li class="pv1"><a class="link" href="/policies/terms">Terms of Use</a></li><li class="pv1 npme-hidden"><a class="link" href="/policies/conduct">Code of Conduct</a></li><li class="pv1 npme-hidden"><a class="link" href="/policies/privacy">Privacy</a></li></ul></div></div></footer></div><div class="_8a62ca63 fixed top-0 left-0 z-999" style="opacity:0;transform:scaleX(1);-webkit-transform:scaleX(1);-moz-transform:scaleX(1)"></div></div></div><script integrity="sha512-Phzz/FB4wblDnSVjSZAVQh1rTJ/+4qXOFtFYRGF4czouuD42DADOiSLVe99DgEm/C9/6yXgHGlPcdPRoSZr/xA==">window.__context__ = {"context":{"isNpme":false,"npmExpansions":["Numerous Panicky Mimes","Narnia's Poofy Meatcleaver","Nondeterministic Programming Methodology","Nobel Prize Magnet","Nihilistic Pool Man","Naughty Platypus Memorabilia","Negatively Proportional Model","Neighbourhood Party Manager","Notable Pseudocode Mashups","Nine Parsecs from Milwaukee"],"notifications":[],"csrftoken":"ZgCIP409WJ7-gFYu0cgYsYZvXN4nNLjy3RXuat6-3GP","user":null,"documentContext":{"readme.data":"readme"},"undefined":true,"readme":{"ref":"readme","data":null},"upsell":{"_id":"ckawuihxeziicg174v50tz3hb","published":true,"trash":false,"type":"upsell-box","title":"Open RFC discussions","upsellText":"Learn about our RFC process, Open RFC meetings \u0026 more.","linkText":"Join in the discussion!","linkURL":"https://github.com/npm/rfcs","slug":"open-rfc-discussions","tags":[],"workflowLocale":"default","workflowGuid":"ckawuihwqzii9g174x5627luk","createdAt":"2020-06-01T18:47:54.434Z","updatedAt":"2020-06-01T18:48:05.032Z","titleSortified":"open rfc discussions","highSearchText":"open rfc discussions open rfc discussions open rfc discussions learn about our rfc process open rfc meetings more join in the discussion https github com npm rfcs open rfc discussions","highSearchWords":["open","rfc","discussions","learn","about","our","process","meetings","more","join","in","the","discussion","https","github","com","npm","rfcs"],"lowSearchText":"open rfc discussions open rfc discussions open rfc discussions learn about our rfc process open rfc meetings more join in the discussion https github com npm rfcs open rfc discussions","searchSummary":"","docPermissions":[],"loginRequired":null,"viewUsersIds":[],"viewGroupsIds":[],"editUsersIds":[],"editGroupsIds":[],"viewUsersRelationships":{},"viewGroupsRelationships":{},"editUsersRelationships":{},"editGroupsRelationships":{},"_edit":true,"_publish":true,"_originalWidgets":{}},"starAction":"/package/eslint-plugin-flowtype/star","packageUrl":"/package/eslint-plugin-flowtype","canEditPackage":false,"dependents":{"dependentsCount":4445,"dependentsTruncated":["react_redux_pwa_tmp","@barrard/react-scripts","react-scripts-auto","@lugia/lugia-complie","@totum/react-scripts","eslint-config-kennship","william-react-scripts","@0xaio/react-scripts","@avanteam/my-components","myclubs-react-scripts","@yizeng/react-scripts","eslint-config-cumul8","eslint-config-webdev-201x","@nlesc/react-scripts","concord-react-scripts","@datapipeline/react-scripts","custom-react-scripts","rx3-scripts","@svrcekmichal/react-scripts","react-scripts-kamahl19-fork","react-relay-scripts","dan-react-scripts","musefind-react-scripts","@knit/eslint-config-socks","@cliffedge/react-scripts","rk-react-redux-scripts","unicodelabs-react-scripts","react-scripts-cssm-hmr","eslint-config-anvilabs","react-scripts-override","quick-webpack","eslint-config-sky","eslint-config-boldr","@valentin-seehausen/react-scripts","react-scripts-sass","xiaohu-react-scripts","craigsssmith-react-scripts","js_l1_brain_games-s12","eslint-config-proper","nfx-react-scripts","@workpop/eslint-config-workpop","quoine-react-scripts","doug-app","@dotted/react-scripts-outpostesport","eslint-config-swatinem","tcra","react-webextension-scripts","smoll-react-scripts","@mvgijssel/custom-react-scripts","@novivia/linter"]},"downloads":[{"downloads":1759035,"label":"2019-06-15 to 2019-06-21"},{"downloads":1795034,"label":"2019-06-22 to 2019-06-28"},{"downloads":1714009,"label":"2019-06-29 to 2019-07-05"},{"downloads":1944174,"label":"2019-07-06 to 2019-07-12"},{"downloads":1843024,"label":"2019-07-13 to 2019-07-19"},{"downloads":1862204,"label":"2019-07-20 to 2019-07-26"},{"downloads":1907920,"label":"2019-07-27 to 2019-08-02"},{"downloads":1902135,"label":"2019-08-03 to 2019-08-09"},{"downloads":1943116,"label":"2019-08-10 to 2019-08-16"},{"downloads":2015228,"label":"2019-08-17 to 2019-08-23"},{"downloads":2024360,"label":"2019-08-24 to 2019-08-30"},{"downloads":1913516,"label":"2019-08-31 to 2019-09-06"},{"downloads":1976430,"label":"2019-09-07 to 2019-09-13"},{"downloads":1912690,"label":"2019-09-14 to 2019-09-20"},{"downloads":1949713,"label":"2019-09-21 to 2019-09-27"},{"downloads":1972681,"label":"2019-09-28 to 2019-10-04"},{"downloads":1988035,"label":"2019-10-05 to 2019-10-11"},{"downloads":1975156,"label":"2019-10-12 to 2019-10-18"},{"downloads":2063661,"label":"2019-10-19 to 2019-10-25"},{"downloads":1979592,"label":"2019-10-26 to 2019-11-01"},{"downloads":2082433,"label":"2019-11-02 to 2019-11-08"},{"downloads":2050923,"label":"2019-11-09 to 2019-11-15"},{"downloads":2137008,"label":"2019-11-16 to 2019-11-22"},{"downloads":1890946,"label":"2019-11-23 to 2019-11-29"},{"downloads":2050436,"label":"2019-11-30 to 2019-12-06"},{"downloads":2075649,"label":"2019-12-07 to 2019-12-13"},{"downloads":2014821,"label":"2019-12-14 to 2019-12-20"},{"downloads":1007577,"label":"2019-12-21 to 2019-12-27"},{"downloads":1142636,"label":"2019-12-28 to 2020-01-03"},{"downloads":1950637,"label":"2020-01-04 to 2020-01-10"},{"downloads":2157827,"label":"2020-01-11 to 2020-01-17"},{"downloads":2145801,"label":"2020-01-18 to 2020-01-24"},{"downloads":2222784,"label":"2020-01-25 to 2020-01-31"},{"downloads":2407888,"label":"2020-02-01 to 2020-02-07"},{"downloads":2617918,"label":"2020-02-08 to 2020-02-14"},{"downloads":2722509,"label":"2020-02-15 to 2020-02-21"},{"downloads":2846843,"label":"2020-02-22 to 2020-02-28"},{"downloads":2869166,"label":"2020-02-29 to 2020-03-06"},{"downloads":2822065,"label":"2020-03-07 to 2020-03-13"},{"downloads":2958137,"label":"2020-03-14 to 2020-03-20"},{"downloads":3121050,"label":"2020-03-21 to 2020-03-27"},{"downloads":3172801,"label":"2020-03-28 to 2020-04-03"},{"downloads":3067721,"label":"2020-04-04 to 2020-04-10"},{"downloads":2899193,"label":"2020-04-11 to 2020-04-17"},{"downloads":3165883,"label":"2020-04-18 to 2020-04-24"},{"downloads":3054525,"label":"2020-04-25 to 2020-05-01"},{"downloads":3079571,"label":"2020-05-02 to 2020-05-08"},{"downloads":3193391,"label":"2020-05-09 to 2020-05-15"},{"downloads":3101955,"label":"2020-05-16 to 2020-05-22"},{"downloads":2740943,"label":"2020-05-23 to 2020-05-29"},{"downloads":2895461,"label":"2020-05-30 to 2020-06-05"},{"downloads":2985010,"label":"2020-06-06 to 2020-06-12"}],"packument":{"author":{"name":"Gajus Kuizinas","avatars":{"small":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"gajus@gajus.com"},"description":"Flowtype linting rules for ESLint.","homepage":"https://github.com/gajus/eslint-plugin-flowtype#readme","repository":"https://github.com/gajus/eslint-plugin-flowtype","distTags":{"latest":"5.1.3"},"keywords":["eslint","plugin","flowtype"],"maintainers":[{"name":"gajus","avatars":{"small":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"gajus@gajus.com"}],"name":"eslint-plugin-flowtype","license":"BSD-3-Clause","version":"5.1.3","versions":[{"version":"5.1.3","date":{"ts":1590604571882,"rel":"17 days ago"},"dist":{"integrity":"sha512-UU+BbIxBflqJ171yxbd/HcOktCmOdhXbchIVIq/yBvKpLZXvfzNDOyJGcnuQYLaH840hdoIdU/bqxhoW6I0rIQ==","shasum":"0c63694463b0e8b296975649d637dd39fdf9e877","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-5.1.3.tgz","fileCount":72,"unpackedSize":283734,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezrMcCRA9TVsSAnZWagAAUZwQAJZFARpOJ8Nn4n8C65Gi\nLdYfAlJSO0h0kNKR08p7uGsHCUoyIHOyY1HeFs6dLxksm6HXZzd1toQ6l3IR\nmZVDpaE1qWrbcp3IbFlMJAVLBKrC14rrJaeM2AZ/b1PRC3FjEjTrXkvONvUD\n0GHTJbKCdgWXfLOqePFkvTiyfBxGne0QKsRiYjTRsufETl6a1Bn10IncSW1I\nmFusMvWlFmDboBIhvlDSHcGnD+4Q21YAhdgeiE25TFdA0b5D4MT85g2DOaIb\nK7E+c6HfawTuCAXQxxUdMzerc5cSA10wcNp6bpyqrkt3zNMtSCMzBkXL4G8Z\nj0YNp6VAEe+3GO7pmM8A2FS7M7xpEq0MxKgvdTuLUOTdjI2VoIK/tYKuhFlk\nYKp9mSyqfiepS+FLj0ABYa0Oeswsq42hG7xScMgf//TKXKSGssO79hkTq9qq\nh7jrXQTuYYBXdcmt4QJA0FFDuPrvBJGDpf8FmMvtGrivSaF6sjmMmr3EEYxV\n94qKMEEu/ZReiQUeTvRbsCgZtVSi4s14oZLaphsuR3WAl0ddmtibRFT+qxrK\nojNLD4eO6sAVQL+xp0wxUXhzIhzl87OGSlShYRMu2XouKiPABjHmwVZN7/bh\nGB6d8ZbHKyhZCzL3fGWikIFBP9oxthbanprvEAsRhosY0rflMGss/Hh2HVZV\nm4pk\r\n=hfB7\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"5.1.2","date":{"ts":1590604409053,"rel":"17 days ago"},"dist":{"integrity":"sha512-zwpFwiuq6KMqls3+RadFdJGIRsmEW1sNssSr6JQcKsB9bCcs1W5nl0cFf4b/FjpaVSZkLzfO7ZEr0XLsbjbslA==","shasum":"fcc408015fab52c62ee8fdf6b5ef747b6625948e","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-5.1.2.tgz","fileCount":72,"unpackedSize":283734,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezrJ5CRA9TVsSAnZWagAAZkQP/3K9zvMJw0KOjNkUjMIh\nre7QBQt67C4KvTaNMbQDprg85w5fBqavYzgId/oqlm2lRiOkbjlOw9zc/lD5\noc9UCvQQEMe0vVmPxaPabnb5zHRsusZRLNH5Z4bBKKErqMmtPU2rEgIy5QfT\nYRR9xAf4LeFedPxGcn9++XplzsBPNFZ7OaYiWBeVktzoAWTXSGBmewF0k+gf\n50APhQU+DNX6IdZ/j8Awy4rVNeYC8C282sdo3pZEhd3DT3L2BwYeoZ/NETFF\n6k4LxR9O52GEEnUCL/cbSoHnCJ20RYVqfkT9DhapK8a4rFkHB+GQWmVeT6Gu\ngo9AANfNFf2oTn+Ri9ctq3G1OAttDPCw+t+WxJ8r62ABp0e6GvIb25dxDKu1\nsJgWaJ4Y+4S7yEyFC5lqoDDdkYnw+p3TzSBmCx9i6WVZQ/epFwcsbfCQcKXF\nYWHUEoDJfV1Lw4dGBABV68YqEofUiszr8kVWVIIj1dO/6IMCOtcgmcu5vC8g\nwETSZ1RrL5hKcS5u6jaZd51XInmYVhlMn1ALzPMmoW87OzLb8pXXkvX7U3lo\n/9lay8X/L3R4/Aj2YMQFEeM8KBjjXMfobHHAv0r3pVwb60+NQp5UOmXi9jqZ\ngl2pPXuE2bkaEWdAzhxuLlwYFGyDUoM6rYRQXLRSsmEiW25bn4etCMGqtAHi\nDl3U\r\n=wgXA\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"5.1.1","date":{"ts":1590520095492,"rel":"18 days ago"},"dist":{"integrity":"sha512-YL6/lqBh9W2VWdkQhEs4QD8VyvFYEU6EmFOqeQWXINYss2bQXKTh5lFerjEg05ov/cgTgyOTDOOnUGQRGnfOzw==","shasum":"4f8e396ae5b483e30d243f2b75063faf5333c502","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-5.1.1.tgz","fileCount":72,"unpackedSize":283674,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezWkgCRA9TVsSAnZWagAAYx0QAJKYNJiYfcSiiCBcBnp0\nCZ2LoofLQz4JrIpbZ+89eH7KfazWIz3e1mVMhT2hOsUvtRGkxnd4u6ARYoF7\n3mK2nJte8nNPFB7QNEwVDfVfjr5VC4mCxQqWt5nu1iJbdN4gsVffwDu2Te/1\nR0VmWsTn0zHaaXFBJd/pMqcW9cnlqHNp+BcATT7E2YB2dY9eZc6h6ORoaCLZ\nY9tcD4duWEF2sBvCDJb3Nv4g1VQNAmuZWZA6PYaRCSLfZuqYWqkx1r8u5ajV\n+Xmf97Z13/nC7TfuGvY9y8fRZZnEbCxiXd3yYp6Lr+FcuLsBtZkwQKDGoOPE\ne+NkjCv+JN4Gk6pRO9O4BiSwMwQh2WnuyLAiDTK+yl0z72GwTkhbYIbdhTby\nG4rWAvTovMwfHFRj5ahPM1K5hU7WNp3hfpJYShLxF742TvIW2CBFjKm89wz1\nMlZAOF+oiEYseS2TAMA5Trv9aVcdSOo4z3ib7X2s2ziaZ4svlieTuco/Gr3h\nzCmMX8YMSXTT5WR7BNx0y8/TvsUtAEVr61jl27ktAt48XZPF6j6CgJyac3XJ\nZ9esjPJ5vi7HgYEQcBUdm9qXPrHmYbEvSyysrQCIDieJ9sC5jnwKwveUeajQ\nU+6qGZZboCpXHK9s54e7xi51ZxetBE6xJ/g4TLphVB7rJAk0GXY2MSAal2Jj\nWDtS\r\n=2rZX\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"5.1.0","date":{"ts":1589774515049,"rel":"a month ago"},"dist":{"integrity":"sha512-avZ1nHs0vadDTPvgGbggLWvktqI7urjZ1fcK8P+AXJkTuOSBmNje/vMtbfXgs85d32nMYioD7LoLNZiEULZ8lA==","shasum":"0209f06e68b1cdc8f2bd44034753379aafcddb76","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-5.1.0.tgz","fileCount":72,"unpackedSize":283590,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJewgizCRA9TVsSAnZWagAAF88P/1gkndZwHAojxbDvpOaO\nfZdt5KGyfCELvxxOMyMXMRa7NLD7gIItxvlMP2JcFUVogxtBsNwrGeW52ABx\nYBGN6uk+Malt3++Ej9tcJ5Kq9p/+DYG8sHUtj6zhkoPoawk36J37yEC9GCsT\ngJS2/nlh7jDwuT/6nLryfNQQzYG7UruZ+cBK2W0I5JDbFrzT4zoc6oPRxlDN\n1zAvM60SAJn49Z1DlXK4aKobwkGgNqbF0xEWVoBvnMGlRTG36hIydnguG7UT\nl9ySLJuQw+IRZ5yOBBJlXWQBqRLPlYKZ7FvxUa13558ZNhE8OqsNVbhZ6A+F\ntA8VwiFgFl4zmksJNcssY3BjBLNQQNeqT0QDsGFLuyX+8fq3nd9W0WYLS+Yf\nyM3LddSQAlEj8CDejMuRx1jppXlitu2Z8CnPWbdcRPASsvGqGje1OVbD9QfW\nfKNDRm/9N29jPfE3G9lP8Xk6qsXnfKU+jRQ8mWb3V/89c8zMq9EVu1UKWvwR\ni0GIrTev7bdWl8OXMO5RROocKd1X3yAOCPsLRs4Jfqg6FaSCD7c5WHMNl07W\n4Mg28rSqtfsu4/97UZILUtuAn248hOit8ibky4SUa77/Hnc1ZB7VoCVwNjoC\n0w5Q78wKNbg9/hWw8zvV4frFlLQUBTvU8Jxzcp6GalUGRQfDl9JqrhUJONwn\nuoUb\r\n=yW/X\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"5.0.3","date":{"ts":1589588198221,"rel":"a month ago"},"dist":{"integrity":"sha512-QtfUeODs6B7/girI8t/FeZ9FKb0vl7hRkWty/L4Ae3Shwfb79P/rf/S8pzjOxz0Bv0R0VHDN2ATubJfo1fXNcg==","shasum":"eff9c2b01df3f182f6d6984565e5c1dd73a7c6ad","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-5.0.3.tgz","fileCount":72,"unpackedSize":283004,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevzDmCRA9TVsSAnZWagAAMroP/RzpeWE8hku3leEKSmrv\n5DxGM7FKZkJH5BsQ55ohN5/nkL/jOY/hOjbTyHkhGgBAJkgzvLLuKF82VzS6\nKkf7fuDSAakO9SRAPGDIJ4ORtdvSyIX7wzki+bZ7K3V/mPbebyO12zFViDkq\n7s+7zZ7CRB3W3+Tj0F6lD0N3L8fJDh7Zm2/UZazaW2uXloHbt4pHepClGXXd\n/+nBng4ihcfD/TJ97Dy6HvgdBv18gda1hGsiVWAT+fUtPmVbcKWwhphat52a\noSLtK/M1Avea/3axhFPVuhR38GIo9+ngkhnE4uj0JYhS76/bj2mZrb2hal3R\nqSrpwe2Ejw2+BnJMSxTfeRvSDSEYezgzyRFaIzpYMfOJsNUecufJHEEDsSyk\niM+6hAm8y0asoAiSlnyy4Azj4f3LYpG0X9UChZbcKrk+klJ10dKc4sna6cFO\nhAQZQ/Y8grLXsnfh89wHTaV1jgBd4dTS3oAmFK32MFgGRhw0XEaL7CRJt3v0\n5Bx3uNBperOTj1q1pC4iZ09OXXJfZW4LfDJh8+o2F1b8IyQQTPLLOS9o3RZL\nVli2wafni6jQf/R4WlLwaff9UBJbzhqmgj27DntY0tHCzQeGceC6N+kEIn5h\n8pAGp+Dpf4GyiJxysSQrdM+2j14cQWWWDOkbk7If0R/+5qgdOoHW9bkgBRWr\nFeGe\r\n=cA0c\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"5.0.2","date":{"ts":1589587756799,"rel":"a month ago"},"dist":{"integrity":"sha512-f+RAHY9O1cgmkWnOvR7eae3qQ8LwUO/PYRc3YcZ7hxdoczSpTsHSY9n5TQ37YjB5iHbp8/nDJ6ohyLBMid9kZA==","shasum":"f370686dd090efa2f524b2578bfd581bfa4722d2","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-5.0.2.tgz","fileCount":72,"unpackedSize":282958,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevy8tCRA9TVsSAnZWagAAYZ0P/01WtyP2RGxeapIWDF/L\nnodAkBbff7yGX1cNLMHwYgpGnkZyr1lUf0yj2dhnJCT3D+KRk8CntjskphH3\nIwnCXqjj78pXd8NjFBpcO8cn8XhoDs5hZjMc0wrGgItJw51Tp8ZcSJ/8XrYO\n2xyFR1qus/NYvqqw1UvmpvDkTtfDdzhlUUC0dkGWtmX4Hy/Tnh9B3tVDPHw5\n7/uq01wFsMwCVYdqxJvr2wnnK0TZZxmfJcY/tAoDl9s9I6Ne212TEud8lgRv\nXxu9EfMjJjpfMMZfQoF9iUQqySKfKEbUwQIZ9XBUzFnXZ0W963r8U+IICR7J\nkMZ1lq/HCdSGffMv/7n4wIqlCn7Tsf/yp80ij/8IzDVVJtIthYfsy55DR1cz\npdgQn1DpwI7PvZraTyns0HEw5eewmlmPAYEoikai1E8MWy3b2are6g3vnTuW\nKzEge8Mp7RTKFe8oWXDc2xJ/qC60BVUvxdL2I7QS8v0TbsxFx+8xOUaxdk2X\nOw2T5zIqRmOmELW0tPOUJbMH3dmMdw7l8GvTl8vq609TrrWgdegOB7AVDM1/\nCaunbAW6mBPM/SRbqp4BESFRIkYPZ56iaIB4Zr+PjaqovSyZp6lHsyObsa42\nW0fToxTj12sXtKmQEdGhmFhreScr+2O0ne9FJD6NtBdzGkqAXeigXh/vAJUA\nGQyr\r\n=icP0\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"5.0.1","date":{"ts":1589586800866,"rel":"a month ago"},"dist":{"integrity":"sha512-eysvSQUPyunLDKEM6uo6zLHMMLMpme+MZGsb/z3etE0lox0VJFwpg929GpkOEz2ALY3qYL3hd+XtmGnM/3SX/w==","shasum":"69cdc2977031c4537a5998560d5fc5343b26021b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-5.0.1.tgz","fileCount":72,"unpackedSize":282705,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevytxCRA9TVsSAnZWagAAxyIQAKGDzk8MqwyA5EFhRnUm\nE0B/SwPoxCuYfzf8RsgKxL0dSjaAF6Vo5/WgsD5y0WzpEM7xktQOETWX7tD1\nZREqCEQIwjzpHZWvbo7f6TsQr4UC6DSbWjX156wqjpTazYg0gh1y0Re8iK1K\nQNw8ipItp7FBDt5j5SYa4AETbxbf4pDqBmbDVbSDw8wDXHG97zOF+sMbn9fg\n0ihbm0EcYFRPgFy7EKlF1obTTxODE8zUtcvtJnVJmBkakEQxQKUjI0k+lIi4\n04ubtjO0GKvFO0RNrZSrXYqRImoA1ejNaLvA97gNKlwfn/WPj3EmvFIdYRPl\nmRtVk1ln1HUODzqtdokC0agJUF5P+6SUw3xpGCEwM6krtKn5AIPWtKLlPbfa\n28eJskq+55Dz6j2OMDoIwghAbN4XYrpETfFsW+M9qNwg0SHjA4YJyO1NDMe4\n0U8qyzDUGF1a8dD78d8f4If4D2ayu/ty2bV8Jj4CJ6a3Ohej72X514yzKGRk\npb3pJggOkPufudOGhIqWwK5bZezidYcX1QpNC7FoPcHDFKwlqTQxj5ZXb1do\nLkq7oSmLh0bU0m/Y3FnmuG/EWIcc/S5X4DBuQZs7DHz43tKBnLTZlIaVetjx\nqzCBwTT2/7uteAYjDHlmCFk9abw3aZgxTO1HjjbPJrUiZfBxyF8ZTOFjKYxP\nBU6F\r\n=P64q\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"5.0.0","date":{"ts":1589586303612,"rel":"a month ago"},"dist":{"integrity":"sha512-dzGsIRj8FCYJwpBsUhR76ULsjdTxxDqWDbi6pryB0qnbyTeB1aJKKpHCu5Kr9RoGDkiM10tOH5F113JlOsHi1g==","shasum":"4b9b8fd486cc890a7185c5cf8bba9e463a27a1ee","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-5.0.0.tgz","fileCount":72,"unpackedSize":282676,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevymACRA9TVsSAnZWagAAlboQAIPxkumTdYG7txPI1/Ga\nqFJioaTlyuCbdrQ90qo5b7tWEiJ742whBpP4Lo6/7+NZEXSzEhkiHrlZBYUQ\nB7TYaxuhfPQUcH5QCF2QjGSc1AgpXdnl4BNjYlIWTPLWXL3DlMyaCiYTtGiH\nLPpuvD7MKOag+VzUdvfwxA/knIggTcoJG7yFUZ4qYtqn8mvaT5P/YgEt275O\nryPpFHPqw4+4UaVnDj0Ncmo6EJZW6u6JjBE7Q8IcYyCszg/r5/BZ2qvJb0s0\n3I/AZ0Wj9MedKF9Bh4Q65mPCHo5PsHjn0gEZGcHZlTOH3ZX//rYi3rU2sYHj\nEm/ZKOYLhGwLpeaGJtGkDTjJel6hxfkix4K2B7tDf9uO32RVhA1buaDnsjgG\nTCier26n0v+WUF9cemKxoleBbRRER++z4GALbzH0IDJTqivhsiiGqk/nyI9s\ntCuVvehx4SkUEoQApmEe0Cuct45Iz7k61ooIWbM2EHZ5SduwqM3/QlvAjmSL\nMfXcuMmJr81jfAuBQqerTLcxSx+FgthGo14AesmPw0L4GozHiw64LOrCB8Vk\nkDTDqLnv09G6dRO6XG3CG/joACjin1irVMycCJHbBPA49rFaG3ks4z9HdGUY\nyaWsXwr9xB42aYKGuCNNsCbQf/3m9Xgv0F13N3bs5balqA0eSCffi4r+p2Bf\n/mFl\r\n=IFSH\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.7.0","date":{"ts":1585065616234,"rel":"3 months ago"},"dist":{"integrity":"sha512-M+hxhSCk5QBEValO5/UqrS4UunT+MgplIJK5wA1sCtXjzBcZkpTGRwxmLHhGpbHcrmQecgt6ZL/KDdXWqGB7VA==","shasum":"903a6ea3eb5cbf4c7ba7fa73cc43fc39ab7e4a70","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.7.0.tgz","fileCount":72,"unpackedSize":288297,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeei6QCRA9TVsSAnZWagAAh0YP/0+Q0MWtZywxP254WdBO\nniS6VwefiKzlxz6M3URp+IE3TEg8qSwtWrZtkq205Ti4Qm22hHIXwAcydgxu\nxyuBRnQm4o8xGqjqCt8ztUERXosXR+HF9CSxoi0CAtwNKwNWatDnue5Qq/8o\nyFxs0m+LM+CW5km+r60btn+KwPnkQVVJcRHZDkM/hiqQbLNBD/sTLnt5viXC\neMJO4XmQmR4rImx3vUwPn7kQRB+NuWydSt+OaLlbWp+Zf869LimcHksj4U2Y\nJE8tnrulwop33l5GqwPV7VK8XTS7n8vJNPzdDlOOCie08mkBBck8MrzP2gc3\nd3GwGXm+kZsA7zgdqPJ1n/1FXC6fpLzNcyJT4gA7MXP4IxVATbEKIfwzwsrb\n6Jua8t2X0lvUM4ekpCmduEtk7hv63U02vIKgdGmJ9KCpkfm9jEssSnRTvlBO\nbDkZVJrewDlFAzXrzSO1SifgIJCdu+GhLEv4S7lRJoRrlq/LWy/cjwG+uAol\nAKMyq9tswoCfh3nLBCtsmyip5ryqvSOBqmJutgs7vc73nXNmUPyojKNmueT0\ndInpC370YKpJc3vxRU5td5J1FZQ53joZQflsMeVoZjZO2qbIrswwvazmVWxA\ny/AVQO08TwXKtD37vGFMC28edi5asNr9jZGt+wKqFvceDSsmZGnQVudCv5sj\nAbKX\r\n=knFs\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.6.0","date":{"ts":1578747656755,"rel":"5 months ago"},"dist":{"integrity":"sha512-W5hLjpFfZyZsXfo5anlu7HM970JBDqbEshAJUkeczP6BFCIfJXuiIBQXyberLRtOStT0OGPF8efeTbxlHk4LpQ==","shasum":"82b2bd6f21770e0e5deede0228e456cb35308451","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.6.0.tgz","fileCount":72,"unpackedSize":284118,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeGccJCRA9TVsSAnZWagAA9KsP/0lcOsRjbs0USKANhO9s\n1LwpLcIwoBXFmeo6zeTUpXUfSi0Kcv1byK2Nd8mExIppyBQgTor06jsgnbT0\nCYgk0AURH1oJJibtTZMyMirEHfPGO0Y8A5BXaqC9PCKw4QTW9T7Kxr4vlEVk\nvHpZ0ifOVBY4Q8gk81c1EfeX7o9CSQfyLBptFTUN+e64XRAa0YOKsLCNCIWS\nIAcKU4/IV54woKKtOsaDyGGoa2bP7oT47WnN8fYBTrVTjo/8XmB3BY683ArU\nxe4aPLYwqQdtrIDmfJFbz3xH4Z1m9dUHy9nrSbcVn3y10gTmY5fON+2pX2cu\nXlZceycDewfo4ay0NDZYcPFavICd8QbFkurtC08DWWLf2MpHGhwAyjDy5vXe\nSFxw6ACAxhk6b2QhlJSZnOUTocBni63OzvfE+XxLw7IjdmJkZSGpLrFBtFUv\nV2P8DP8jABdCQ6/CSQvzaakDjMcnZy7niKfwH/T3sgw7TkTdAj3+2EyfmgJJ\nHGjFNvef1PHn6bAJTTYs4fROI7BxO6IhrNv1Gi/qjFGgraaOu4FOQ7J8VBrT\nBfAFeVpn4Ds92wKhfhqqy+aBjaKJ5MBwCbSr2Ibj+rcmX8l6t9h/o+/OasR6\nfuR2n+YWnO8jWJdu7eFOp1YF6w+adKWxAmS7Szm7bpxswkMRMsLbW9s+kiPJ\nGUAw\r\n=a2dt\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.5.3","date":{"ts":1577850444930,"rel":"5 months ago"},"dist":{"integrity":"sha512-9PBGkk3dQ2TnP04Zrm8ziVHyNIYzd24PEY12I5DXC/R35+3if0C1/PqTQW94v3okKWoBh2/7EysMEX9AimONjQ==","shasum":"21322e62c206cb4440d32ed3ba8eabe14e6d0fdf","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.5.3.tgz","fileCount":72,"unpackedSize":283862,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeDBZNCRA9TVsSAnZWagAAUMUQAIQmnVt/0iZIYl6Am0bi\noD1Z8lDe6z6XPk2qpyQn2+GoDthYOYEJqGCIYUd2Ts6mdAAj3+XPFLE6s4uU\ntNI5Jdy2HZqFbfUjExymLNBuYUHjO/FeC/IDLEJYDQYpJg3eszmnMS3+HZ6N\n/ivI0G6PmgRQX4KDk1EwElNRDBK5F3b6LoBEn/Saf5/SzQnDYaNcN4OQwP3o\nmrhJka+jDP0gH0nSuOTNji6Ahdey8AsZQ7YHtKvF7LG2S5YzZtL7wVgIbqar\nWpAr/V088GsOtb220sK7Je7pMMiF9ucQudFosaTeUiZlHuh6ryork6Ca4FpM\nDWnUmXlaZKluKwygHVbPTGENOUOF3Wqp74nHnkLE4F8YYoihMllA5zVmSsTB\ne/M4dTL6xMHNhBy86mrkuHw0mv4lefLO9iLyMYwvI3R4Zr1VG1BOx/+nwCae\nqy5TUx44WWkNMtHmEVPB7EpMQ+p4cE/7wEA7dYSS1kdRj/tZMqikn//39Dc+\nVLMw1dSKZWsHdKxhzEW1XnOiPuXxeGQtI0AMiGk6EFbkjIEbky5FWU6kv7vy\nKqIk71VtKFv/EYyThhjUwCZTCrAFsDHOONXLETPgP33qSiBF74z8tfVvv1Fp\nJDOXHGCN7hB2Q4Ic5FtsofcT31LxRGZV3nNhO4JDHnE/8gjIlhErSDZfxNut\nCclo\r\n=DmTr\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.5.2","date":{"ts":1574637852118,"rel":"7 months ago"},"dist":{"integrity":"sha512-ByV0EtEQOqiCl6bsrtXtTGnXlIXoyvDrvUq3Nz28huODAhnRDuMotyTrwP+TjAKZMPWbtaNGFHMoUxW3DktGOw==","shasum":"5353449692663ef70e8fc8c2386cebdecac7e86b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.5.2.tgz","fileCount":72,"unpackedSize":281450,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd2xEcCRA9TVsSAnZWagAAAE8P/ROGAtmxFtbT42HuXdl7\nCz/Q0FH/euSaTuovz8h7czJCHlhBPw2RMbCe2ewAk0k2NF8+FZHu2Z4wo1sO\nnViGUY+qjYUMjrVvesmtIJwPMvYKmZseXQyj+wlE3jOR8tItnaLlU+Y9EzXC\nBB4qB7Q7Kgz5FV2Ewp/orjx5C7UrhueZyEqCRH6t7P5eAj5BHukX3SJ2Z9Lv\nbCXJiouMKqvmBsez53ItYx+DoEbPoThM+QDY352FOrGDXYvok2ZnxfIN02HX\n5xFjDYGIOUiceyvLoGszNMAvxR8ZdiR6KLhwu/5ZRo9o2MQ0tgOfpvs4Omjt\nVXL9SvYAR+Ycr2S8PkQUfSHS98jGfLNFrKNkh94aj3Hzsv6rJ3mn4n2UAygo\nJtytsc8I4gWa5RfTEyTlikQjrt8hIlWDXkHraLu4oGZIU54UaVWDulN48bSY\nEKLn3lMKbVH+EKkEr1bUORxFDH+DsDAy/8UF30PgEqhqpclpbkfvQLuEy4sG\n3CspBr1fM5cCQkYmidPkJKOG+6jballQpjlvvOwAYSqa6WIc2UWmoGZwustE\niQrvANNwRPTB27xKAh6PvLTcT6eBqK1cQx9ordFnFVX+HVeFkaATAnV7Xviy\nztAKYJY0ncOO6M1dn1CvKAx6JcG9xIwokYzdS5W6zaFfwSZB8sExx8HT+EaQ\n4o6C\r\n=G5DX\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.5.1","date":{"ts":1574637440705,"rel":"7 months ago"},"dist":{"integrity":"sha512-WKjmkuys2z5r1h38qi9FCdnkFW6T3rnza/2ao+wQlGjyVJkcUXF1gL4EvJWogczKRAufi/p3GO8K6ag/Dozg6Q==","shasum":"45ba34f6c041953013af53aa7897f36c656d4c23","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.5.1.tgz","fileCount":72,"unpackedSize":281391,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd2w+BCRA9TVsSAnZWagAAxEkP/1Imcu6ZoKyEsBZ2OP5q\nwP73AFSnmQcsk56p50LtZ8FSlIdHoVJBm3YlQs4fStqL4zNZDJ7O1W+IB2qd\nAbJmgUpors7th5S37MIa9JJO7AKV2O+JuXqePJWFkJuGUlI54pBRfiSJxZpF\nBVhHoSGvD1ehgyidUodGKwSFcVcc8GZnkNsfTNe0nhbhueXqlby9dzNFwNSB\nyBELjYW+B8nXt6HoOuiqk9EEuUUYVxlXEHletB6pCRpl7vnTgNr1HQ+QZCcz\nnQlfWNgb8mdbLYn2w9WUdlcxBpp+Ki0e1qhsv5CtiBe+zTYeiFNtWMbW2lGr\nv8isWVKBsAnXxlxT1meTM0cP2DJVtNQpWQ8Q9uQWxJzClTDgmQ37QiNw1udJ\nQ/MaA2F6GqioVCdsFjQAz2NhnvOCxe/cOeKovU03wUBxfVq0VBNlocQu/0mV\n7+45q7k7+myPGVvPEdHlidc/4rmNM9JhJRO0DWdDZPah2euoANknhdsFuCAb\nqggmEkOurld8QUICj0bZF8Vn4nCl2bcbtp0jA5xauSRzMTdMfOKiIHctKlaA\n59/fYRWFI6NRaQAtQv140IiR9EkkQD+lz0d8GVUxzdJCZPl/+vthjWLTYHDs\nLIHHB5G5kP34Cj+NQSmbgdm5NvtuN5p+Voiv5dKGXoxHW855LVhXSV3Z3weV\n6kpg\r\n=plpN\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.5.0","date":{"ts":1574635983624,"rel":"7 months ago"},"dist":{"integrity":"sha512-zylRibc5W//x7vURL8vW3B1RVZyjSujcAMNDPAUA5SWHCskNmrX1wFODog1kTkC96acluCwMlWhJYrOyyXFr/A==","shasum":"7a97fc3fd402deeb2e677437673514e46bacd9df","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.5.0.tgz","fileCount":72,"unpackedSize":281410,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd2wnQCRA9TVsSAnZWagAAlhcQAIiQ/cUVB12sR9Kv+VHa\nnolvEDsqxEsQQqb2TcgALAcxtenYByNUdMBrJRbSgB0J4S3MFy76RSiEWntC\nl3P8DTpUc6dq7Mg2N0zZcvnqt5TKCLqVAS8tFlse7i0xnRoI3UjkmohPea5+\ncmlZHT2QNPctnvEL15gg/wQ0MROt6IVSOJrablJcyOVROdLaGaws9k4GzzKl\nNsEbmzbqNpBjZDibtGDPAseomXiS7atJrjaOgSVid0hW9paXMrkxySTpz0mD\naIYQ5MzH4GdugtBAX+1HRrwxIFRFvGEvBvLy//pXYxAtg/TOzyKOmWnwIDw0\nUntXRsiAWlcT8KHv/UEbezlTx7bNgLWTUg7SizQxrSEkuih4xn1+8/4FKt4v\nXUe1YA3KwWij/bWq0gEnVRBp9go4lM0LP2fSg76WHjrPszlyBC1X7GmOh/zE\nuyfHVklVs+k/devHxL7HkFA69Qh0ifzAToSdH8skT5S30oc0GkRn8zJXvz4l\na/zEf6U2ymCmmMQhSHMOc7Fk7JkaCkP30BtjFugA0Pu8SUupy3EB74tgGB+Y\nmW0nNWjWOfFrEBl0VEbnoGty+/zxSpASEgT/78uAJwNejn0xSXh2fynUXMsd\nbBy7eDTqGCGGkcvLSwtysZtyDEmXL6dMVe8tUbF0Q3L1p6ED4gICLPo1dGKj\nXdzh\r\n=AN+A\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.4.1","date":{"ts":1573577280049,"rel":"7 months ago"},"dist":{"integrity":"sha512-TNkrdJbvmBEIf02tjMKrYmLILV7OVwcvDUAnrnoGQZJhBMsu61X7E7/A1yvLTsFeDaqhbBx7rgsHzh4Yx7IqvA==","shasum":"b388f42bdc1237f68a8010d2ede52cd67a057e40","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.4.1.tgz","fileCount":72,"unpackedSize":273197,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdyuJACRA9TVsSAnZWagAAFmsP/3N9aB+Coh9PuiPRHLPr\ne4LtqpbPRfEZYWZ922QkhW1/I3Q2C1/uqxyVdfYs/olkDaEZ+2vTbvZPvfX8\n699LSBIp2TA2sPUkFxN9YRAGc4p/ITLalco2ZAyurzGRrxWtyR7PJM1FFXO5\nYpsI3JpsaGIO1OzUpYtcLrif5NV4KmU/0Kp18CgrtiZazFYaxAysZAZ0CcXK\nWzQPefnKiib5/ZsKBLXvuJfjTO0Wzi1D707LBodspgodnmJebxC6olzZ/tgM\n63RsNM6GDqoJP51ZE/TPuYR4Ydrt5cItbZEuf2JnpMOpHuaIEaL0m+GMKw0E\n9xr+TVSUez56sTOcIIt6dXJrmVsg8VonWUbLDjUpjX56Yey9+zvs87WYMxI7\n7HG+tTSGrq+0GLEdri//0EV0TfGST8fGzAeVaOfGAeDyZruCgQAz0fD1dFw1\nMyvWMqSd0UEmIKsTSnaBZdkpf7EY2O8JYU396ay27pzXQSnvAqw2PKtKjCKi\nly5GNRwYOcO/jLT3XxcRSpb+twtx0uQxnkqSShtL1ViwZc/jjGhHCtyNLBLB\nYtWkvuUK8nvpfhPDi28AAb1ZgmfylLVa0a+vqF2N73LZamXrbcZ1MUEtBtYu\nIamMB2TC0zbFCV2TsLu9qSBA2uEm/+5DnNdwu4KokZ7c+xrAHkFb2/hyxaHW\n4K/+\r\n=QQPx\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.4.0","date":{"ts":1573576591657,"rel":"7 months ago"},"dist":{"integrity":"sha512-DQRLzpcuaZDEvNFjF26CFBPqDa99TY8qxWKMJ5mO3+ZHOBlp281IdavIvVaJbG2CKNO2VgjS1OO6Awvf3Yf9Hw==","shasum":"88b104e2199c8102ce579dfd252bbe2e7678e44b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.4.0.tgz","fileCount":72,"unpackedSize":273169,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdyt+QCRA9TVsSAnZWagAASekP/3ZWul71OEi6OguN6ak3\nXx2SdYhXLI1e8qsaJrs4GGjR3ZNOGSNPhL3yedV01VfeOaZ9dOOlYiDNUtdy\nP2nFnyjNHLXtVR4vv8+RDuno+z9NToYn6WoQQ2JuBPUq5+PuPa5Rb/Tn0BVn\nE3TVznN6I8ljLJsfJrzxC9fwsSWGKGizJo1ikPTD5NFHjWGlL+ZwR4lZ5t5M\nNwBvsO2HN1jnJKg6QH7Z3SWWcS7GGbl15VdIsQ5ml6+2NY/TutltiHcIPvfA\npnuCgPLONEX+CofRggGbj36KpAD5+pY7ASl3gw9sYvUpMp1N97jfG+jq3lOm\nihxrGabmIMkmtSqRC0STishyffGp6IGpVTnSDndfo54Vj+g34l8VVmTV/v7c\nZshNaDU6t8RYyj91sMYryN6j5IuvsYuVsQcGNafwO71lr5J0w5yCltnq0UMX\nZauygsHwSNzi81GCbQ3Ivw8ovfmwmzMbhFHJAS3VOHf8uaPFubWvNnRS45ya\nmGF0kMP6YB7DDBfTTk28UBS9RPCyGbZ5IAmgiXW+bHH/6bJHo6J3cdOz+DTX\nkEPwwjIGyUuO4LQwFNbi0cCC0huvuFI6Z5DR7XeDvKmjtAhZXt0eFhmy+YwB\nvN9KpOpTj+wgQU5AHGl3U/xVf/2WnytWlpsbXXq6g5HOgoI+TKM80j3+Uqrd\nXsx0\r\n=2JBJ\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.3.1","date":{"ts":1573576452687,"rel":"7 months ago"},"dist":{"integrity":"sha512-iLZ67gvqA681WU3+pc/r9nvrzgFThYBrKGbCkMD4xKW5NrDO7EPme6T3hlBAm1B97YoiRuZIA4jLKeZhlpRp1w==","shasum":"2e8a17865ed089e6b30e3abab8fd8d3d2ae73e89","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.3.1.tgz","fileCount":72,"unpackedSize":273107,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdyt8FCRA9TVsSAnZWagAAcswP/jhRVWlXX0Q04r0lA3Ej\n0N0mCznERBXtf2GAi6v2kXQQP981nj4diRu2YeJ+jDaU7ADtcv64wtYnrOjg\nRS2E6Afy+c2VWGGLWsImkgE+wAtFRUC5niAfxNaivyE+lFBCA/C7Tb/YZgac\nFqJ7sTHMy/tyvLBH/x/+iUZAasCpOaMt2b5KP/hrQsvuyOy8j9anLnZGw1iE\nzK5Duuo1vBpzG+b6otFP6V4WJJj6eeVxCpeqx/bnqsYecnRktf8K51e//Icu\n6lVXcsl+lzifzZ5+FVyFhx9pM1VcDmW98HBOe/QGGbNymeA3sgnYHFtPa2z8\n1aiPFMpEYWB2PD+aye+4Th8JiGcezpqpK/hDsJX7aez11ZPC/U7PqLzxlGJ7\nuI9eZzJOG/OHRfCa1njDfXtrYVaVUJtVbbBQQid4IDtezix4RPKeYruirbIG\nol5c9kY1w+fWkdxLvZlhV8A3ABIF8mB9Uq5kWUgM8K9OcB2wREGIIGPmWJOd\n4n08eU/94nyrmt4nhxqO7t5RCW9JO0ncGWh6vAdQhgbGQjpWRCzno9/66zt0\nYrHS6adNjrlHnzve7JXzZF3d4KlHVsbbTBdvsJGyI+S7KqfcAwjS+IzsnFqt\ns3EQnDqXKAAG3WVZZotrcGwuE/Ks9ansLVwuHDSEmq1bDwxY1GJUxZaio+GZ\nXbVo\r\n=y/dV\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.3.0","date":{"ts":1567509022083,"rel":"9 months ago"},"dist":{"integrity":"sha512-elvqoadMHnYqSYN1YXn02DR7SFW8Kc2CLe8na3m2GdQPQhIY+BgCd2quVJ1AbW3aO0zcyE9loVJ7Szy8A/xlMA==","shasum":"06d0837ac341caf369e7e6dbb112dd7fd21acf17","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.3.0.tgz","fileCount":72,"unpackedSize":273006,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdbkoeCRA9TVsSAnZWagAADzcP/0OQBrprKVpgSqmAUbOG\n+EsSgsFFXLNHZc+CSBzMQCdGPzhvul6DSzL9yiUVxqqJe27uJqhsZU4+KwMj\nzyL/I8d3bRRPFy9AHpxArfhFf5jIEQ1xfsHKZIGsk+VjAupE579XFbtrwADV\n/7wJKs8IL/lyDWz/EEOITT3umaJT2Nd3zEJ1hhIDjk8jQR8VkqfFxUorHqGq\nhHgCDW+bNsdH7B1UIdgQ1D3uCRoBeHC6jhGjWXxDPZxA8kWUSygDfV1jqdQ9\nW5z4HEFNVhL5c9RL/dEvaI1yxzbpmUqLFqADI/N3VrJ5nCqFo82wi13ZhqPx\nPblc49ALOByAwrYijVFnYI9MPp+arcYkFdtWVoWvAPvl5cnHm0hJc1FRTYKX\nDXOM2V+3HYeDAk7rfXDzzqjdgJfw7vAt5pK0ef5wDZPWfCYHUYnlv7g0jKWY\nhFfrll33Df8ZwbWnbCAgbPBhabMF3y9OhtESHXjKhp7HbykbDpHwfHjD92yJ\nL3DJxW+dmTVPbQs5SLfQwPGXRGCKHSYBX6DNYvVayyqZXVHBd0rDlvEOk8me\nHryoyuoKJOYCuIuKV5g9ZKOIsl87qBrfmd4EfGQUmcmZYapKzuH45Bm26k5t\nOYV3zFjBCal9mK8tu2qMjrxQ5a+zMVh/dFL66bcQwdSd8/76w6G8UfM23qoA\nsYke\r\n=fx/Z\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.2.0","date":{"ts":1565367967895,"rel":"10 months ago"},"dist":{"integrity":"sha512-mqf6AbQCP6N8Bk+ryXYwxt6sj3RT7i3kt8JOOx7WOQNlZtsLxqvnkXRRrToFHcN52E5W9c/p3UfNxCMsfENIJA==","shasum":"a89ac991eef6753226eb8871261e266645aca4b9","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.2.0.tgz","fileCount":72,"unpackedSize":271726,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTZ6hCRA9TVsSAnZWagAAvo8P/jHYHG178/NEF6xXoPOO\nCKIskGeB1N1o7AW6HWFrIipQ5Amb3HGwb49KvcrJ434XHBuOSb7k3vuhWc0S\nqLqKzIbNO4rJ3RfcNqjxNeqlohUqkarwMBs0USnwqtJ4acbxLNFE/g7bNvZN\n6t/5UDW3YIak15OmB8o072ipSajUJP3N7WI+zefa/hpwlK4I5cowhb6ymZca\nx929R0T3PRQduV/L10HZlLLznCyc32OtV8Un4+tIQGE8bDDUxt164nkmzTE8\ntOwXJjFi4s+PqcvxvufJYt2lDYaFocFIqesI1lbSN2GPCBBS8FdMQcdpzcO8\nvBvPc8K5G2EjH4E2otUPEiEDKRswoMVLzR6JjOGFCgqncOCokIKGYKtm1PKb\nT8758C+xT6OEtFT+y1zUziltUTpo7kawDXpXljmOi9oqyWdimJDx+Q6dd6fu\n41r8EZEojtYO8zXZo9KWAsG4CS8GbDlo2V5P2qfiAO/vHwpsMgjhTeb1km+U\nWCu/uvUiLc/saeHIudcFA3EAZwyb8fywc3o6OAacNmk+WrGiWKg53sRAvb/P\nym2xp6oySKWFLrJMZPguzhm6XTxLjoHVEqYuKb8nfn8cBRI2Y8ai+hE3hRP1\n5WDBqEcVyFkCz6pbm8ZHM34cFOgQN3Jf7YOZmjTH0YTivEWmR92osc7bB6DY\n1HFK\r\n=TwCb\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.1.0","date":{"ts":1565357641729,"rel":"10 months ago"},"dist":{"integrity":"sha512-Hswk3614J3Tk78stSJ6eAH6JoQOIdJckImMKkkzbbaWwvvN05QMulmhFdP5bwt2iApmUq/0ZWPaKsk/czmacSQ==","shasum":"3509c1826157bf1a8a60fa67064adb675eacebd0","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.1.0.tgz","fileCount":72,"unpackedSize":271546,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTXZKCRA9TVsSAnZWagAAw5sP+wSV54K546Z0NfHqHIDl\nTkIn8wLYlaMuizsGOAMLGe481Oq4HF61V/6jj/3BewGWpucFusMth51iuSzB\nvyPTPLlkKOddHHFI4kezgXgo6bzHsaZdRfCPFtZCGgP1Cd7KYDpbQI1QULVH\nsVrr4O6QC6Zh3wg/giGfN6nBehzK+EVGU28W2SZBYBqXWs8OVaEDF6Kn/97t\nkOZvOdvclGjLUEXl2X2ouulZrGgcs305dbqJ+0RbbtYc2HH+eFIq6O4Wzru6\nuG1vpSFt8mETiUAeVUBzbQI7iuTE5MYBOurIMcsYwsnX3WRqf5LnqbNzEZ9t\no7AzMblQPsJoOvoAZ23MZQIa09p2Z6SaMT9Vnc43OcR7+q8N13/3pLqDJ10u\nB3Hp44lVg2eIiQBGeDEkVZ5UnXF03RKCaObzh7lXRcLRLWCZy9UbUhSE5f+V\nS3LOazwB3Kq2BHQ0djv1LS6LnYEI6cDV5sQndGeH+O6Kj/Oqhh7b3S1aO8mN\nPthz0SVMBpfjeUdAQW+3HXljaRPdY4tc+CL5aMWX1H7zH1GZ0e9wjjKh6fkQ\nlnH/7ocnzcOJhb0XWaZ2IH6t4DgY4mLKzpc/PGw1DO0TwOIpGnXrFFaFVJdw\n93hAoT9V3uFbz14UTG08KsKKuGDb3X3dIlhCUucmjlQvFKBp4ihSQr8CpgRz\nnQ+c\r\n=/LRd\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"4.0.0","date":{"ts":1565355172755,"rel":"10 months ago"},"dist":{"integrity":"sha512-Rs+kYKuAD6nWdRAvJJR58LCPF49ws8LDkYdpadSW/PPBuRG4BOEP6yE+LmmL3fPfvEif6NO8zaO8NwDPArZUPw==","shasum":"5af33e6c0f401ea4a531999b69ea0d96b6f7ef51","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-4.0.0.tgz","fileCount":71,"unpackedSize":270141,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTWylCRA9TVsSAnZWagAAwnsQAKFPz71E1OsYoy+l/Unz\nSgo2WDvvlMT2+86RPVLySAGzW93jNMKE6VZJWTTN8aQiWgVFdpmouM2OOgl1\nXfPK+OMCqHQj4J/RDTf/4stBDQaLYvxsDADMcjxa31nkOqPpftW8w3hLKdEU\nt2ysXVt4HDYqXSFwxs7fG8Uzrzp6cDLmyuD0lbtVekIN4Ko1uGvsP019Gb7B\nDEO+9Bs2bKD9Uy+NJn/a0H99fcQPLEIv/axteMVBWsoZEA1J3i1xj3AoMAdC\n7m9vINK5tlG5Q2uxMW3BQxmpa6iJ6wYiGGOuGxWbRVLbTQtuaW048iua01O5\ncHwNg4je4316pYkQdJqli6NrKas2h4fv6MH9I4NN0mkrX1aOxFxmpcxSvlAY\nSqEy+Hgv9jt2MdplLMkdR3MhrNPZN92eoi2sPg1u4AY4dwdfsCniVvWorgYP\naoA/IAOLWhLTWfVZ7uWKsEiQouqNtrZ2/G28nrF9MLPDmv7gprffEW3Jmk1D\nSkHL3Gu1NxHXRVG5SsOeMLMv/WXLMvMuKbe4N4O/ubJIjIzuWVcz81Upo8Cs\niAa2HnEz0hCSi4MgwdGGIOah4fwhNIIkyqDbP8BKrvwNoEGk/sKqrMu81UVl\nUA0grRI4Y4P/5xC7XGx+CLaY4APsYSPN+wnSIVd+J32r3dUGsHl4s78TwqrA\nsDgi\r\n=Eqnr\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.13.0","date":{"ts":1564762709869,"rel":"10 months ago"},"dist":{"integrity":"sha512-bhewp36P+t7cEV0b6OdmoRWJCBYRiHFlqPZAG1oS3SF+Y0LQkeDvFSM4oxoxvczD1OdONCXMlJfQFiWLcV9urw==","shasum":"e241ebd39c0ce519345a3f074ec1ebde4cf80f2c","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.13.0.tgz","fileCount":71,"unpackedSize":270142,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdRGJWCRA9TVsSAnZWagAA+qEP/2fjKasaaTKoDhVz0jtt\nXaAwhB9stpF/54mdarmbJw4rLQsoryyynKVhr876BVDUSYuENUYfZL02tWw4\nowex5PldQH2h0Ff1EUN5yT1WBxmOliFtlHm0yFdKcqNVYEGH8/Yxw6GtU+18\n/aLwrN2qUWVBf0KsMt+aoAECqT2OnPUIe/exkgebxscsEk5r0G7MHkg9/Spj\nXQe1gZ1d0RUdCHYkvreTSw6D8+InquItpyUiS6KOS0jk0mPG7L4yc77cJJy3\ngYFBJ2UDcy0XBp2eXU8rF91RS3EgctXJ0Ct2n/ykAsXhJwswTJwy7hiqzkFL\nK3EoLmis9idjArhCA0mzWA/Upmk+mVQkAxbVm8RiaUfBNkGEmhgVYTPRJxqU\n8FmX1S7GS4u+GE/UJd01rHRKmxgJHRWdkq2Q7kuLkjJVQ3NEosjZP/tvZTkR\no+4DVNb2WN6SsCSdNX5aPMWDV6QgcdhPHmWNc6gKuCXPiVT4Rd5y3a2HXHVH\no25FM4CyuhJL5kP3u+qRr5P/6Fp+iTWdz4LMfb6GdrSMJcm07iY9jUuoXAY8\n6wi9jS0N2ZMuF7nC3BuKAP2wwo/n4L2gGGMkGv9wnNiVM3POcx87NrtkfBsK\nxFO/HA0NEl6ccxZj/swMqUFH2WrnxEPqyxSDReAiiXxfrnpts+aSjkwokIlD\n5Kv1\r\n=CYAD\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.12.2","date":{"ts":1564305722619,"rel":"a year ago"},"dist":{"integrity":"sha512-Fky+noPK7WPEAuclGRBsRHNukmSc9h2cUMpht9+tVd30YoJwz3xK7ma1QQ69wIjVTbk2N0sA6QjEo2DlIf9LlA==","shasum":"f02fb8a4e20993bff860292bdd39b93d511d7326","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.12.2.tgz","fileCount":71,"unpackedSize":265031,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdPWk7CRA9TVsSAnZWagAATGUP/1OSu/rdcRBdLsSQSJZC\nYvi8M8KQHdOsCZ/Gy5neRAlKbxt7iNgNHco+1JXL8O3ogDP/rQqD8L0Cho4k\nFRrRORcFzWiDS6ArDc9VUgDf6nlnwe8K46TY1OWbyMI9H0g1JFYlG2OFzIwg\nRJfOAJ8YzzIY8EzLMj4+cggo4ixzBNOWdDKkzVa/ybUHAwHrO+OX0RdowT8A\nrUzggZfHsSzV5rQawXssiU01IxB8U0fG3kiYYkRyzDj5t+a13tLLiG6XE0l3\nbB5ytyXaA9+Wb1tg0jZfOeddUJDkrxKx2UunM0tDPUaY6NLAtaibYCOIOPju\nOFBcK5cHTwHBe6tAUWjjtxibOxhV1IueVf+jjDHsoDv3aizsdniKGhFe+LdC\nPKzznWWO5MlcWurMybanFSPl2mUB6pDvvG8mbUL/MucvjbpdoDE0Ehj69b/w\nGthZ3TNONZFJWlQIdytPKmOHppgbMHEwvzOi9sln8yvC/Jj1gcsmrz3oJIb4\n7mSCK2QUDGpQbp3++Rhth19eGHP3gQgsupEl1OUAda4p1OVxNFFm76FNUEL2\nWoD6Cmfmv/7EmPYAEMoNx41LbSOOZWOk+iSZrFmHlrBSbsnHnuA7cNSekGWe\nqbnSQf9O+YdErmhROTUhqHYDWuzHH1p3DOCj59IpBdGa/o/bJ7daeNwW/7K8\nC7ZF\r\n=XY3B\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.12.1","date":{"ts":1563488685685,"rel":"a year ago"},"dist":{"integrity":"sha512-NZqf5iRgsfHOC31HQdtX2pvzCi0n/j9pB+L7Cf9QtuYxpx0i2wObT+R3rPKhQK4KtEDzGuzPYVf75j4eg+s9ZQ==","shasum":"b673c716b578c9aa66887feef3bc146f8cbe1c21","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.12.1.tgz","fileCount":71,"unpackedSize":265031,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMPGuCRA9TVsSAnZWagAASAUP/iyEIwFMWtXtpMNYP+4V\n7j4WN9VJPpPK3tjqRTaCo54Dkwa1pXl1WJBg69h/ZKhVSXp0Q/Q7FhBKzpQs\nBCKt9wToOQFZ8y4e6kJ5glz7vsO668Lv1I7wv/6xbOOGoOOMqeASsdLFwrMS\nc/jCdhCfcjT5+jrw8AdJhyhbZotKrj4AmZP05FvNff7qfm0mKuTd/5OV6OVl\npyPZjzAZK/yZAKysa3QdHh12FYCyED+rCmYta3xKGCLLSXSuE6ZzaEwnXDZ/\n7a8bcp95avmpublb7XQfBq/b6H1rl8uUWVP4mEelEiXmLc4hbee8HaHVbCn1\ndJAy+9eXP5KTpXz1KzdEwnFfLaWM7vxDuXCJFeyuwf70g+zBmn5Mmad/mTmf\n/ET7jbl8pmOaL2Of1q/px9yDnleqJ62oZfQZ6lUad0ZYpghCilsrxGfOg4yr\n8TLpDeug3wLkwCugRB3BadFAAMUBcrSC1BTJoO8FooBZqfioaDbnXCxqGkcN\nSLXmTCzTUiM3UTFlNQTygxtXKUzW3QN/mHIWaimNpwqSaDg4+h91aficunZr\nRad75N87f/iGONWOBfhFUGWzQeCX0y6qIQSYiuNQs4/gLDPMC+waIEiNIMK5\ntFPLE4SY7cTDI/Suja57mOHlU6fTfKLDE00enouIK74iv5W1IdkzX2/rJGq8\n8vnn\r\n=fAZv\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.12.0","date":{"ts":1563467689521,"rel":"a year ago"},"dist":{"integrity":"sha512-sqXHmT/JIxcxLU5HN5aJkyE9iNz0U0xQhgV5JoPt3SnEKSg6gSCDrZGK4o1HXuctWQoPfuotknvytVhg7P7MLQ==","shasum":"abac9056244c4e3f8a64c9da5e1a64bff526a8e2","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.12.0.tgz","fileCount":71,"unpackedSize":264832,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMJ+qCRA9TVsSAnZWagAAUs0P/3fCd6tqFP0pI3WS7Qfv\nDT4V04erlkRE52wZIaOsiMtlFPJYJC93HgCNXMBokWmXjJdqKxBZZPDTFm84\nZoJRKO//nF046dYft5oWp5BWPvncnjTF75I4wAkc7s0C+i4N2LNT2A3wzZNL\nLTS6dJCn+mySHBdwcusj9AgGueXaTS6uwIZFmsgjbjrXoVEvxd4X0VXYzGr+\nZdBW+6BGPpaa2sFTNaSbqtONdcaoC9khthRj17BGLUfXQcq8iwECEaeN759D\nDlShTCgcxg4VLOl62rkCFZ0LJCyJqPYBjCjwNr2dswEw2QpmDfckpbUzY0i/\n1wauU4eDW9NlpmMci7Bj2uyBs/QEL7dbCwz/SycFk/TjGbeyhCkHhQMF9Uq7\nU79Nl1aDNInvcuaX9rd3D+tDtzx7P/q2zYKaW6rjeI9o9G1YXVyFybSCK0NZ\nn29KFBDINNZg1NFC74294sQfO3LakVo2FFO0iWLVsFcs5XLEarTHRSoX0/9E\nsd7glVNySZLgw9CzPeL5O9xLBRfJC5NPth/cHGQih1TTTKjqp0j6Glk5jIk1\ncrG8SewoxsCWBG30LC6mMTWDw0rcy49suxTVozg2SNLwFaNtoP1n8MHJRogI\nlD4oB9/H0IBXRB7kijeGEi+xjexI96n7RwfUl/qeVQTrJ3XrmPNNA3dehRJ+\nLG2k\r\n=e9KX\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.11.1","date":{"ts":1561379604634,"rel":"a year ago"},"dist":{"integrity":"sha512-4NiaaGZuz9iEGRTK8j4lkA/scibOXSYaYoHbsTtgLOxxqQCkbWV3xt8ETqILKg7DAYDqB69z1H5U71UmtdF9hw==","shasum":"1aae15a10dbcd5aecc89897f810f2e9fcc18a5e3","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.11.1.tgz","fileCount":70,"unpackedSize":259794,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEMMVCRA9TVsSAnZWagAABoUP/iHseEq+li90fuSKsHww\n51U+5V3gzJaTbcKAwcXL7ELFDMpE1kVak6GINnEI4jI7qZKZQ7sxUOUgTQP7\n+YlrwTVe4asInM1mKm2HhLwlpmZ+XOAwIZ+C+HZXKH4a+nxUlzbea3a3btcS\nzzGX6k6MMAeuFGCgyaLAZ4kpsXcZg1XwvG/X7bSKQxhbrw9JelZQUF1pQnG2\nE0QVZ5DBGdDai3e9kDwW/Izp30/jP7k8UKw6RqVJS3IOJpFKgSN5ujWMBkPt\nnqvtd9heE3eJINJ5impGxnCNVqOSJJf4D/pyo5ZQs4KOnbQ1Yqn0tGeV66j3\nFMA0t64E/IXIaPGAoebzMxhnzbVNyaZs++x1k9Osp7gJ63fgwCCEuWpZS2hA\nadvx2Zs5VQxaoLpVwzu1lT8LFbJWXKs3Sww/RKdOIg5XfNjmzTk8jl5px6+3\nWPJpt4XE/OD5hmJ7bSLTgXSbk3XXPjiJUoVLsiPF65ujs2NRRtIgF/hLeql/\ngufU6Conwu+8Jb88wH9CbbCuXM0LN+Y1L+zxQF8eKDwvoCsc1AHS49U/PMOu\nJufp8xd3JPCtLWW/g2tSSDm7WDC3e63xWM7VXOySRiPO/jALWIzKZBapT8nH\nfDHCoOPMgTfGZJD0MWlT5FlKA6PErvPIVVpyfh7Y2A0ceJ/SnTNWNh/El9nr\n7zLv\r\n=xcpR\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.11.0","date":{"ts":1561360397329,"rel":"a year ago"},"dist":{"integrity":"sha512-wcp4Uofwe33DKIgPj0uT95A+85ofU0DvOaOsmsz1CJ/JpEnuDWQ8Ct0irK8KxHVCYIOEo3gk1e7tFb4Du57A2w==","shasum":"1fea97ceceb42aefd48d919dd3d1ff76467c32c1","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.11.0.tgz","fileCount":70,"unpackedSize":259627,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEHgOCRA9TVsSAnZWagAAGGMP/0pZX8DXxZdww9NLjTFE\nL0qGDCj0/wse/f3eQYsCS8nkR8UsCPwXSwFyDxaUZzjaUlosYHBmz9haOWOI\nuLNoGDrxdBT8hNTdIj1kOwblJa5oe3zkfDxncDojk27ic3WTyfjqLeAB6Q+G\n1t04Y6pnxfVph4mC9FJR4Rjgm43rqAYKZYsMM1T5EPNxxnJq9c+5pZ+YmVj4\n52wxzs4NfgqjPOc1n6fXPAwwj7rHDInjKlxE1ZmdJeVEif1GTqq7Z1Ke1JRV\nXbEh675zlXEJFYhXQgiF1V7qDxzTX5EDkJ/ZWwuIjDbHDdRVPsPaWvc3HGFj\nc9oZG8tGehAy9djD9vI636YBmTB07rBAgj/ApKyBqvI8qfwP4kHIeAuww9b9\nbXErhakgUiiPLbqA7f7M5Kxbp1jOa1TWk52ONh8WnA3aKAi084VeVGzLzl95\n216w0Tw8X+00l4VVeZ7ORbpHhvGTydrJGyo6s9U9/Sh6IBpWwuk/omPUSwJf\n/LLOIHueB98zEBSUsh5gyEhrrZnnGzsxSbqT994sMPKcz14LZGJHBu5BuYcq\nejF8EhJbPncnUKJhvkPfqZNKWBH6W7rc7q+X/93jSFRfsDzj66lsB09lQzZf\nQ8fp0DeEl0Jr0Df8bnX+zaeJakpB1xZ8oIo0UIe2hYYXE59f+qRZfSsGK1/W\nQ9QO\r\n=ZX7N\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.10.5","date":{"ts":1561182817825,"rel":"a year ago"},"dist":{"integrity":"sha512-Kyz4fq6YZ83x8CD2ZSeKyX7vFwL5M9wDW5UZaSO1oM+32Wwu0Zbk50VBiPeRgTrCzxpq7geOxEY7lSY98oLzYQ==","shasum":"d7649e4a85ba771032724e064c2ee3ddf644a8ec","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.10.5.tgz","fileCount":70,"unpackedSize":257574,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdDcJiCRA9TVsSAnZWagAAg9sP/jVSjXMzYNZ7GcZ7dpwS\n0c/Yl60MtiXGANZnlbGBByufQz8mqziy+5vJFm0EP0FWb7wVBVC/2o9QDpRn\nBCBbc2+QYy4HC1Q9EUVJv/gFvt6kP0RKHQPbZWxIXfbNHXq/aBMtsENIEMF6\nFZYbS29CKXcNy0G6266XQyFum1GCtNUHG1KWgycCYve98mmJJhmUAkhuD9ju\ndoL+kPwkd2tBvM9s5WmyiH7syDJlT2MPRRTGVQNI+KllozoXyM1HE5CYyLrh\nnkGNppKGgvNTWVSkqBMvMIUClrKpsZyTlm3BaKI8bJPQnOnlOXLKpKRebUKn\nB5OW3A5yWNtkKulAurCbpKn2O3kuY6pFiSAAY9w60aGX4jHvLMKXyUpMMhDG\nA6oGnObP3KjZvMeV9C8xQOrUUSGkCe6SMVs3E2+nJSIQAe7w+DOTY8Dg+yLz\nAdZ1kgSkXEWxm7gh0fn5K3OzQxI+oySYpZj/g44l/cR5H67NseolvOmgK1Jd\npxUk7cSFBgXJjVAZYobCvd6vWYE1pbDrKkrJhXsYQcvIjQbSveG33qqrrCY8\n95dOvnUJ0eamAUfF8mmUbe3XqqO4sVa8UZQu07j2k9JnALqH8oA9Y/ZYLCt6\n+Y3mvs/ISRRn39OYlwdW716iQ7DdQdax+J3syb5gyGxbyiir0fOOVMmwaFPC\nUaSs\r\n=B5iv\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.10.4","date":{"ts":1561122928360,"rel":"a year ago"},"dist":{"integrity":"sha512-OYzNDV08jXq/l0UdhSt275UipREgL5iqtN16SgFlAXJD8OmBAmZNh/QCg5h+L6FrrdPJgEXsVukihN8ceJ11MQ==","shasum":"442ae8933d0160443d9f28d505fec34c03ce1e15","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.10.4.tgz","fileCount":71,"unpackedSize":479969,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdDNhxCRA9TVsSAnZWagAASqkP/AoxcI9Jsy57qaruuMBm\nt0hUV/00x/pUT7qzXuvriT/zqjl9kmeYkmDaMe0mmsD1i/RIdIdXzPEp6Kz4\n7+yvQgv4GA5a9uNfJzD085qEJojCNkzNoM/KH+IudMqai9iaMu5TqZFPlOkB\nb3dE7tOE4w0nUBNSac81TUqqY7pyDNRP7uiKk3eAJ1IP8pIa9+9hXlSSZscY\nwF7vNQzTiNDiYQ9JCUsHrNG+ifrPWZZNWhHQ3/DI5OR5eTIV8DZ23ftFw2LL\nz3KiFWneEpSfZLdeD7vd7ScVl0yFdJvCBK0+ZWYHPUZt3JdF5Fglvm630Wit\n+ug7vdMAjkPduDwSHOaRCT2UZwnNxeQeMJlGM2DGfiSksLUUMVuHhsL743D/\n8Tgyeq7rlkmQLwoJl7O5MVPmxZ2WzDP+6VrHxDe3+v/C4hp4F4K7Ci523k3d\noiDquzii+aX72h3AVo5TPWRlMUPpLwk8t5glGnIbdRCBPm8vWJFh7UW3V95g\n9kFRMvkXP1zU4YQssWazizc3o48oP7jKBnvSf0kELna5R30sv/ujPvTmPLeX\nH/+0V4NWP8G9k7U/gInWn7q2EGl/6HDA0GGYquGnf8Q9OSKqrz1zQ2k45raO\n3n3kfvuqnWsslFDFgnJCsuOIQMmQuh4vD2HFsI2oRMzzDtgJk+6YjFjX2ZiG\nt0il\r\n=C/7L\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.10.3","date":{"ts":1560435213995,"rel":"a year ago"},"dist":{"integrity":"sha512-b1OzI5drhiDmIG52jiZVR7IWQkiwN1vLD+VqvYuLnpzGBwfdw/mjdXz+qN7XN1IVKQ6pUSV0t4F9TxKoJNkpRA==","shasum":"4a249e2fa98679d87cddbc00e22241e2466abe2e","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.10.3.tgz","fileCount":71,"unpackedSize":479902,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdAloPCRA9TVsSAnZWagAAhFkP/iA0abkIfKVQwVkQcXTj\nEw6UwMEWSht34p8j/OoThPoufDoDqheTOKid8rtavvpeZxDa5TzvPzNnHm6w\nn76cl07Zmed/8i4Rr1hwotu52NEPeHaK5VXzN7Vr3Vm8cu8oMS6TWeCuKhZJ\ncjbEYp5UBGZBaoGYSv5IIE5EOsP18LlT03Qcw/ZfR3vlq+XIibP8VJPyKe2Z\nD+7y6vpQOUgB1aw5t/e/qDKudCL+GwQ2U/h4P40nfllnB2Oz2XHb7JHKWv6T\nuj5i+x2itSRdZlfCNGXWP5wJPo/UpOZuWft5ns5o8EC3Yi+d+zAi2lkUktHc\n0PHQctUmhjSD9UmQKIAjqtYvmktt2MHo00Icte4raTJw+CemQtUq55GCdRXd\nij+OkCm5DoZi115h/CsdrYLqmAaTEQWXqXWT5giuVeE8P829URdgEnClLGeJ\nAb8Y1ZqAikTuoQkU7qEDKi+RTYN8HxGyVBZBrT5mRpNJLHfAjvn89W00wzdS\nANuOzbZlQvl6tEU0DR4llZxHCptdob3VfXtRqEoG6UneFCuWRLBBOKa/vSGQ\nkUg/3xMleeb0XXLFfPXSom/BbSKVm+/fp9/5lcI4pnr7GBF3okYdQHVZ/M55\nfwAbSTnxN76Cq0+CxBiwWp7fJfAwD2MeunUUrtjHSjSalkLD0LnbDnEGFfBR\nn1CS\r\n=uBzb\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.10.2","date":{"ts":1560410354076,"rel":"a year ago"},"dist":{"integrity":"sha512-oA56v1KJk6nORN6I4gHwA83wia0Ph7wClPbPTJENGKre9Q+BDF8uX73e1QroKVnn7Bt05VE4BN6F9OQ1RmdqDw==","shasum":"909fd52a3356553088ad8375be68fe6516926db6","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.10.2.tgz","fileCount":71,"unpackedSize":479681,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdAfjzCRA9TVsSAnZWagAADKEQAIWed8a3QWaqFw1wRnck\n6GVm8ZiSlgr6xEmes28iYD9XV2batKLw0X9AUI7rlsQSEtHGk0emAFysXcXm\nY/ZRGrPSKPG2SaqoAidXhXm37qW3YnDknNBotKDHQEGQtkJCCHYPopQ/Hdq+\nat4uAx3WgyE2YjGuzdN7AXRWj/sz38UrbUOEnuaOG6pWmSQCXNx+b0CVVgq/\nXnLw7K8G9ypxGlQtnCvJVo4qkRrlDr2hFjyY7BLkWX+xJnXUOZ83Ms5S8G6Q\nJtgFAV+oplaWR2uBHNsYBkcSIDkIEKbMg1SUvJIa2QY7qZIKbjR4A5UnvYoF\nJ3dElC1l2nC9uNNE+2mTNNt3mZ8pgfushF+pr4Rng2BDodam2BYhHdzCX63t\ndirntHWZ38NqxBpvJcj6qaDMiXfK+M1bJK+kixXqkL5gE9o37yVG5GcqovXz\nGANgCK7/S8R0+i7hK3SsDriJ6LqsdNoAChV6+dO3C1ZAGvazPHbk5Wm1uxZH\n2iOoOQBvlSbyy/safzV7i2NSWjQKEQVV8+G3b09f7LZ3Y7WkxjzrRIpI7pDN\n7tOr6vqQJjlVFB4lfvg4nf2MolGHL4iVt5zTaSTAB3FfNryntm0t2OZNdNyM\nJGlldOCfTwsIgXS1ICfS6FSMGSshruKe44HNnZ3NI6O6Y2zguDDROoEjHWyF\nTw2+\r\n=Tx5R\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.10.1","date":{"ts":1560174766320,"rel":"a year ago"},"dist":{"integrity":"sha512-TnwILo1XT5w6Fgz8j+NEqivmgsYJA7FYFnnE2jdXot/H7Pb9C2Fp+Tqdzb//O+PSVi5X2ureYqCCn7KDfon4iQ==","shasum":"f83d4c9a4594b3444433c8efb1caf91dcc0be32a","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.10.1.tgz","fileCount":71,"unpackedSize":479279,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc/mCvCRA9TVsSAnZWagAA4LwP/AugRLI474K5zqRIuLRe\niqTUi7RPHBL1fEU51iIAlSJzLKfsa39IEHV2vjdsPkC7VZAf/LddKFMBiLwk\n0ccoTihX1HxPd/RPPA+tIB89OGzGRuBW+CEKa6lRXCP7IkHj+e2aY/VPL48b\n/AZ6ZaeriyCzuqAkT0cCBClvOtiyLAdnK0g25OMZd2U0wL/olN9jJ3Muc43A\nrHr8Ic4yw7CCPpiA4Jx19ZRbmb7PwBD71I3PXDZjSh1yI+05DFZAOlXhHjYx\nbHBTvAdOA6RlWQSLD5TN7pc2eA/aXFDdKb8KR8zuWMcV1ku6MeUiS9u8rbZm\n1cSmVqTX8WWY+UlReaK0uEPW9KYwsY6P6xSgjhho0EKvgUZ/UvjEAslbFm9a\newaA9ZgZ5heqCCKAIXUPPeF79EM//+OpCuBRxJ+zXAButfV34vGAa7fYC/wb\nbbvX9SWebv+spJ0SKlfBXPJYRYhpQjlRKysV+8IGiIIS/aScQ+rdRLUw6BuQ\n0X4RWOhmyLh03MQP+0PdzDJwctbA0VteWl/wLMApjJ3s7+OtEjyjtXCx+SMn\nQBbWivjtTMBgf7SXptKkhB4H9z6ZAG/CbMBNy7frrMbtzFxVf673ZA4OC7Y2\nRjAmYaL6dLXt7HumG+F61Ri0dh1seH52+BDW0s2YMyw9a9VcZpto+M9pjyj9\nkqFK\r\n=WKpa\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.10.0","date":{"ts":1560156906335,"rel":"a year ago"},"dist":{"integrity":"sha512-oh8Qu4puP0wa0EAOt8KOP/w8QJWX3VhwWIYG/6rpBpob74EmN6WHg6/FPOvqnwgVj5tozUL24skgnmBQHJDybA==","shasum":"86373b6289d563d0efd5c66728acc55c606317d2","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.10.0.tgz","fileCount":71,"unpackedSize":479143,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc/hrrCRA9TVsSAnZWagAA+Q0P+wWMB63OH9QY/9b9W+xI\n5Bm3J0OiCqplHjg6AVL7z8PG2Dj36nzd/m62R/BAmCduMubowdU0TMIjhUr9\n9XWMdSOXorxCb4JqqGUOT35MfNMpszbWNVg4L9omalNSHDwfKU5HMk4Y+1KW\nf3n6tc3FP/7ItJycC/9w8PqDLuiISA5KNZtW6wVSfYUfTo2K/z35UTzl0IQx\nZ5jDqdufScfFTGcRbHUS4T0G4184/r4K1fGHSSCp13D6WMfgR5VM0oyJORWC\nfusV+JUno+DNlDhOn/k8FEYnWFwyOLFrZ2rQcTvtZt8OecIJmhwijQIJEbo5\nxi9DvvhLLYVPc03+BX37gxvJrHkqnzIdA2GtU59QLymwX7aiDRgBKFgzoEj2\nBhEaIlIPHbWf21ofjNlb8Lpt0Yp4871uYwhf7vHfH/VAohkZt1EjWyUULCIL\nyuUqXBxoMQKxLlSA9l42tTVaIzDDOGlPexn+B7DmYqz0m0RozJ4fGXskJPU2\nmVhtVUO3xVwpNcmcvYblA0q50WRBlUvSxs2v7pk46Cq47PbqH4t3mx+a8LVJ\nPddles0gl5RRCVbvp+o4igXDDP4uiAJ823kdDflMre0plPWYU3YO3HUZA9dc\nmikUiguhmq8/V1EXQ7X+kkVzveMM+7TGHuLIZZsafhSVYrB+Z26X6RniiKQC\n70W2\r\n=kF00\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.9.1","date":{"ts":1558594884576,"rel":"a year ago"},"dist":{"integrity":"sha512-ZlV6SbIXqz2ysvG0F64ZH07dqzLrwMdM1s0UNfoxdXjr4kMKuPPoLViwK+gFC952QIf341AmP4BKtKOhcB96Ug==","shasum":"6491d930e1f96d53c510e0393e635fddd4a4cac5","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.9.1.tgz","fileCount":70,"unpackedSize":470494,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc5kVFCRA9TVsSAnZWagAAdFgP/0tGoMdmFHJQVI6Y3kQX\nCAghblCrKjcJ0mTRr77ErgXM5FThFt4ozJjjw9d0ojzC6f+YvkqpG1UP35IN\nR0DNzdVT/lt8Whiq4oaI1aigw3BrP8UtkOLIZvbLcZqV8px4GKt6rl1XORss\nyuuv0Qrfs+cpsIFRCuJT42la1aXKtPWvE+fBiuEgzl7htRrS1gYvu9EycJ1G\n2/7vbtP5BMi/u5lt0DaIMDZuCgGvWWcq9hIWUPCDK3AjY5O3lRIiq5iYGD4u\nGjFf0XWTFEpgN4lN0GQiGga1FZlS05L2Njd4w3dVUApX6RibxHSMNWnX5Fsg\ntYa2K8mE4/wGAXLPwtCfvpbQz/5a31+omOUEmn7z9ujtq9QMUWx0cHROuyvq\nfaFHeISwJ4QjPz0ET6lY9edmcILQzXpRYZdC/+ZSwlglYfgJSfbK6K/lLCvk\n3LT2Z+QTTFGwIdzx5m7CPXg1pSLtI+xQV/xy0iGM8S3Z9NcMz8I2ByL20y2D\nxqvHnw4mDRwH2eVrHcqhS1RBjiz/ACn1//tIuPp/6yNgjhSz/Vzkf4FK+G5t\nl9QYg1r7g8uwrUcigW0t3+9iostgNf/0dzEdGjUVFP6eqwAW0W5XVzYymt6A\nVnPPgHYs3BcT5QwSkMYxPU4bnv9E8Z7l0rm+FYycH5PmA5roqFvSbjwGjfy4\n3b2h\r\n=/Hef\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.9.0","date":{"ts":1557945141483,"rel":"a year ago"},"dist":{"integrity":"sha512-g5CMBJx0dagvOOYLo0ws5Y4+Ma8BBDtgQU+AkjL3W0z8LJUsGL2avY2/bsTZS69qzEA+G7qWKleI1aZp6QNBBw==","shasum":"031949e2685e9e8658a1166e1cac3163313c3e0d","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.9.0.tgz","fileCount":70,"unpackedSize":470202,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc3Fs2CRA9TVsSAnZWagAAVe0QAIu+4Zs6bBWwuANkGvig\nCqkG1ixa9MtVxF9+11JFabv2vgmep6OuVaCvibTAzoJLZ6oSWHL4EadhMWk7\n67HX9clgB9rjmUalJ2A6ZW/nsbOtMWBqi7CAdr8A/xcbeeVtPCr1GF4pdu7a\n2VyxtiV1Dkpk4CIyKNRpyxONT5HgYtdKOeFLANhaTlv3uOeGVLfL5zkJjCyo\nF9zkAim+9UN3kMeuIWOhf2fWLj3ad3p98twNB3Tk/Cm3Neef8NdIH2FOOp0y\n7IGwV3zVSySBaiTFbfMie5skWnjLimZiurAFyuG1nFalBnsW1owuuC+giTiD\nDscsMBChQQcr3KcaawkE902d/skx6ib5eSLdVzMiaQopGsHIWWIg3xPq/1iS\nSh5eXJEopyd3aDe/c3I3YIBWv9LPzfbr64hTPsJH4tU6K41i1VSNVlF1xUUm\nf3kPsBrTgBqVP1cZKSsKS0HyHcHN/jt0PY/iI3NggRLeYKpHCXeEv6F+7S78\nRVH8Xc+OBJKwFJJb8oSEmTjtbvQVz1j5cmPb/TV6vTdPeM5WzvrINQCxGsnW\ng0MhCo3Tp9luThVdTy0MSnAizn8SO2XFnPAYTyTJFwv5Xwac3KsQKdvu1Zfu\ncxpLeHcDs4zawsvhxUnJbhnpMzkgoTy7Lwkxmj9j3a2xtsKSUYJUPbGlfy7t\nPDdS\r\n=SGgw\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.8.2","date":{"ts":1557563627654,"rel":"a year ago"},"dist":{"integrity":"sha512-3fBLnSQ4WEVKtd+PWuqL9qhciYrJWjLuOGilEIN3LzEYnPtvDcnjQPHP2OFhzTCRlpojSv2EEqoPW+Sol0vn2A==","shasum":"8e1ecaae570d149ba3ba2c73964ebac5582e8ff9","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.8.2.tgz","fileCount":69,"unpackedSize":465570,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc1ojsCRA9TVsSAnZWagAAJZYP/0C73SP5EOnsQaFkNAkF\n5qS7N8tq5+SSVBIefxNtPrYJDBP8k69pZ3D9664J5kVvID2VlIxEGhUAYvDv\nynakeZMA7l1GaCIHn4qP9BoiBvgBzCQ76uqstAR9lKYc46z/FVkx6/7GpPSJ\nEioWoLYU6NSra9qAGGO8ZTou6YbyXCI0lWPogZRF4WSBmU3uZ6YDzAvzlGJJ\nLPiKqZPmXjOJKTAnjZ4o0tXZQ4BbfwySV+g/LL5ENgdR7N7ojWyW8th3F+Dm\nN3Rwhb2BEhmbeF8+8VcgXRQ15byycigai0ibryLyZufaUgwetSzr9LA4U2HV\n6TEHZOOo+t6j4LwfnBYsbjKSgFj8NpLFeoL20tXN9Me0rBNxXKML5VQQvFeR\nUHsaMnUKbqA3WWkXtc3LsgUvs9rOPvObt5vW5ZieyQA7ZsEnkEySa/4uBkIW\nkKQHYog/XNIKG/0Pq0Q3n0dLd1bEt/Ih5s997MMHONfNFn5kVU7stTZUIPR+\n//FDbw8k9vGUQtCCHkkb+U/ZxDDNTRNpAOaYgyCPSqglr5n8uTYm206l3Uh2\n74YhnNWskGwTmXOybje67wgRspA61MK1dBczn0pSg64sozLwifzbIKXq9HB5\n9FSsariZCuKoxihuzniXim9xJYivVlAW6CP2Rz6QSk6ZLZI10fgABxl5jQZG\nxLlu\r\n=botn\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.8.1","date":{"ts":1557304630154,"rel":"a year ago"},"dist":{"integrity":"sha512-7ye/CCdTzytOu54Y1dUed/ejcIPMe0eSlxhfPIhOv2DCMvLMbwYGagEYfEuJ1ylMhkt8Z+rt8VtJXniNwC3hRQ==","shasum":"fefbc160b8f55c0bc0201236471637ad47ca6886","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.8.1.tgz","fileCount":69,"unpackedSize":464908,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc0pU3CRA9TVsSAnZWagAAbfEP/AxSgZCl6rgnyVSItgYH\nDNkPEDH1oTtdRg09/7B0/KLeGng1wPa8/2KIaOvdg8ws0cDGE1mPpfMeULad\nhhaWyf5VUViihJfkMhcVyopeoDYXKwkJ18Of0yuf8Mz+g+gFTn2FVGMLkHRx\ncBv73OTev+KV7ECozXD11Tfnaz4us0lpol+oX2N0VZluWNdOS6dV9cohNRZX\nMHsaZQ72oWNCx4Akis4Nf4VO67UfObBzCaFZasF9mJ4rlNNFsB63V/MeB3Z3\nwPK9AcNz/ULV703n/6jpTQbFgd26YHv6S/WF+QK8tzSyyk9WmYiyhJgVJspL\nFsFO9MM+2fma+x9FBYSdib0uCmgCXwechxXYOtn7rqnk4yPfvlA8a8DjCNnB\nid6JwYosqxFi4K8IVON+YiRT6YEWc3iED9IRMpz8zFRVxDks0prTCu4n6cGk\nFVK2hLBHH+b41ffUWHTJ1/WmhXv6Y0/1JfSbFL27rkkqVs5whpmVFJb6nPzI\nm6jxe046CLBO7zXvzTlD1jO71XXy8I+C6rAgolR/yG8v+5lM/PA2Jm+A/c9F\n/dfmu27oDrFuXWWwGCEQp/Lk4iyC15iLehNvzE2KSwDKj8LUHAomAMCHBGwS\nr+q/nwRpizvbXjwpH6EUVb1ik20umqh8FaRip48Xr1OjYJemeQo50EHkRYvZ\nasct\r\n=AT4u\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.8.0","date":{"ts":1557301136654,"rel":"a year ago"},"dist":{"integrity":"sha512-h5eKaJQT7fB2Sa8DZag1riG6ZPWe0C0kDcSLWPjOCiW12kCKrDNWtK4CaN4wCqbdCU7beLA47x5Qq+nNrSeJ+Q==","shasum":"564bec603f0c4b3cddd761a7907737e781b186d0","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.8.0.tgz","fileCount":69,"unpackedSize":464715,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc0oeRCRA9TVsSAnZWagAAYq4P/A/4xW6I4n1vj6LzQTb9\na5yB4M4Z5Cy5z2NwRtewNKCdlsMEZNq/VQ2O3B7G6m5u2k7LtOm56G0I+rNA\nofTLzTBFS72Fu7ria4gmUY4yjls40MFaM4A/QozZFi6pjme3XK3ImRyOyyaO\nR+PngvF7ktl+rbDpw/+MMxOpd1OmEwL+BYNfHS/GjojP8fSZh6JfRxthRW97\n5vUC8qr2Fz4ROdYXWjC/ZBFIneYeIDiIyOj/5rdWdjNxqi92g3h/vXIsyYYZ\nHx9qU2Um8C0+ZDnUxQkteq2bur390rpZBFRO+6lmrMKllTLBYiv72abADMKP\neYvbYDcT4qPrN0M3vZ2eFWf6I2rgyRtNYZC645evSkPlt1I1WRO4AgDwqx0F\n+lqtIoAvAUQp5THR2qmCI1uLZ++rkvy4btrTszh5nvutfELpXPGTD3hGG/DA\n3aM53bOs+qYF4KMqqHOUZ4zW/eMwa2lhMXk+OQ7Ial2Gs1ZcdgOiPTsNCwuF\nfGRJ6llk9QaIDLJEFNKyMBH94s6e6JnHj172lTSaukx7gOJ1Rm/qMInaTjqV\nXok2CC8MjtCm8eiZO44X9sYl6RxOD++k0FHuf78YbLaV/RrOLv2MKqpVVbbd\nHIJZwKviXP4YzEmKsANHyUdOQfZPjpYvKka9e858DP4yfAC7kP+lMjtJo+Ob\np1/w\r\n=J8Hc\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.7.0","date":{"ts":1556811756024,"rel":"a year ago"},"dist":{"integrity":"sha512-6PAYrfSAd23C6ZTc9OhEpSn4uz5HnaXSOYzBLPiKNAE+WmNnWkgkfrswOK2Rlvn91ofZoba7SR04gitnmW9sqg==","shasum":"6662392f2daf6056138448b46ebc17c7a83ad337","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.7.0.tgz","fileCount":69,"unpackedSize":464636,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcyw/sCRA9TVsSAnZWagAA6ysP/jZFrhWnZp6ZWFVuzSHQ\nW9+JGU7UFHrI16tq/AA0NFu1J+vRcteT7KLyrbzoDp6px919nGqqwpuyzWBz\na5RHoUg5t/Ydo+BFoANU2fKdbM+bFMtn78miLz1oySZewXG3fLn4WxNPNMWp\nyWJR8h92P9jnothIKjkN/riEgkV5g5TO68DSm6Kq9fBHI7jD5gmdoy6MFcT1\nEa8tkIBT+JBg3bfDO6+qJc6Y+OSL4e4UkV3K8FIgryJY4f3v8y3vaopCSUly\nPqp3DBKNST7AjkcEWYwjGethazYvHIwEbd82S8zSoe8kxnSye6y2khKnUjJ+\nAYR+Kdh0M7geahL5/JFD/drBtf1aUhANniS5e3y+SKCFx8Yk9Dv5hLPx0woH\noM7ao3erXWFEsc5a97nmw+hsecaVQFWGA09K5buj3iI8TjCZUCYzspwJQKKg\nO4adE065X+gRub7pqAqYm+hLUALwtWNWhyxk9ug57X3ZpJNJiQYGXUrmOTfT\n0e41I8Qj9k0aHePWEVrXo3Gfc1TF9b84lvnIylGlCGW8urNrlA0Wlo9DxGkf\nd+RewB5A7Z46BfazMZECYKXO0jFOMFPmOZEHJDLdjJUeMruWUjVbOAJp8qI7\nAO5LczRl1lbqtkerMZ8toGlk6fgU74EPcBarUN7Tjud+maQ8pIA9M7Tf4Mgk\nYbxg\r\n=gQoB\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.6.1","date":{"ts":1554877535602,"rel":"a year ago"},"dist":{"integrity":"sha512-VVuPKb5kgWFhxCkAMpL5wi44AK+4nkxa3XXZVa2PKf00n4INNbdKmZC0tT8qeNTHoDPYMXbqak4tGC9YtIOqGw==","shasum":"99cfa3a30e8a2c9ea40c507b25ea9a320af4ceae","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.6.1.tgz","fileCount":69,"unpackedSize":463879,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcrYxgCRA9TVsSAnZWagAA8nIP/RmM744ffRtoQMu3eMWf\n1v0Y0op8urzCFAS7tXzl8cMYYXwSx2RKtgCcnkZ1oQ22QDQxXJEUaWXcBaZ9\nWZay+EthzrSljADQFJQBdDCq/vu6YnK6/rwNSPNuIsnp5fiPfJwVrrskMV4B\nm5kLSCHIluGSDsOBjFd5FpXG/FLqLSONbwEtHM53VITsxym4dzf5CO1TSVlK\nL6rmwmssLNQGu0gMWVKIYcHx41AiMw7+HobVBLx87/Mltir+RIviHINn0j76\nSdvdwsWT8Iwy694bRL2C014t2vPllKYdXUnoi/k46T5jVTS3pOZFHrhEUKLG\nHzxd+ceJ6r4J/QQ8AtdtUGn9gYShMd0z/HGSCqeycwrKw8Aa2eOP2UNXHzpK\nturNBC+r8ft2q+m3537hqrUwPoZ7fJOhI50QT4S2YllmxfNu4WrZCPrKtxs3\nh7m0xPxbQZnBa7JpRB7uIVw/1UOAcoliBZbD7rQ5UlNwfac179dgqYEcX0Jp\nTi0B/zElhg6+ycmpcGJY/PmwnyUJOoEilQ1xP37FIPMfeAY96PhSFvzsgh8D\nFoQpRHXc+KgNMB+NlM15lRU8bdQWNKl6e1Xqvfe6NzAXykVRTnkJNNuSdQJQ\nU2rAxG25mwzHfqi7aX05756micHSMjTaDNfES7WEVjSmyZLeZOrmRRxoOJxT\nJUfr\r\n=9XCo\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.6.0","date":{"ts":1554726278636,"rel":"a year ago"},"dist":{"integrity":"sha512-7wRfgzXteB9jswXreGG64FlOdscV4z4hIW2lS+mC5t1K2QQkUDh7A+95dB4nU7io8zIOq4cRpftF+41xvMCtiA==","shasum":"375a3d77f5dbd3a0d2c3554fadcd1d0735a6eb2e","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.6.0.tgz","fileCount":69,"unpackedSize":461009,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcqz2HCRA9TVsSAnZWagAAlXMP/j78h2sWBBo3s7/cCUjR\nDVfFZdncvL3/JGq34OLr/eyvaTlsTWrggKCRz3F1moOfbL3Bc/nyvpICcIMP\nAgmujIZOxQovLrry4uWwyK94oW0+07OLGpgp7jl/NieRiPRIlAuxRW7NCw9a\n8KWBZnaJiM9VC7uHyoJLjjSePrmXE6cv7xC1qjGovuxwVyqzPCyAxadFo1lf\nM8UKqGQy1WZ1HUq6lMzsBvAplzIXZPg0a5T7WrErcM25niAePAiKdIZ0aewC\nYpJeqXSr7deoqQZdj5P3ypFMUwbTICGat5J5pVEhCoYt0esK680hXPVKRqqV\nw1IxX9gLioqMoNEDdjUB8oYmhL29Rk41jCv86SbU7qRvXdMvTfS3UXASYHG7\nwRmg1RJyBsGbjl2ivhoDG+8TfANnC7b5J34REXIXnH1AoqoXb5u7xZT46Uiq\nSXQaMzoU1oV4u0nZx3lMrrOLt4M2xscELxdRQLDfrfjpsMGslpU2pgPbL3d7\niVukobXdiho/xc8mBkF8WFeP+nL7ekgpWPEbGl3G4a2ucKnYXiYsczqn80hC\njzSHkAD5IxerPHaa75oPNfrcdIkUOAtqAkQhKsjvMlfJnGY/BIgnmrxanQb1\n7wRSQQqeQDiNsxtuhj4vR4Ko1xvkB+Qdk+NqXThnyEYe0Sn5LUby9byy3o5V\nLA0T\r\n=Df4h\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.5.1","date":{"ts":1554313738417,"rel":"a year ago"},"dist":{"integrity":"sha512-mIhq7jhBSWNMp3ECmlWK+b9EFmLE+3Jd9axk05LB+snbRPkc3/lYTgb4Bu9lgt1QLmrxFDWsASdKj9CAIehckg==","shasum":"903c542c33039bc1db16355fff2d26733903bb0b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.5.1.tgz","fileCount":68,"unpackedSize":459897,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcpPIMCRA9TVsSAnZWagAAOGUP/2EhVLbBT5nQTXQt+5hs\nIKf8PDiCgRwYmMr0hTxmepPJp0Kj+xpfUhFdZas6dwhTF3fl0yv8pMCwV/Ed\nq2y0B7JsiPbtB8+JdOwd13r+xj1lC646nvdseZFU5ZfQETHlHuavEOw3Cc3K\neM6kwnPELW6PnMzb1zMd/iE88P+juZ83BGdhuW7NDSu0tn08wp0U70EdF+fJ\nFXACUZ63FPHogzA7ujZA72qrTq8hSAT9eW+bHtr2/6qNZmfeathYKryIaxO9\nueCzOzksf9OFw5Y+2xAC4BZ9NcvsnFeznRE1O/0Htr1YmBl5VJi38Ox6qgiR\nU+AvugbQE1MAMF20F+QCOeIhDCbc0qT6HXIWwA1nSpA98AB+TbaQPodN8sET\nbAH2TpWw07e5eUFF/W43FyNmk47DjUwyIyF+LZC3hHwzr5TlGB8jPd0gUXe0\n4repT6kM8ragS1wjbmeK6dF19nVUZORtQ2OSo3+5KPWoQHaCohbbmh+OQgeV\nrzT90C/Nef/xjkrAas2Jf0VomDSUkZ4mK7ehG51WKC4oJwt3OAb1QhomPh3K\n8rF7fxRSIqOHf1qKIP1NhagQ9D70GdZqa3KUSD0mk8FM/j8VXHvpHtKF8nUC\nnNAu31sgu9LL1r82vkWimi2c00S8xKHAIqNLa4Lz6cU9xkx2DQMZeVg0PmQW\nxR08\r\n=IUin\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.5.0","date":{"ts":1554311831353,"rel":"a year ago"},"dist":{"integrity":"sha512-MjReILZxs40ip9SZwg3BjrJ3qh9UyYUxqvweHvN8CxBw1dPeGul9CjjGrwi7md9tyuHyPg3cEG4xKmYb8q+yLg==","shasum":"3b73b445cc4ec6f34a0472f9ec041157ac5b2fe4","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.5.0.tgz","fileCount":68,"unpackedSize":459515,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcpOqYCRA9TVsSAnZWagAAji4P/3zUy8jLcSLGnRMUfl5U\nBRd7TlYrhjtVAi8Z1KYlM2fi2fREtn1Kw2udCyQOrdewpHG1OuTJpiTMhlj1\n9DpggzL/ljXvjmUOEHZ2pmLrOwu3x90PVWyWvSsE+iX3ZhlBLjbxpLC+s9RI\nujWytLaV0ABLxxLpYd62sj6l79oXVJdqvVriDMc3AsMn3oy9WffmSc46gR1V\niF724cOIrNrcTZIkyBru5bALCBhyTCnkHVBjNnqtgoKiuEHnHFh+Hw8mr/IQ\naiQVD9vmucRaied+2b9gin3BeJ96Er3ZiEVceRd14wrxcs3z1M9oJjhUaGM3\ntayuf/pQMIlJEcc0lSCxq5UkBehLBJDUVMPn5sEu0KfxWUHoUpIwrc4Y7FdX\n4/jKN0xURnPMAYQGnE6HB+V6/LhTIEzScYCfEtZTgnK7r+c8ScuuuykaWYxD\nl+p6UHaUmzSz9TDxB8rSTZRcoTz7pkm2CqDI3a9cF9/9oarLJbjN/uNDRISB\n6zs546G9eIS+kWzw0djxho2bu8296c+ikvKQJUxImk4iGKxAeiJ4nBSrKxzY\nF41sZACA5ahqNNRdkCR5m82M1/YCpnVe+Z/RQQR07kRT4GJynR3w75EPnMvH\nzR6GGMBKtsaCLu7QiN4C1J8mO3qorGIwFk1Ma9HlwYH1HU3n0Ki7LeBmXZ9V\nmtwy\r\n=Vwil\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.4.2","date":{"ts":1550229115510,"rel":"a year ago"},"dist":{"integrity":"sha512-sv6O6fiN3dIwhU4qRxfcyIpbKGVvsxwIQ6vgBLudpQKjH1rEyEFEOjGzGEUBTQP9J8LdTZm37OjiqZ0ZeFOa6g==","shasum":"55475e10b05fd714d60bceebbbed596cb8706b16","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.4.2.tgz","fileCount":68,"unpackedSize":459174,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcZp58CRA9TVsSAnZWagAA9jgP/3LJ2014W9Eoz2ullP7J\nF4R/66QAeK7uJ40P98ZA8+4n9Rz5hJSd042RxoBTqFzymrRUH9IlrbZeqIdX\n9fDg4F91Tb3rDk3rzLV+MMFIKEGAxZry5sLEJPUmTNUHlBZ/Vicn2/1J1WGV\n0i1oUl3YBUiC1bBqaREUgq62Zya0oeau12XZmYeOtstT2sHiOmJ1BEeW7kRc\n+fBkxGEfeyU6rSyblSOvbLMPPNT4fWb6EGFb5iQI+addrHPs1GdaqrhWhpB0\nbI3PvxQzwFFNXIz7jTbonIP25WQ1z+t7OTIxm6E9p8FMC2Kaz0LnS/eLCQN4\nmCpX9YR1xXnknu+Pj7bz+at5Zaq/tTz/J0oqHG4zU0l84huRxWz2Ac8PY8Fk\nIHALGD7u4Q8SGzT108OQrN2N6sD58vEaBmS1g1NgJJEqL0XCrF3gaYfbJEQS\nzQxsj+o35NI/9xtbmKUA200D6ZAwxX/Nt9/IiKU+jr28+xzxMEqFAUChK56r\nKLxLoMvSPYPRy02+OtvZEXOab9VHnpEU9SbrFqUBe4zTgTnxVfGfgikYurK2\np2B5w929wUBVqnxXiYcVJxhOHKgK0Vv6ptT7/c/yK8ASPtIuj40s8T7MD/WD\nylmI3QgFRACRHvwWRnjgMZ6D4MIuJWbw4StycjkBTt3cU2Au9bRLgbdK8dih\nTWpV\r\n=5DwT\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.4.1","date":{"ts":1550000927438,"rel":"a year ago"},"dist":{"integrity":"sha512-u+shn4XXuLEMAuJmrkfa4d2a7PE3yirkAkjXF5yyLbK02DIsOP9BgRQo3MTAAbcRfTz9sOL6hmRPLYGaK5lhcA==","shasum":"d359af7e4a22f41b8b441b8be72a207787f7b3f8","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.4.1.tgz","fileCount":67,"unpackedSize":236511,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYyMgCRA9TVsSAnZWagAAuQIP/12bTLVQFF/ikEYJsZ90\nDLrg4fKDUkOVXRimTDa88907o9sqvYleLJrLZjd0aAqRvZu+6DuqD98ZInoM\nSd/a4dnt4rC2WKKNKtAut9b3w+FFyKRpZmd77IKKekJDYlIyBTSy3KBEs4oQ\ncas2eaq0iPWQrNK1mSS+5aa/PopFIoaNeXIv9InZZOV63K36LKY+uz/oYvMr\n6pLF5xKWj7XPEKFGRyu8uSOcxsfc+NcEfoYCmQxYK4BdLVaC+v22RkcuMbEc\n19zS9bD6V13iUk2rMFUqTCLYhLWr5qJqI8eqg+JJKuHB4bJgO8AI45Lbpf14\n88O5yZ/WI2qYRPtavBMm51+XLRLzmRk76qPv1NXJBHom5RJ7N4Ox68I0BtQU\nWTwSNdAoAZ5vfBjHlpqpD59Jb0no56wMJezRqSTUYRrtMcuKLQs9cBA75JtL\n4v6WuEGm6GpVFmGCDBMJKxmEo9BvfmD304EWx5YmHQKUm/U5MVg4rppc3ABd\nMR3KHFNGvyg4JmmKyCs/yM25K1NBLyBO3Li5Y09yLOWV1xxjye7Oaou1ypQO\nX5dBk6nijuyR03vBqAWa1+Lx5lngl/TNdCFgXBP5DWmCQIynDlgEMnd+rDsv\n5JiWgZFy1ovpbbW7lKCtsv5irnxIgNtdmxSHg9yYGkt+cDO1A7yIiyXIfbyJ\nUNdE\r\n=8q8W\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.4.0","date":{"ts":1549998778268,"rel":"a year ago"},"dist":{"integrity":"sha512-Z8zOLWi1wrRV7JR5r5IQ9Vf0kmfQhfP4fqsZP7Fk5RwEnbBBs9Pez/4mdsZhVaaOJ7PQN7xea2Prt8d+wlM1Gg==","shasum":"2e35c7990345eb2b2deea3ca571ca17dfc6f2c8b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.4.0.tgz","fileCount":67,"unpackedSize":236543,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYxq7CRA9TVsSAnZWagAAmCwP/Ajssys78q2QIh2KU4EU\nlvb3tqRnWou2hZi+uBwB81wSQmRxochdDIRD9iRpXtaGr6DHSjp8bNEUxXte\naS0XoUGZlsZxFyTt/8zRsWBgJGxhlz5hCwKB2aMubhVUe1/4/u4X3hdfRgqp\nHuA9G33XP0RHpvAYFTkIAsSGhpD6J4cbXESukWlPUL9qFa/dJTbN/sibCJXX\nuNxZkjOajigXa8sbKor+Ghd2pUe14I7D7QJBoTKPyMD/fDdnRrhh9EuuM9hd\n/W4jN/6JNIgHhxPiaChFeYqZA5eRZBkvPrfwSIHt3zDOm2nD32ZEvrmOc5ak\n1tmBUvcFirOh+taiD3SCAYLaG02U4iv3jjSHIEx7fA5Dm84l61cLYNjmYmQ3\n0geA7ok13lZ1F90a0u1yLoYncSw4ZyfvS+farr5kN4CvKDxq8AbGozwxfoff\n1ID0Svbz6q+oogFBtc6hGMCAXryKihGuWS6AHEDeovMH6+HbYrsUueHGlvcW\nnZ5LgRR9lyXYyajqo00wXo5FDuffwt1cfcMnSmMXm/IkyoXkNGH7CCLXkLUj\n9rR7MruDOXbtcY1+yqPYhP0d8czUaJ5iGyERUpCFjdNKUwGrzu+8M4QJAxAV\n0wDlS24qKXJQ4cdrKyBpBMZB4J0rZ//5qSBOGa0GGRNLzbmep5yXwmAX6MSU\n2yBE\r\n=+St1\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.3.0","date":{"ts":1549997849974,"rel":"a year ago"},"dist":{"integrity":"sha512-moSeh3j0S35kxDLmxgZiwLiF9zzQWRAAMPVX8RNdeRDLSIqGCIcnUMz/qvUWR0+5GUo9mvHPRz8OSeiMTaycDA==","shasum":"941e33986258503298cae0c21a689611e7723ec5","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.3.0.tgz","fileCount":67,"unpackedSize":236038,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYxcaCRA9TVsSAnZWagAA5RoP/jgPHQPjJLMu89Px2r2l\nTgrR8N3ljsDFoqqxMae2OJGntrg++9jopdFXBS5ya4JMpji/3/cjiRvH6fBW\nBXYZX5sT8rJL6f8iQlEObs15aAWGJyAycHJi5PRgZ1q/X1VKxXY9H7FcPy80\n6FlNCh+OGm9fwvY4jqdEjTEbL1nrKHiFPTB4AaqGJxwYw0LGiVTmnsD7BZbq\nFgNAeXvxpgCIRSJ8QPUDPGSBN1H6g2JQBDSqEfNiSiIfNU27dHW2m+mtvfvV\n9JZdFvSRbPawJDS/ydq6LyD2t02Q3r35QlIwYfFfcxaJ1Z64dEsMoQQOkWUl\nKIjyjB+B/qVzyEHj6gqe9aFx2AA9BMWateuUuNMg7Yd5Z1NzuhrU/NPEd4OD\nY6FVMgpokyA6AcYxb+G1vnWFDoDvhhlGStClr2oIK3zRxZya09ct//aZsIJv\nVlBPo1qe7RnxWAKJCSrr4souQ4ifPvnVDpSJP9c1r6q+naEKdWWrkkL9a1aZ\nnEJ0BmINzJGc1yjmDs9QVO/pDcFxHY3+8835iRnCi64XAZ/p0vlgOS0b1OXg\nOTfO7V/qkJ4nUqaYxNMg/LmQCsvz9TIdQihXWgZY8b2RTieDDcZMS4Q9/8Qw\ndOWkuJ9n19uFpW0ZD3R2SwXt2fYGlrKODDzNtGrNy/bcIJQMWwjNeVf4fMxc\nW2xC\r\n=hXqm\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.2.2","date":{"ts":1549997535225,"rel":"a year ago"},"dist":{"integrity":"sha512-IKefFWHqrdLmuqsB0TiKF+ysFXqHkPsaS5yT0+hvHOWTfowHHVbW7EBagpMLRTh2OG5jwhK4FKAVJqg4R6dtMA==","shasum":"80bc7994875498562942a280e1c71db365765cb1","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.2.2.tgz","fileCount":66,"unpackedSize":235497,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYxXgCRA9TVsSAnZWagAAWCQP+gL87cE9bY1K4CAVZm9i\n76BrN0GjSTp/VSfnV/1WaenjnZn5MIZmi0GE6WeIwp4elhAttJoBNa3YbDGr\n9n/ll0KwA/40zSc/f/rfQX3zW0pLRB1CWmSc9kxosaDZ9z9no3gSuYIE/xme\n/vuwvrJXRTSipfB64O95+LzIbqAaXY7GAcwTD2V/Idefmds3Jtwd+qmrtXZX\nn20UWuGT1/b+E8oZH64YyHI5QecilnfWAZQoXyYStaMm1yMQbCTDLJbsFXyv\n+pnTy7QvF7NyowJAv9iEy8MVefp//nau9hV0iU5jSzT5IG1wwP9aD00DgBy5\nwX4SKuzeezZuGx174Eby2NXjy60dtNRnn4FH4U9QW860yTeHnUDMbj10/QyI\nW97+J64H/TGOxoT5UJHDE7FEeoLmcKaGWjjsdRLT24qO7+AHH0ua1Kl3e/iM\ntAWXizWyMMMrpsxDxaaUVGtGKpnqlCWQpNpVJ9kUqwl1DlHUuoNsIPTVYpA7\nMZGTtIoLklnsnnY/eDuZMU9PSyYmg270K2MG5SuPL5/e+fa+2rd6eVm8QQmr\nsDW6gYRI5Gc+Wmryzwj8Bz4EY7wjd9Z69tO074vqckq2rgJ0eZBxmMVIaAnf\ns7QUnfWDUdzoyY9mtQVNYCcRqo7CskfA2uvklZiJjspZVdrTCQcLh9rXjaAP\nzgVS\r\n=Y4PB\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.2.1","date":{"ts":1546935724796,"rel":"a year ago"},"dist":{"integrity":"sha512-1lymqM8Cawxu5xsS8TaCrLWJYUmUdoG4hCfa7yWOhCf0qZn/CvI8FxqkhdOP6bAosBn5zeYxKe3Q/4rfKN8a+A==","shasum":"45e032aee54e695dfc41a891e92b7afedfc62c77","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.2.1.tgz","fileCount":66,"unpackedSize":235085,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcNF2tCRA9TVsSAnZWagAAxxUP/0Pjxo1URSqG4tCpelcE\n+1lw1syRQdHleaeAAaxiFB4QEN6zj+RX5mdkrTtHPlOr9BCeHfZRBRNnOArH\n4G9+dBaLycSaTfPi6W3kBk3tWZ0KNVo2IBpmmyl1/4/9+hBMklSA1ovRys71\nipfSvvScWO255gyXcjedyYw7BP9mi2l8X/mTf+0tMEum3FjDw8AJ5rG6zec1\nDOmSWm/MaQa9eOLPWumNZ5Aa1ojvsze0fnGq5B7fZxIKPQ9gxEPls5IvRvz9\nie4QN8UNG+kKZB0DTaB/4iJq6z0wgn24NKPDOLPSO2jpB9NojRWDRm46e/xa\nhh2nfWNGTuFX5GzLa0RfMgYJTFnkfVIWO12dprxcPqKKuyLMFCOoJrsYZnYM\nF/0Ni4Whk/MHYT/W4zApLxdb9Qzgw15nQTZZdSBEGTmWqHbnMdvfuYxNp+5y\nzrn87mmpZxnsARd+LNJhiEBgpT8vo74BBBjT2i6VqcML20PdFfpl1UInguWY\npzR1z10x3Qo602iEQwFSEHJSn6qy2+TvF8ElM2WNhlOEqwY83DcFgicwq38F\n9FyqpLHzwzAxZVSzO8E89wnFu02v2bPBx/IPfk3fcIz/UOqhIhXPgkUccfMl\nUxpVJmfVJj44EX6OA8pbvQBUmrURcDP1z2FmvUF/exwDtY0938u1PeoRzlDN\nKYEf\r\n=+avo\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.2.0","date":{"ts":1541077682257,"rel":"2 years ago"},"dist":{"integrity":"sha512-baJmzngM6UKbEkJ5OY3aGw2zjXBt5L2QKZvTsOlXX7yHKIjNRrlJx2ods8Rng6EdqPR9rVNIQNYHpTs0qfn2qA==","shasum":"824364ed5940a404b91326fdb5a313a2a74760df","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.2.0.tgz","fileCount":66,"unpackedSize":234506,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2vqzCRA9TVsSAnZWagAA9rgP/3+W+QSk09liEtzhdOrr\n2ttRh5LMqphA1prlBy9IAeDEC3vCQQ6ErHTQ+DsFCB9HTAeNimPEWoIIJqMi\nOoKa8VqWLYG2PrdOzEZS9OOkTpQVhrnYKAbGzLnyA0kZXI5+XuXMzqCDglbz\nnJV6WAZYlYj6dHL4IOeHmTZ8DHsuvSYv94wMueu5e09pdyNYzK2POHYFfTOY\nvD0mPdCFFNpR0uJhKOIynyC647Rm5hGXFB8SlgTqCh4jmjTz3GN7RAD4RbpX\nncKPH3QLi32n2Sdoqx2Dp0B2Zi7MPX5zZDojVY8NcS+R9uar0N19/A94Xe4n\nUPl/Hvsy5AMEKXxJRIDlBhayJjhI7yxsRKsSVfgSKcUO1P9CDFlRY6Nc9of+\nEdHKpqkA2ri7R3RsXm6IEJ2NzYcOpl2emzsKa6gNMabSPAdBTUUnSXWtvWza\nbV8QtwtNQjNo+CXei5YayHn3yM6SJRZS3hI9pUMnKZ8sH7xQQ32h2wazKqG/\n2Qj+KQyN7Gyg85EOm/kh0h6W3657WJj6n0wY8DsDThD+4W+9Viz85Ns9zCC+\nCcDU8UwpfuSbzZmHZvrowKIZeAt0pC9UuakbdUQZOG+Ch25xwBzDwm80QtQC\nDiEO87NoEplKU9tBQef1+9D+Y10Xbj+h+tUAIR84UIoaXFZ3v7A82es96lNA\nI5W4\r\n=m6Fu\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.1.4","date":{"ts":1540736097889,"rel":"2 years ago"},"dist":{"integrity":"sha512-vTWZcbE1NZaSEJwD2hXFFwDi2TidNLANf2jfsl+Mb43x2g/1TZmf/VVexljNrbbRw46lF6+Hexq10hF6OFZVEQ==","shasum":"c6c9c514b8c01579e6621b51d83549d5db802cac","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.1.4.tgz","fileCount":66,"unpackedSize":235096,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb1cRiCRA9TVsSAnZWagAAEc8P/RmOwdPjfKq92Pzapy9l\ny6ctNANjGWlc6bE4jb1eNBADiWfXwxPMjmcACV+uQ+gkO7f1xcpfFoH/YrDL\nHHb2Fh3Eo5jTCnLqMB36sZi1rt6TNKHUinynFMdQU1/spkvqHbC370kXMMCB\n/j5UFI3zjZJmsmyeT+mS8EtdJh+yKSahxpMJIZQiEB6yINydmV5x06DezH6g\nw1NnDUuz8bYZJ7ub/d1rCRaFcpWGYjzYOLvZ+V6xvwoXIbBZduV5N6i0dTNR\nOyoyFJQdKe3T+P6bY0oTOb0Jkdfh0sKRwxk7a8GVZnxseuZR5IKaF8QsLcIh\nXVgWu25m20/mLSj61iCFXG/NwrKBbT/pTx7Xq0DN5dOY6wrP2cRptO1JvL4k\njhw8s9xNvDSxGWzB/skqFAQxsVBPbdrjOE+FU6V53TLZvs9cVA6wuT9VMkcn\nNE2AvXRzP49CEvbVqD7czy0CNoectksvTH6xAH4GFf9JFbll/wmlonz4kibH\n48JaaHFOUvC4Q47ncmUSTRV/9z7Modhnx78sTAYO9IddJnaGzG89jobXsHDr\nrCl8if1f30idpH1TcgsujgC5DgbJzZma02PDNjG2o95pP1qNSEtCNXfcByCk\nuanmVgkSpbGnW7t8VgCZ2AHgfsCQUdhH96tLiDfuGRp+QwcV3A6buNn23lvQ\nxaxJ\r\n=rmNF\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.1.3","date":{"ts":1540735752600,"rel":"2 years ago"},"dist":{"integrity":"sha512-HlE3r618pwaaOJihIBTtFzkWZF0lcyNgA27E5vDQ38l+JbeOtJmLA0cHN39nfhnElv9gAIGmDhfWD3urZEfB9Q==","shasum":"3fe0bf1ec0f4be717c5ad954f9984bd0df7c821a","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.1.3.tgz","fileCount":66,"unpackedSize":235096,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb1cMJCRA9TVsSAnZWagAAtSMP/iZmX1tYyHfSVBnIDqqd\nyqxE3IqbbTPLczWB7IP4WFP7X9ZtR5jDcvqMLKZxQOntbwlW3BSOeMzkkENn\nhW4F3tXvT+bJMrIg1e2rP83k24DrxDA5eQRANWQeDhoketmh/KMpFjkE3j+w\nEf5aakBOp+ncYst7U3pwKe16fT4TVIUIMz0k5H7U1iomNTB8T9914tm/d4y2\niMyC2joU/Rfsa5nGvAmthZZRNCR3iSLl2JPt6RRmhPYoAUe15h7/tD0ZLZ4b\nyc5bx5Z8vT9AS8XyN6fk6hC41mNiTWuNKBfdsXSFKkun1zNrt98Xrg1iljv6\nfxcjXgExKJsNFDmKhbgneYL9h335upkZa+F1kLImqcRB5sCYHlaSXAEikR4B\nU8AiC0lkoPWJIl0gJvioc+5SOrfY/Km89yhpQAvKMeZIP/dwjj5Ge+XbCHBw\nAcTNqfUaP3Cen5lANyXkoScjYP8B/2yGdrvORCc9gaWANN4ksAZ+gr/QZA+8\n5l57uU/Juw7axXvrGG8oMIa+C9zfZ68BuUvW7YUxxu5VsjdAyq2oWIo/Niee\nM9Q5NJapi9CMZFql+hEPid8GnjsX6tuUPBIXHiUMXO7EMDDHHJ/O6Cz0/8Ut\nahmv14NEwEo3529A90FrTV0nFWMaxW2WYm6Jozhclj0oXE/zyUBXWwszJ8a9\nOhFU\r\n=MCX6\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.1.2","date":{"ts":1540735152312,"rel":"2 years ago"},"dist":{"integrity":"sha512-kC6U7sUNUdsnNZOYuJd5eiH9fNQBg/6TZ8obtkywukgOFR3RQFD3/X4OVWPOVYvv0//8sMBT1KBvvzVEXbJ7PQ==","shasum":"8e54539fb659ce9d1e105f35f4f65afdd1c1c9dc","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.1.2.tgz","fileCount":66,"unpackedSize":235214,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb1cCxCRA9TVsSAnZWagAA4KIQAJmwqF/cmBHzzm4BkbJ0\nJ4pzPSYx8Rq0fSImFDRtYtJT1QTpygaI6WTWSiZaqpt/HykDTP64idfX1+V7\n7EplVyRjFMMhCMUydfw+imSMzYDhX8aZwOMD+oYgKcTdOQJoYDQNMslU41E0\nwBpzgIXM8vxV+a0Rah2DZgrhvvNQGS930QjhS4adtASTOXfd+ZJ0Vz5vjUly\nC3spCh7nh0JDqXC9g+unwkwCpQ5rMSetl7hEHC0ZHJ2AGtQs7vaKFXQGfm4x\nnJaPKBd0Qoe63vbvN5PkLrlZKttjzk0VIZMIYlZ1XL6CPknASRwV7tK6UzKS\nleFItEIZqi5Ll41ZbE5kTnfTnkOeGv5RHGN45wv1BG61uwJP5KyeJ0+nDehX\nbUJsi9tiRs0ehS3mVExwT12lrxCTf1LGIKZHb9aW7p17HzfXs8OsW9QTcxsD\nKk+lvY09HrXjQBNH1oCCLuJzvh5Wcil2eIMfJv0n9UugqF8zHsFhNmw5LoLw\nUnKYgHQOaO2PZK1uvg9sgFmVLMKT6NLS4pkXQwvwNjSaXPOmljmHIUsY+Vn9\nakOu6Pn8WaW8Eu1M+pnnYieiCGoWG9xaNowRE7wDB8PceyyLVaZtrTP0TYjw\nvjxRaL6fjflmvRMPGIhcaO960oosZrh3gtghz1DMh8ZJPNcgQHfpi/8w9DAI\np/pR\r\n=z5UK\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.1.1","date":{"ts":1540569708687,"rel":"2 years ago"},"dist":{"integrity":"sha512-89AJf6aARXCM6FVZllyXhVvAkq/4960PeWK2VWGYL7LbqM0n3i8oVw+5DstfV/0WTRhlz66pdq/Kwx+5C/RCKA==","shasum":"1b96559b8015c06e6b7a3c5ba9c73d8e652e69d8","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.1.1.tgz","fileCount":63,"unpackedSize":226065,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0zptCRA9TVsSAnZWagAAq4oQAIZsi3kWYgni/ynalLL+\n9xYO5Z52mrTX1Ih7M1d/hz2HQM/56bbv+olGzYEG+JnOpU79zxxue8naXls8\nte+p4B30NHM0Ht9FTQlyJjCwM4krrEVmsMlBlt+KfKYKYtBiyXgtzCKU9/YB\nqyrAfvj6mEYv/PUj+pOAdja2Ue9EG0ASoPKx1Xdl+UhcBcwCK2G2LTkhLnum\nUMsodjft/DRXklEN1cQLl3JCvzJ+BgLBlExFfa+IvCeMrLyI9sOiQNOho221\n/6cAGxOqXj4gCkn+Q2B4hMu8v3O64Yxm/XWOhUwBP+hqrW8f2/1uNazyAOsl\nE/r2DItAFwpMH4ab6zc87O5BjqmrRS7hMqmmtG7O0vy3UE8rVH30NnDb/7qd\nbCb4PAjvJ/Ev3f4QRNDQdIrBwNAResuVju5E7J0HD4DRzt2m8uCyErvBlWGl\nJRG9spHegDhx4mRX0qMHZ5dPzNq1oXZVesABu7xbobVB8ylVrd+FlrzZxXOV\nRgtt3jIDtag7oupLlI9zuDTVq+2aeLiYjbG47l8NuTedvVscmNPj57oLnC8D\nH9Hr6cm6iJyAC1wZA25MFUVOrTf/D+9gTdOwPjqnKg3wSWWEWrpkrLgyHYpH\n2DDfDz2aSggEnGVu9l6nEkD37Hk211J0wgupZmZF74msP70Bj/IKHAoKlPyV\nM1bn\r\n=HgiU\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.1.0","date":{"ts":1540545763834,"rel":"2 years ago"},"dist":{"integrity":"sha512-Eak8hh1xJToj5Zs9jZkx6SW/0cEDexXvMdsCFQ+JDtNxJFdNLPBRzvCwJMG1uHheholzx62ltjg4a8wubx3vuQ==","shasum":"ad2634c9878fc4425040fab5532e219f8e0edc7e","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.1.0.tgz","fileCount":63,"unpackedSize":224521,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0tzkCRA9TVsSAnZWagAAdKwP/iHNiE77Y43uRn1sscry\nSP0cBJh4FtiYs2/Eg2iMZ/pz4PDej29sxJm3gak7G3ez0bj22GztPTiLAbr7\nZu9GcGNmjuM1qFBufSfJUyKoYKfaDeL7tt21F7dkJU/jrepsRxQSTJqvPh7d\nml5kJF7XLWFVIUC6VrXLA5RvfC5pB2Ke/tRWtchtP+ejp4Hq+eSoJW/Cp9b2\nRYh7kl7mAv3tG5o662FlIpF/7Ul7M51ihuZx/pbIFNP86ELfpnLe0T105HFI\npzyMdXpOMAKCsAyXkZMoncjMfT6+VvN3Lp2/Fre95J7TNf6Ep+fa86WxGRxI\noPSTX760sHTH/5BVhtJZZO8xKazRQsOaASQ/Wv2/4fOY1YgcZ81zxmPIuw8r\nqUrOGFQxaz2dKHz+W/tPC3yqYM1VqLXb0q1rVRZ3LUrNcSWqkDZfiMiiRclr\nt5GHaUG5dx16fXaIXyHNBHVq70ipjRgz4ncJEOlqFubXeO+KRj4SanHujAfB\n7lpgJbJGDBEbzhlDUiL5KIgs7yLtEqd6Q1uE/1xTkvUJe+IEpTDLDns+5PUT\n6yhe5igcFFt6uk6yiHctEaJ0AxBavs8ej/DrVgk0j0YygKwF6zfUOFrqfBQt\njv3d9nMqUsmubIcyFXEaU4mvE2ggs/Kad6cVS/iXR1YOCc62DZgyYkXgZ93x\ntP5I\r\n=qwI1\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"3.0.0","date":{"ts":1539470237072,"rel":"2 years ago"},"dist":{"integrity":"sha512-84utjHfQeykSyNuhO885pp18yGKYuK2S03EFbhl/BpXR9jk0TABnDP/KhUAqDjjkB43mxK2WZjJesrhnncvR9Q==","shasum":"4b72588d8a5a5c836439752fe52e8e0f4b9954df","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-3.0.0.tgz","fileCount":62,"unpackedSize":223362,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbwnOeCRA9TVsSAnZWagAAPZsP/R1IUnDfVY6vI5QOCMQ9\nQlTtePjBL7JfA3cdFcqtkTKKgCZZHPsXUPSwaUek3qky97WhjfEQKhZwcva4\n5DmUuW2VF3BiQ4Qc/YnUFTCCaBIiAobVLgM5QYz3v68xdRRxVzzj2sCKQEdR\nZHXm4iq5o7UTa/dM6V9ZmV/vE8ruQhoysyFzCK24GoQ6KxZBeD9+JHTYXbk0\n4S4w/Vk5WoX57y9bjJniVP6ROUWI77mRetgAmCTEbtnX0Rqwkist8i5M2GxF\nTudsxJXIvoU15SUPTTg7Qw+ASy7/ycuvnqBLLlkOOQ5WeAUaJukfvwdE5g3F\nuzVR5CTeTEH9f0WYqg4gc6x5zJ9iBcRsEhB6SETbpFTSKBpBvnZWD948gcck\nuu8717G+6jJZgteND1Abyi33VqAi1+RkW6/Y2P1ABJU1zYReyCwf2kaGM+Kx\nyaEwQF+r+MM7+t4SQJyZKOyAjMeoFEWvKm7zp96RTa4p858/wLFHH5MAYhXe\neLhmAtORkW2t9CPSYPh6kpWN08uLnOMC+4W2jcDHFS+elDbJk8Pteq83u73Y\nGVYZLsr6HTVKkR88sKPd58+17wRUgYMoLZMPiQtMBUpa9EwV+SdLIE8nNU3h\nd90gHjU7KWIsFIaO/ABwRRDXEXEXy3BgXwaKGkqtV3ClCBxub9yv30Y9NtWW\ngij0\r\n=yoTX\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.50.3","date":{"ts":1538051594324,"rel":"2 years ago"},"dist":{"integrity":"sha512-X+AoKVOr7Re0ko/yEXyM5SSZ0tazc6ffdIOocp2fFUlWoDt7DV0Bz99mngOkAFLOAWjqRA5jPwqUCbrx13XoxQ==","shasum":"61379d6dce1d010370acd6681740fd913d68175f","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.50.3.tgz","fileCount":62,"unpackedSize":222763,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrM4LCRA9TVsSAnZWagAAtTIP/jODcgitgo/xH9/Y2McU\nQQitx4uE7AacnG4AEXWOz1fW76jS1YYzAUOcML/wBOJtwUc0XSVrq8jvATjT\nk3iouZRp+3wrN83rzzkloDTjyiBXT4H6YpRuWirwfMYiiAA5oUW1/368BRwu\nVFzIk5N0Kd31FnxXXWNU07fUvAtu5UX29F6peyCR9fZNDlW3wWIJLWLu341C\nN17n2lOFxHttRlbDrPeoagPAtHWmPUT8HiA90uXXIP9IXZqII2FkwwDtizmV\n9I2r0/O//80iKkFjqo6bS4Aq3QMFjjTuK4DoGQhBOpPFI/2Pqd8E1q7ZKMJE\nUIk4xCRO2Pt8DIjw5nQClL71UvGqvbZLfmYGhw+i84+a2EqCrmwHI7Pk/HAa\n7C6xPtSQnxF9SglkhHongnYVgGlaMykQBP214P2+nBSAsX4oj1g/mGJfBj/j\nvLrgmABMCFT1CXBXI4+dLm8ythLIpqrbscozPuu1+PYpzIv0q4B95oAbf9So\nKJpKLlr8tyGA70ECZmf1GJokybmaTvLn+HFjTvcznYKdvTvov12hj1W/mwfZ\n02O//h6FBs87WKT/1BC+MXrAR2Qy0EzmyywS5y7DSjW7fcYXsPBwPYDMcECo\n0BsXIu+/hAzDJXxywom+YGO+QkM3i38k/J0ynTj/jqv6xfhkOylGN9wGZQ2n\nscND\r\n=D9RX\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.50.2","date":{"ts":1538034368364,"rel":"2 years ago"},"dist":{"integrity":"sha512-Ha19KwmDJP1CqKieYPNKzUK7KrUnwNRVDrqTrvW7LTRW2D+1hTR1pw9jIT0bURJdS/Hv05226dwVRK1mOQeqqw==","shasum":"7f22643415f81626461e2b1bc98028057f18ff3c","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.50.2.tgz","fileCount":62,"unpackedSize":222769,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrIrBCRA9TVsSAnZWagAAX3kP/AhZB/1TmoTcbrZro4Qc\n8fBjIA0f75aOPBsKGapb8Y0+XpZJk96xgnRWPBIUqOcqEeBXw9+lujvV9hhq\n9nq3waPXnXjQDqjzRFq/A9X8F6ZJ/jPqHdx1IlthYM/VnKpTtn9KKg1l4IDf\ngcoAd7cn7cwng7ZT2jwuhvQLHq9NyoeIPWIpS7NlaqZmjQcjMOCkvh4biE0R\n8EwW9jpZHNfuoIBYBCb8WyCsFy5VB9cesImVmY/+IWn05JpwCm6NiimdijN1\nljgpp6crlt+wmW7PjROP3QlCFN7FIjnVC5DcLCSzZw5IPtgaPMPsWWmxcCgz\nPP0veMkSaTH/06/8P0FbhCTmTAT0QObSAR9WHFQnmLpzjT2tZB5Fh483w0UG\nKBmlv8hAhh7QrYioHZm64GORGqfQOrGHcW0Ht5NtnpNbgIQjPu2hP41NHaH3\nmXILUm+8xQsXw3lxpPKT1jIOS06zvQ6tBYVNR0ghKfVrNUKL6mAJMRCV3Avc\nhy/eLV40t/yIcpUqH2+iz1DW+7jkwOybBNWUlf4pfVd28Cau8vbxoGYSsw8G\n3LomGhY5I5buThDzmdqOLlcZ8QvHlkRExtDX5vepS/RUCPfoVxAQ9i1dP2CX\ncYZr+HBg7hK19aNrjR8mJtIa99QVxi6F2vxLi68OoJ2T3N1hs0JLg+mZlA1R\nhHTp\r\n=zPMn\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.50.1","date":{"ts":1537308350696,"rel":"2 years ago"},"dist":{"integrity":"sha512-9kRxF9hfM/O6WGZcZPszOVPd2W0TLHBtceulLTsGfwMPtiCCLnCW0ssRiOOiXyqrCA20pm1iXdXm7gQeN306zQ==","shasum":"36d4c961ac8b9e9e1dc091d3fba0537dad34ae8a","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.50.1.tgz","fileCount":62,"unpackedSize":222734,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJboXa/CRA9TVsSAnZWagAA6cEP/jZhTWza+2CRi+3j0YAM\nQ0E+FYtzm+3W0gUZZ/eKlbrUUS1xvxsrXP5OPNrQZTRKIFeD8UmeUUl8rn5K\nA4fKR7F5m/pPN5rVoCB4EXd2uCvR5NoI9fI76aPbA5RirXSqTTm5uvqBj1Sr\nCNdIrCsH2wO3FPmn7Wbkll38fHATv4DeCPlN5/+nvB3XlCd8ed5nLbn9OcKm\naeZB6+AV2znEWkj7byW2fBzRmO2e1L09mtg9PoK2WU+scn1wKKWGV/bsvdHL\nPFTE98YMmUtfwIL5lUae9ghW6u0qtAee/inUrzT870DzzFdqMvyGDLMgI6+3\nZfVPFiWkK+F/09tfHf2wyQY4VoHcIlzuB5iMUE321VIqjBlNInNDYzbDXtzY\nWbXVCBSje8BNsJwYk6eqJTlr3SRgxQIzynrZfDHFgMrnll8ehTdnZxLJ0fiL\nGoI7rm4FZS6n+wIDh6fKZaasmqC22nZ2sWN457UbsmlkM2pD7XZPewGfpwkM\nP3JXdvRuolHRzkUIETP8t+1okrGdcpQbPQZUlPffikmIMXilZHAcSoGhb3Tq\nGfjytz6ttSCueHEoyADHrYhSn2AElaGtOo6mqVQjDAbnkcuL8mFtQJlrJELN\n3x5rvhZb4SV0En/OnZ+eXiH3JmU0ejakvBz34iwqDUD9qPzMVnDB4wc3jHLJ\nfta5\r\n=PuLY\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.50.0","date":{"ts":1531134661853,"rel":"2 years ago"},"dist":{"integrity":"sha512-10FnBXCp8odYcpUFXGAh+Zko7py0hUWutTd3BN/R9riukH360qNPLYPR3/xV9eu9K7OJDjJrsflBnL6RwxFnlw==","shasum":"953e262fa9b5d0fa76e178604892cf60dfb916da","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.50.0.tgz","fileCount":62,"unpackedSize":222666,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbQ0LFCRA9TVsSAnZWagAAHSMP+gOE5vJu0vi39TSlGe3k\ncK9pigxWtscQWaRB9/vFyrywZXF1JQRunAX0d4Tv3hhDd3kuBORriqlfvSuS\nL3RitmgDn4gSb72ujqKvbwb7DVY3nLSIOnJTGxrp7EocHxmVrWPnqFN0jZyo\nm3xV5KfadseUB6pgBUL69CDDL/MRhlveN30FoRq8sTcmExD4PnGqpfDu7Q6D\n3nhmjd3L45fwA9iSYKX0r5AE3DUnejJidu3eKgn5njnS462KQQQAeBxNA6ev\nIRLyItHtfClNrFvIC8+0lPCuHNFzwyJbhOTm6qhcm7/dyqsg836FMIEgp1Ea\n8jjUm8gpKHLaRX0nEjkzp6OAoKCunJHEv4cLHfYCS1ZXnfjsby8ts9CqkDfN\nwBofLMv7qwN/TedGe+HGUiHu75Rq4AHq9iRM3g4qJT3MFuX22S5u2K8/oCN6\n82l3Ez8xkETFB5Fub2D0TP8GegkNJB/LaQG2RZZbwxS9gkmQhqD3No+vmue2\nPpYdn7aSazbynVq/baujhSU5hgzm5A6l62g6cRH0kzp5KAovhEMoYj6nhsP9\nXIKLVeWR9UzI1TJKjV6/OFKnXajXH4ocpTXi0wcNZv2DxgY42JWwBENr/p6D\noqKtXBnWht4LYBBF3QYqEiFZntnt1Zp0OpXFImqtC/48wTOnunoFVSq1sU1m\nsdCR\r\n=zmy3\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.49.4","date":{"ts":1531134021276,"rel":"2 years ago"},"dist":{"integrity":"sha512-O/ak+vqnDDi9e/vqtw7Tp2nW4excxs0dvVMDb6gu+XaJOschYG9NhpctfHnlmstXAk09tWRuZCbVDG35lNdn6g==","shasum":"3879fca1977a0b76059e0e177361dd046d2f8832","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.49.4.tgz","fileCount":61,"unpackedSize":219211,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbQ0BFCRA9TVsSAnZWagAApesQAI3MoveNlpBs7synCdLJ\nmt4q4fXPnWiboK1xiFzc1WJIeP6RYSwNWEsf1IzbjGquAZsg2ITF1V/H0cAV\nhjwuEMAYY/tVQ7JxSbzQWaZshXAu1KW0NVo+2AtDyTSf4UJQr3/l6SpzSY/O\ny80teU78BRysw8d+3CqqYbOq7JywUiJd8DfBPqC4ObH0Edg071qbfV9s8cTE\nuwS+62+JyX6A+2WaxYb6tuLfcvM/oBL3d24AXj2tGxHq8Tq4qnwhR4KTu995\nT14x6eRKouwSXIiQlbi8yu/5zSZShlq1f/P6QN/coOs0y8s0sUm5cUEmAumb\nlia8ZMlhi3/xknm1kf8T+spEe3plGaeuSGO4q3nD52Ro44RJ760qVN6Hrqpi\nmidsnOJgAQqg21MrRyfWAw1tPw1WUpu4weGmfZEqksXSWnNQ4P36MjfaL3/l\nsXPxt3xfCESOtdXQotEDlql7aZowQfvL2Bju0nR75YH+HpNaiWKiktD0b1cz\n+csxW+QED+ESQXkm7NUzc0/ghqLOXS+fNj4km8D9iNJu2ehCwpaC4xrUviQL\nZEpU8Y8xCF4TFZAg6yYOe5SsSSZR3Pjy5Bk1nyf88pCc4o3a9YxRiMLQYe+z\n82vaCABGUY1+ecaXhlmw4q50Xi+Pll/cF3Wlelg0KKDlpkjaZ+SkDys9udwj\nOdX9\r\n=DuzT\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.49.3","date":{"ts":1527878806032,"rel":"2 years ago"},"dist":{"integrity":"sha512-wO0S4QbXPReKtydxbY5A0UieOaF9jBO5BMuxYPQOTa082JCpKEoC7+o3fnKsVVycwX47lvqLiUGRsWauCiA9aw==","shasum":"ccca6ee5ba2027eb3ed36bc2ec8c9a842feee841","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.49.3.tgz","fileCount":61,"unpackedSize":219176,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEZSXCRA9TVsSAnZWagAAqtMQAJUcmdr6bPJ/3aZ0xQcX\nGy4P0n5X9bpy+ZshLd+5TZn4z0EqGYAPK9jDl6Sd6Be3TCXBlYuT3wy8veYq\nChN8Gm36G5yn/sZX15ulUKhzpRkNLvXPlBiqXumPuG3Ugz98CKfAvD+PUmKw\ni9OGZh7Y6jP1/+BEwvfIXLn03SprF18VP2jGYnUtm0VbMK/XLk9IyDrJJgB2\nquwpSZIn0xclMxKRbBiJrvMWKTbnYG5D9HOTh/04Jq75iCTNvWivHHQfc3RF\n2Qgn2vQBUt98wkzKbG0EE3yTv136AYz7IG51rHGU5DMWabxp9qnfJdg7Cm82\nnjwTfys9LquQU4kYImU4RDyJGbxbfWH07fAdB5N2mI9CeZm5gIBkX/97ki9A\ns7sj1tS+ANrVRMjbkRjpZ/w4p4ipwgv/KJtJ/2rIE6USUpkFF7HpG7kTMD6C\nn+TIVL5iCJUJdPAcq6fH6BBGyWKgA77tFsIcv10nUfQrNiieYc8KXg1v9PkX\nSpKsZlD1M6gbjRc6UFiAue7F6e0Sze8pMiIdyF2ruC33OXT2VVz1PcHKdQwH\nznqnZhj4lywFEKC/iHdp9Jjn9rszNV6/atQtckha5c0VzDAJwQufuUp9tMKC\n7h5PMHOXytFah/qilSk3EQHOzFPjt56RxskkKdGKtZTUNMsqPuu1irdT3PNG\n+uQV\r\n=2vPm\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.49.2","date":{"ts":1527877301463,"rel":"2 years ago"},"dist":{"integrity":"sha512-przpVt2XCppDU3Setuuw9ssbWoHSrpl0bvyPHfs3tL/52tI9Cx5p3DsQl98JPkEvLWS3Gqf375KrJCLhRZAQ5A==","shasum":"94cd67b63a8565c47f2b83e728dd0924e2947b10","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.49.2.tgz","fileCount":61,"unpackedSize":218864,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEY63CRA9TVsSAnZWagAAle4P/2Sf6hLo/1u1O+YYifJD\nX9+uTbbxywP3kXK7OZmwrjiRmrF/oxqau/2nuLlnus0g7otpHfYFh6r5n3zv\n5OL/CIUTOn01qnLfydp1yZ/3G8w9XoerlKA4GGG6fVhI5wZf2v99N80g7dVf\nbrTK0D0B9Z+5YoY8Wk5ATMhlBVdwiSLF5DIl8nZhmbbXvsXy2e7fF9rL7LnK\n0V42n3EFoEXeEQJWXKF7wdkTdXt8YFxXZuzPVkMbdqPo+XFUx54StzgF8yDm\nPlMZXCBwDnsXeVP60JCTlkPo4Zgs5EkGlKBLc7r8oaBj/luXpG0jK6pRaRVY\nDTCPj0Yyc0dMfhFZnTfeuLsDTEgGwG4PVPSf+Wr+Y/WirDYlzex7JAWS1Ell\n7zLBKcFwfHBFAKdk7JCkPZ08w/CLT6mW54pSR2wXgm4n1IKR/kRSXwhBi92R\ngV6A2p5ENwG80YdCfP+Oxn8LR85m3lRr9CPb5lEp6lCDYESYfBqpHKxluaOl\nkQpBls37mWUm3X1oBOtGedSXjrKZxwis+r+tp8iLGPgMpscWJiBl2FHYDAA5\n4X+4Qq7O/ZyvVC+/sxbJL18CyoedJ2cwAQDQif4WC3yfWpiyF2h2aYwT3plY\nfcSCjlCtNQ5Jaq9nqAowD/C7XBu0SWXVMWkahj/+s3knz3km/1rbPa6Zs9by\n16sc\r\n=GZeb\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.49.1","date":{"ts":1527875964638,"rel":"2 years ago"},"dist":{"integrity":"sha512-6lhPOM90VcqlBKseYkuOwsjMgcLNSU/qy1jQo3UWarRBI4/qUHLGM5xpq1SHYVmeateauGigiiALXhEn17sypw==","shasum":"a8afb83be52a4ef2857919102ea8b4f4a02a88a1","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.49.1.tgz","fileCount":61,"unpackedSize":218576,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEYl+CRA9TVsSAnZWagAAuKgP/il12nrMj0D9DZw0snET\nkCc7hS+er3KFNWdIoeuSsbYf+cCRtH4BnqunTSjODkatfkr7mb9e/mzqYCdG\nPmXyxmOfNJpPuPnO+Kayk+5csuWQ458j1/uixH2hc6/TOx3qapB6AGtCboEh\nzhIObcWPyXIvFtqI4UvAouUNNO3dMToRgGHwxFUpIV+r1WUN0aLxEtvUeUfL\nka0SuWhglPODn9AFxjBD6+ObDNIDpkSXVwefGg3xFNVivqCasAHVLgrwDqaY\nYs2ctBcKCD8Z4nXuf3BZSBsV+PDxZA72AEmrl7LcjFx4lg7DFzpyOIUm8K1O\nnQglJ1MDk22SFEv/1RcnObQwTgjB73vCsl4awVpgxlbt4oBI+H+X+Sd46GuM\nQdOh8tBAJVfgr41NQ4XUP4lYJQreBjncCB68GO5aahS49WomNNpYi4JjSxCp\nj4xTwJ3mj3GmbvlXfRk+YpgtM+iexhwHMTjesfEsytAjlFJtQr1zdEbusW5l\nnplXGkwgGLa66d/FIgRx5JjwqwHQ8D2n4J0ZGstk0JqoJppE/1AeVAHTO8YI\nGBjDOzpR+R4NHBkeNWB0FxWa0MOdyL+X2jVClxBY1+eC8AQNaMTkpRQE442y\nccabyrWlwkVQQRyEXbcS8Xv0g20Qe63YJ3jwbnGol25/hDluQQo5VCfhptMR\nJQLY\r\n=5dht\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.49.0","date":{"ts":1527865949258,"rel":"2 years ago"},"dist":{"integrity":"sha512-8Q15hmPHIvNbc7kJDFiay2Ov+bkXRZ18tYKf0YUm+yMUP1LOllFgCEkiwCZ+mYdFYhMy3tOBPhsDNcGpqBDHUA==","shasum":"eee3d3c1b1bcff3c508947d5a4cebed215c43f53","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.49.0.tgz","fileCount":61,"unpackedSize":218473,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEWJeCRA9TVsSAnZWagAAhzIP/AnXrs10vyxaX4w03jq3\nHn8ymxNdw+NPOJWa5SYJx4RUYKaAq7Pvjwq8KxJjaFj7heDu55ba+y6O8NrN\np9A3GdHZ5U4LodqOpkJeR+v4+fQp6XuyGqiSzYsePldXpWYXtOYQpRyfcwHo\nRI+P9Aa8tcqeQgEQGsDw4dBPflhT9STxvYYI38nhqvwOP33fwEjvtBT7tVZz\n+7+RwJNkGmPw9rPysiyrTEotzpsditsUIZ7q+BFQHjbNavyoC0xyc3TwZ/XS\n861JRvrbOkZcEyn4Sp/hMg9/w7i7O1FWw773J1e+ce0MCeSaSYPzXQYB5yZI\nzl9pFchBIr7tFv299CqTL+mQWkSTRYGxzr3CCgEFUfCgvQQgYfcLrl40TIdZ\nTJ7fev7Sozh9aZgfPwcjsMsxcPGDUDDHHz2d9qw2bYm9rafjgOCKW607af0a\nv/lX7vpzOK+JPMw2jK+gdXl3bFq17So+4GXMzeEwTnu1SuBsWPOC+LTxM3bm\nMyZcYjIJwDgddAXvW67wBZmZoQs+8DVplRvUwlPmN5nHOx4h5zV9YMGvy8TZ\n07hvUsSk4kXworFOIHsrhMf/jPvyKwVbDNT7eQw5VLu6o+8cOaVc10wBmvIR\n8CWlqfeXahKSY/wl7fNJtl1ky6oKjeQbYd0zUg2gYnpqZmbPP69BGlKtuA+Z\nVkBI\r\n=N8Nb\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.48.0","date":{"ts":1527620776081,"rel":"2 years ago"},"dist":{"integrity":"sha512-D9zX5os88JjrIdM2eLldLYL8xJcbPIiMMT6n4fBFcAk/r6lGc+XPKOv5hpHt6OwfVrZ4TVoQAcKPyZB1hS0Ovg==","shasum":"e447dc27dcb99d68e2a705fd9c1046c32aae2ca1","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.48.0.tgz","fileCount":61,"unpackedSize":217472,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDaSqCRA9TVsSAnZWagAAg/UP/RGa3gfcsiXP7eMzNeUi\n/5MnYNxl59GJlEscEeGL1HNJfVKnDcWbdTsCXcm5I5NSK5mMcclLBA/m8li1\nNRTajGt4i8Ed9y3VJk3kaYWN0o0jB5IOx9FdaPUTNQt/0EzVqrvtn2HymAz5\n96AjhUZYzWCJk5bdgQVGCqj2Dsu+CSRE2vRMUBx4yeXmPPJopdqypt5HkQ3G\nZPrxZW7r4qJFGJLsfIAqQIcLrp6AR8azDaQs1nppF+3WxE5F8NqjEFLA3I9J\n4qeUNDiwiRWC/R6BjFyvT/UaTb4A60w1wOTR2P/93uIvA87WTyuMNeH+wU0+\nLrsWqUMsmWvVXNxREIPDcHkjiVgbWeZ1+IISR8f2pgSHF0E19N2WZKexc6OG\n8WU2XIlk68/v1GMpkyjwwGt3KsbxsVYEC6EWDRbodvkRmeOXslLzVDRCpqNv\nql/zoZE7PCKeM6h0HM9PWSfhnuFQ33IMS+miwSW7WUonG20gm9rFZUfZulrh\n6ZsKDuewzV5FQRiiBUom+i9WMGkjGikT4/zaaLRzd0rUp9kRXusALGqzijvq\nmCu/3u2mY9V+96eN+EJNnpDYIkzWyvjKfyQK/L4N9raSK7CQTlqzdmZA2MDd\nOkEoWHJZ3Rlpb0I7XnQKmC0aDOkhRBdlbRKdp/4EtKpTsOM88oqQTT4injIk\n/ubC\r\n=0Y8J\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.47.1","date":{"ts":1526985029788,"rel":"2 years ago"},"dist":{"integrity":"sha512-8PSgM3Fvnpkz5yE8MedV16cWIbXG1vgT3okqdopLEy9mH8Ok+5xce+t+K2EmYhUzEUEJTdIRQPXE/7xSLuAkKA==","shasum":"1be0d6b855dbf8f253fcf49ea3d44bf6c23ff984","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.47.1.tgz","fileCount":61,"unpackedSize":206652,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbA/FHCRA9TVsSAnZWagAAHk4QAJDAsGyKXwahzn8DvasB\n7AI81Iufz2A+rErWpO2xFBpYo0YsLkAByW5agi3vvS6FbpYDjSDZFRFt0eg0\ngDmjPm3b7TBn+49ka40HJFq+Ytps+FY7owAZBsUdPxCQeN19Zsvhj2CwKO23\nwjtts8gVrDaClpu9QChTBszSkR+zN+9TiiPTNzl3RqvIfT4OSW7GC0jy1UzR\ns/bDITtrRibAmpajFUfe9kX8jACJIdY2U3R2FCh0zIOJGVAB0WWGk35XpzD5\nm2Ii2tjzwkuAXC/1IB5urqr+7Q8EGO9lAHi+MihDqZKwM56xS4x/x1sKgljs\nkmAJSC5KE7KK8HOLYb92fE+H3NwKQzWfbxbuYTxVj9ojCPxWN/Nwjhlnltkl\ngEkQS+xpZFfLx/mlPiOfCRJR1hN/G3TwvAmygfhzoOJi2fuOAkGAVOGMS8bU\nNTrFVxElY9Fg0shRpcHxo2dJNd5xKDwMCofJsLQ2qyZi9Ol8eapmc6tgk0p8\nXxuDErsW2JlbIWm0xf3t3lyse59iNZtMQURk1VD8YrHwvS6FRpJNQI5ivEv3\ncStsr4qdMFI3ihl/WYhaHyRr2DgfuIa03GlgJBp0T94Iby3zbvC1qyeW6qcI\nhaz3OSzD+Yz3SN+ViKni91p1z+7B1CdfhwAoFMHSTlw0XIOQQa4fFbXBNluD\nMYQ6\r\n=6R+F\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.47.0","date":{"ts":1526983949805,"rel":"2 years ago"},"dist":{"integrity":"sha512-Sr6ddSIkQhZoPPz7VgrR6QYikEM0HlOqqMj43VrXUnasBbNqrhINZpQLiLYBchf4Y/aR6+kSeGyC1IcDa7Bq/g==","shasum":"75bba03f76264f3b9be5df2a17203541e183ae90","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.47.0.tgz","fileCount":61,"unpackedSize":206599,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbA+0QCRA9TVsSAnZWagAAhqwP+QAJijMn9W5FegviZH4V\n+hwPBxLrADDfd/eaX74Bw0xqSFlDzpDJl+D9wcofPU/37F5Li9W7cNM+393F\n0CoKqgVf4XWuUOcsDpGzzYFM29Ii1Nl23XuUpbw/1qqKuCtVVwy/PUGG64Hd\nL61BqQ+y51f4GtfjulAXw4BgX5gozcuQUKEu9+8DZ701szeOLa/LLn95hTUK\n+NIVpPZlJpxigtn2GumrghFH58kQxV+GxQcfS9Mk3OnYsis3W45jhGYqDu97\nNywJpf60hpIM+kgEC32MNDypU2Y7dwrxaHMGAYxWZqRBhRyezkSKPhFpY7cQ\nO0QmN0Qku9V2Ut8SrSngnTBpENZF56B2uzZxv68rgp9q1ao5bMWgPFl+MZKg\ncb/t4+s7YndGEp9Cy6Vo7KgyITox3YLBe4V/A6H8dHdCGXBmvhiezH9i9xHY\nc9HG2ietIAlOmpfrKYn57yDz1L9dxybFOrMfikORuZiIn6VsONNI7I2H3vNn\ny1jdQQzQRGJULChwpbPvXuZq7XI+UhH88QT9XfWIa+nAvNtX1zXEMhEV5cP2\nlZ6qf7grbvp0pB91YkPX1rgdtXQGcM3zco2s5QgiQcW4LU0MPDJUIVnQ+jtw\nqRZGSxA1m76xj+hQbceLYpDf2j978iMAFPkOtdrkvfzOq0lyd7Qe6dyP1pWW\nZBLA\r\n=xiPV\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.46.3","date":{"ts":1524222421596,"rel":"2 years ago"},"dist":{"integrity":"sha512-VpnNeC4E6t2E2NCw8Oveda91p8CPEaujZURC1KhHe4lBRZJla3o0DVvZu1QGXQZO1ZJ4vUmy3TCp95PqGvIZgQ==","shasum":"7e84131d87ef18b496b1810448593374860b4e8e","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.46.3.tgz","fileCount":56,"unpackedSize":201131,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2cnXCRA9TVsSAnZWagAAM6UP/AzyRtAGShf467dlONxx\nQpLc05bGRXlyVlXO7KkiUJ2w4gctm7lXb3qtHFRC3NbbzXQe57nGT30bvpNA\nKWf7CcpItbS4oZUO0Zr03XXDPi9kXPUIud8HMEkVPOVjFmLNjG/eP4ROf83e\n58yaPpDHZnfPiul2IrLmJLBYowquLK8aCX+6llSj2gQHd2hYVb5PWDST79jI\ntfvY9W38+0lHoYvfuZSg2A7R4CbAfZtudM1dfVUj1goYOjumQdCt69mksYk7\nnIrfzRtIi8w7lkK9+cN5YFrEMGFqHWRKeoGqgVdG1lodoDgkRwQTspczVdNW\nJlJVhn4QRB5J6tplP/EOS6dcPKZ1t7WoAws+vyk9ZGvx590NrhSH2kzHSqWo\n8X4l0zMiGFO/Oz7dwTVIJAtUlAiPMDYQp+oYpkULgisrcKn3KBYgvqDoaxYu\nrj53k3KGM5zehbjvwXtQmDMbf1NXn0DIEvUfyKYXaE87xHJy6zLP5O8l1BpC\nXwrCtcd06XpDGXDjNWy2x5prwphBSeppMf62b8SBycWfi1lP3wLmluV/0R8q\nIrhB45RCV9H1f18IxjOBUEUFlqZ4MseZJlWPC0+aAlNTErzrBKVGWrTwjyIH\ns0IAqIyg/OeZDTBh1/fda6nUZXhwm2+W4eKo7hXQPVpHsSVauoxX8iJ2YU2r\n/I5b\r\n=/LPo\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.46.2","date":{"ts":1523719886115,"rel":"2 years ago"},"dist":{"integrity":"sha512-gFk4TK5SLX2cWpfEgYc/a1F8E6neyDqrDEZ58rJOop/ivrSYvdf/HIJwrAW4R4l/cK9R0eBSnFAXF5mB8inT9A==","shasum":"8749fddda6f6c30d0672011151bea726765b5753","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.46.2.tgz","fileCount":56,"unpackedSize":200960,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa0h7QCRA9TVsSAnZWagAAMo0P/0c/S07CdolJsRmdYiZR\nFaWOSgw1to2sgwQ4KajNLOYX+DDGN4IFYCM83GgJQ79QTYPOLJ7sGl78kp4r\nvcj3/NxS46EKGALioD4ev6VGZXGn+4+2Y+lNDNOHJOqcHGH4ky9gsKTOijfQ\nPtKCEPqd7sw3tw+1X/B4VqjPCW3uj9OvoctcRDnggHF7oUajFkIcSpEA8Z18\nNcpZOIzPDzq1EQ62/a9CH0BcmWLQQnp8+8DSwl85MJKJviZszqpD1oka9s3q\nRu8WL1I6CHPuyF9pZ6ZFyFNuir8UyxDpxUUs8Me7BZbMgOKMxuZWxEzvEqjW\nc6gqcgQBtG/hzlpxhU4prtXpjWIYMi6+wB7Ssrrgonp9tuI+KpW0Nh/dSDBb\nkkL+KJ0MLBhTbkyP2YoM5+Ks86ZohLc0nGqnqoBZPnDTM8H6DpYfUwl3dgr8\nwkd7dtB/1lNHc5CWopzpyPNx5BhwkN10gAhHxi6HsEeNVzYLRx9EMPFrOg+o\nGjR4o21GiWgxWfyVCB9f0P5kEOy+Ula9CNjvC8IdRMBC5lFql0f4Uo03K+0k\nTdj/5+sTtZZ5qJlzAGql14YoWG4FPFRWR3VXIOjP+7iNl3jagkvvVEfU2mNR\ny+4u/0WAsquidauq/enqyrPRc1Fs6A08rxbI65APTWPToxK5fG5QnjcR0+mB\nEk4Z\r\n=JZuv\r\n-----END PGP SIGNATURE-----\r\n"}},{"version":"2.46.1","date":{"ts":1519318684621,"rel":"2 years ago"},"dist":{"integrity":"sha512-GJzxW7QwiIiW0ZA/+nY+N5TuK3es4Uei0D4xuy14dLZBYEFhM6e7c0J1u4+/iwfPqFtkr5a0oSApnSKF4U6KHw==","shasum":"c4f81d580cd89c82bc3a85a1ccf4ae3a915143a4","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.46.1.tgz","fileCount":56,"unpackedSize":200790}},{"version":"2.46.0","date":{"ts":1519255093784,"rel":"2 years ago"},"dist":{"integrity":"sha512-ku3CwwIAlzSA1/htrBliM5wxdao5py/ehvPCLymEtFG9cajMr4EfljvedOSiindaP6QFVWGU4wZcuijLzQxXBg==","shasum":"832e2f6cc75ea33a25b801b6b87f0342f372b362","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.46.0.tgz","fileCount":56,"unpackedSize":200439}},{"version":"2.45.0","date":{"ts":1518991353935,"rel":"2 years ago"},"dist":{"integrity":"sha512-oUZgzkZOrqxvQvYZnkhojo/XfMhJ4rFy+TVwHTkgh6pNCom9hEzTS9QCeDaya+XP9vUqGopyQq983ExNtg96EA==","shasum":"20d8b15d1e1e71ea4e9498e8be3fc62c0752fcbf","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.45.0.tgz","fileCount":55,"unpackedSize":198934}},{"version":"2.44.0","date":{"ts":1518523079468,"rel":"2 years ago"},"dist":{"integrity":"sha512-JYsr1qUItB7SnywR9OD0Qhe+azzbywmnat8s6fTSHvVbqRewQUw2y2c3b54Sbb4oQkLBDZG6ixXPLULCKnBkKg==","shasum":"c0610d0018801e1fbe1eaec1c2174de1338ab4ee","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.44.0.tgz","fileCount":54,"unpackedSize":195423}},{"version":"2.43.0","date":{"ts":1518180716136,"rel":"2 years ago"},"dist":{"integrity":"sha512-gFlHd3b6L28Mm8nbNoK6YtWgJ6STngf8GY3RA5DfeUYU3mRYJcHZ4c70bsBoERnCZy+nGHyus+aJ4jkimSnu5g==","shasum":"47cdac5f01cda53f1c3e8477f0c83fee66a1606e","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.43.0.tgz","fileCount":53,"unpackedSize":194664}},{"version":"2.42.0","date":{"ts":1516882773723,"rel":"2 years ago"},"dist":{"integrity":"sha512-VEc98dFdgKLwTf3iIIhI2eC6UtZriBTqLVlM+FtmF/+gzkvmowPICOjkQAhErTITYsgajvf8SBZP85M7VGvoQA==","shasum":"7fcc98df4ed9482a22ac10ba4ca48d649c4c733a","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.42.0.tgz"}},{"version":"2.41.1","date":{"ts":1516794164005,"rel":"2 years ago"},"dist":{"integrity":"sha512-+smhNQriVq72oe7pbTi2A0nJJG/3EW3P52Nrd+29TgayOlA/rFHKbvGTfuCpcX5vkYaBx5KeXMoEf2gGFexY5g==","shasum":"0996e1ea1d501dfc945802453a304ae9e8098b78","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.41.1.tgz"}},{"version":"2.41.0","date":{"ts":1515255594371,"rel":"2 years ago"},"dist":{"integrity":"sha512-M5X6qu/zvvXQ7flXp9plyBRlNRMQGNl3c+kQmox+m/jpnCZt0txgauxcrBKAVa9LKE/hBnsItJ9BojdmkefAkA==","shasum":"fd5221c60ba917c059d7ef69686a99cca09fd871","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.41.0.tgz"}},{"version":"2.40.1","date":{"ts":1513000985518,"rel":"3 years ago"},"dist":{"integrity":"sha512-0EBDPR3/iguDQin7nb5WMT1ZWYB95eNllY+oiFZjvLa1oqE0BGO6ZSFnMdNE9HEkajB6Cw850PRIBbp+O+EzYQ==","shasum":"f78a8e6a4cc6da831dd541eb61e803ff0279b796","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.40.1.tgz"}},{"version":"2.40.0","date":{"ts":1512970314975,"rel":"3 years ago"},"dist":{"integrity":"sha512-C332/xT6d0l6dBMjw+RMrwiGUG7LGfHaa/OgOWhowVHEskpKB/xYmNajWI2mvCvIeWVYHwKArriX4njrgsSWRA==","shasum":"672c09582e551f1ab3cf3d6fedd64895fddc0013","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.40.0.tgz"}},{"version":"2.39.1","date":{"ts":1507318214606,"rel":"3 years ago"},"dist":{"integrity":"sha512-RiQv+7Z9QDJuzt+NO8sYgkLGT+h+WeCrxP7y8lI7wpU41x3x/2o3PGtHk9ck8QnA9/mlbNcy/hG0eKvmd7npaA==","shasum":"b5624622a0388bcd969f4351131232dcb9649cd5","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.39.1.tgz"}},{"version":"2.39.0","date":{"ts":1507276652933,"rel":"3 years ago"},"dist":{"integrity":"sha512-o7NHO3DPRx2CI0lJKIkt7ClmZ7r08mTRnVXNIMaHH0N2mu33mMRZWQN9zq61Gl/dpdw75gbZDr0zrEdZXPMcFw==","shasum":"40d14d8799717d3fc90658ceb6fc2b6cdf2a5531","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.39.0.tgz"}},{"version":"2.38.0","date":{"ts":1507192884607,"rel":"3 years ago"},"dist":{"integrity":"sha512-bxde09/khzLyKLO1Mu4Mm2MpHURG2Ml2W5YbgGnD8sNJmukDT8MWARvo4ftIQ3HEnIWcZqNWAp5uF2dmrg9kMw==","shasum":"9134849d6f92e434a9adca0215b6b9f49a3b24d7","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.38.0.tgz"}},{"version":"2.37.0","date":{"ts":1506689555434,"rel":"3 years ago"},"dist":{"integrity":"sha512-S/CzpUkeFzCkuUhTb2YeZqOLlLIysGixZPcWBN8CeIcxC9S3/Av5fsiohAD8uSoeDNSdF9mVsCsCRdP+Yxs1AA==","shasum":"2b09694deea6efdd8354eccd328db134b2d8b6d5","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.37.0.tgz"}},{"version":"2.36.0","date":{"ts":1506329938080,"rel":"3 years ago"},"dist":{"integrity":"sha512-f127/0KsOXlsszisFoBLTHp4eWrqPPHEExfn2O+wHr4LHRMoC17H4/Yvutk0Tbs3LZvhB/4chujAbchMb9yQnQ==","shasum":"ec21cf685dc270c2b24a99bdba1a57999c1040ec","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.36.0.tgz"}},{"version":"2.35.1","date":{"ts":1504279160294,"rel":"3 years ago"},"dist":{"integrity":"sha512-YTCeVsMOi3ga8PJjdAV97FaTNXNknzrO+4ZDMHJN65i4uMjL5KgfgQZpyVsBirWOfgXMKRduxpsyM64K/0LbXw==","shasum":"9ad98181b467a3645fbd2a8d430393cc17a4ea63","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.35.1.tgz"}},{"version":"2.35.0","date":{"ts":1499775664045,"rel":"3 years ago"},"dist":{"integrity":"sha512-zjXGjOsHds8b84C0Ad3VViKh+sUA9PeXKHwPRlSLwwSX0v1iUJf/6IX7wxc+w2T2tnDH8PT6B/YgtcEuNI3ssA==","shasum":"d17494f0ae8b727c632d8b9d4b4a848e7e0c04af","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.35.0.tgz"}},{"version":"2.34.1","date":{"ts":1498684790021,"rel":"3 years ago"},"dist":{"integrity":"sha512-xwXpTW7Xv+wfuQdfPILmFl9HWBdWbDjE1aZWWQ4EgCpQtMzymEkDQfyD1ME0VA8C0HTXV7cufypQRvLi+Hk/og==","shasum":"ea109175645b05d37baeac53b9b65066d79b9446","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.34.1.tgz"}},{"version":"2.34.0","date":{"ts":1496157585767,"rel":"3 years ago"},"dist":{"shasum":"b9875f314652e5081623c9d2b18a346bbb759c09","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.34.0.tgz"}},{"version":"2.33.0","date":{"ts":1494759112638,"rel":"3 years ago"},"dist":{"shasum":"b2783814ed2ddcf729953b8f65ff73c90cabee4b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.33.0.tgz"}},{"version":"2.32.1","date":{"ts":1492612316211,"rel":"3 years ago"},"dist":{"shasum":"bbee185dedf97e5f63ec975cdcddd199bd2a2501","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.32.1.tgz"}},{"version":"2.32.0","date":{"ts":1492610593433,"rel":"3 years ago"},"dist":{"shasum":"e5669d81acac828ea021a1496a31116b88dd0435","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.32.0.tgz"}},{"version":"2.31.0","date":{"ts":1492535900262,"rel":"3 years ago"},"dist":{"shasum":"c575f7f5f4a8f0b74bd7339c81c4efbe1dd007fb","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.31.0.tgz"}},{"version":"2.30.4","date":{"ts":1490111025650,"rel":"3 years ago"},"dist":{"shasum":"771d6bb4578ab8598e9c58018fea2e1a22946249","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.30.4.tgz"}},{"version":"2.30.3","date":{"ts":1488902938048,"rel":"3 years ago"},"dist":{"shasum":"57835d2c0ed388da7a2725803ec32af2f437c301","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.30.3.tgz"}},{"version":"2.30.2","date":{"ts":1488834248918,"rel":"3 years ago"},"dist":{"shasum":"110dce1903e34530bbe249f8071a7aab9612b5a7","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.30.2.tgz"}},{"version":"2.30.1","date":{"ts":1488833760205,"rel":"3 years ago"},"dist":{"shasum":"1286f619a8cc5539d3a1d0f3310e3f4a09b50195","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.30.1.tgz"}},{"version":"2.30.0","date":{"ts":1484497425268,"rel":"3 years ago"},"dist":{"shasum":"3054a265f9c8afe3046c3d41b72d32a736f9b4ae","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.30.0.tgz"}},{"version":"2.29.2","date":{"ts":1483012945701,"rel":"3 years ago"},"dist":{"shasum":"91b4fde0400c4c37ca4440b43bdbc95fc405bea9","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.29.2.tgz"}},{"version":"2.29.1","date":{"ts":1480613594161,"rel":"4 years ago"},"dist":{"shasum":"74cc5603ff0baff6e224482bbd17406b0980f6c3","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.29.1.tgz"}},{"version":"2.29.0","date":{"ts":1480542023469,"rel":"4 years ago"},"dist":{"shasum":"bedfc346d582710adfedea6ac098dfd8174afff5","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.29.0.tgz"}},{"version":"2.28.2","date":{"ts":1480248723517,"rel":"4 years ago"},"dist":{"shasum":"2430ac1bf434db878e16cfde454f64b13896317b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.28.2.tgz"}},{"version":"2.28.1","date":{"ts":1480247911194,"rel":"4 years ago"},"dist":{"shasum":"cfef025bd00b613b51f846dcbab19b1290ad50d7","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.28.1.tgz"}},{"version":"2.28.0","date":{"ts":1480247308564,"rel":"4 years ago"},"dist":{"shasum":"9ce1f5c9d0def9ef77b7bfd782e71ee38ec64bf9","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.28.0.tgz"}},{"version":"2.27.1","date":{"ts":1480247181416,"rel":"4 years ago"},"dist":{"shasum":"b05834e6f511d54dbdf1b535d2ff6e8700979291","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.27.1.tgz"}},{"version":"2.27.0","date":{"ts":1480246939520,"rel":"4 years ago"},"dist":{"shasum":"f371e4438fe975f27b257e58ab7d19547ed7cb72","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.27.0.tgz"}},{"version":"2.26.1","date":{"ts":1480246420789,"rel":"4 years ago"},"dist":{"shasum":"451289becee312cb74a772471c989f5b9eb3ba9f","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.26.1.tgz"}},{"version":"2.26.0","date":{"ts":1480246014901,"rel":"4 years ago"},"dist":{"shasum":"9c56f9c73498c259e5cd793f99a01eb68bb7b806","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.26.0.tgz"}},{"version":"2.25.0","date":{"ts":1477433010812,"rel":"4 years ago"},"dist":{"shasum":"c462521ab20ce3d8db819f10ad3c9f1bc7f3f819","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.25.0.tgz"}},{"version":"2.24.0","date":{"ts":1477423807840,"rel":"4 years ago"},"dist":{"shasum":"70c81fb7f5cc903124d720f07b8a05dc1c7203d7","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.24.0.tgz"}},{"version":"2.23.1","date":{"ts":1477412526206,"rel":"4 years ago"},"dist":{"shasum":"40d333a582c55428a9a0b1722fbed7b1f0e6f1a0","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.23.1.tgz"}},{"version":"2.23.0","date":{"ts":1477336012003,"rel":"4 years ago"},"dist":{"shasum":"e6c5ce5770743cb0653da30ca082cbfaa4c61574","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.23.0.tgz"}},{"version":"2.22.0","date":{"ts":1477327387617,"rel":"4 years ago"},"dist":{"shasum":"1afbfc58643b5da936682b0888a10301b59781c0","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.22.0.tgz"}},{"version":"2.21.0","date":{"ts":1477131357846,"rel":"4 years ago"},"dist":{"shasum":"a47e85abcdd181d37a336054bd552149ae387d9c","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.21.0.tgz"}},{"version":"2.20.0","date":{"ts":1475785135873,"rel":"4 years ago"},"dist":{"shasum":"69b90576174ee6a305362c777720825e7db9464b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.20.0.tgz"}},{"version":"2.19.0","date":{"ts":1474407563168,"rel":"4 years ago"},"dist":{"shasum":"c4a8e9387cebbbe45deecd7c067ffb47ed99385a","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.19.0.tgz"}},{"version":"2.18.2","date":{"ts":1474231452561,"rel":"4 years ago"},"dist":{"shasum":"bd8142f783204cf0bba6030951ac3faa51d06436","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.18.2.tgz"}},{"version":"2.18.1","date":{"ts":1473937579563,"rel":"4 years ago"},"dist":{"shasum":"f027524c58b90d27a0544e74c082fba070afd9c8","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.18.1.tgz"}},{"version":"2.18.0","date":{"ts":1473936557433,"rel":"4 years ago"},"dist":{"shasum":"c26a73f59c47ba7c94f5b210b227fffeae336912","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.18.0.tgz"}},{"version":"2.17.1","date":{"ts":1473713405265,"rel":"4 years ago"},"dist":{"shasum":"f1c6b9609d751466bf0765d8afdd4f93d988de3d","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.17.1.tgz"}},{"version":"2.17.0","date":{"ts":1473709473212,"rel":"4 years ago"},"dist":{"shasum":"e841d66166beefd9af04cfb681fe4f8cd78cf1a5","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.17.0.tgz"}},{"version":"2.16.1","date":{"ts":1473422469108,"rel":"4 years ago"},"dist":{"shasum":"f81875882b825d6d0fe3a55b2eea6c892e84902f","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.16.1.tgz"}},{"version":"2.16.0","date":{"ts":1473284182998,"rel":"4 years ago"},"dist":{"shasum":"37512eaf9d58e04e7a200c0ae7a17604c19a1c52","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.16.0.tgz"}},{"version":"2.15.0","date":{"ts":1473103453023,"rel":"4 years ago"},"dist":{"shasum":"408458aa399ab9712e66317fafc2530912b473a7","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.15.0.tgz"}},{"version":"2.14.3","date":{"ts":1473068567988,"rel":"4 years ago"},"dist":{"shasum":"f133b2f6f9bc8c8fcdb4336691b20ea6c75a9c90","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.14.3.tgz"}},{"version":"2.14.2","date":{"ts":1473067775219,"rel":"4 years ago"},"dist":{"shasum":"16945b2db3928da8769d92433e55e2a1493d1a82","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.14.2.tgz"}},{"version":"2.14.0","date":{"ts":1473064357230,"rel":"4 years ago"},"dist":{"shasum":"ca7e8cb278a979397f450f3c4d8d34a3e4bba9db","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.14.0.tgz"}},{"version":"2.11.4","date":{"ts":1472164884153,"rel":"4 years ago"},"dist":{"shasum":"78878df0bcd147c0d1888d05ed005177a5b2f176","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.11.4.tgz"}},{"version":"2.11.1","date":{"ts":1471900009299,"rel":"4 years ago"},"dist":{"shasum":"89f43ffaafc509b583739d5532022ec7d6bc55a1","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.11.1.tgz"}},{"version":"2.11.0","date":{"ts":1471705599609,"rel":"4 years ago"},"dist":{"shasum":"a4bb7039f4b8719521b6f68fcef12e3e11e09bcb","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.11.0.tgz"}},{"version":"2.10.0","date":{"ts":1471705415958,"rel":"4 years ago"},"dist":{"shasum":"00b03425c04f179eb1aabe79a349a9532e8b7fe0","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.10.0.tgz"}},{"version":"2.9.0","date":{"ts":1471694313617,"rel":"4 years ago"},"dist":{"shasum":"2c1ad6ffe37ad51a532ebf9ffe1da55f97fdd6a4","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.9.0.tgz"}},{"version":"2.8.0","date":{"ts":1471681156404,"rel":"4 years ago"},"dist":{"shasum":"ce49a4c26f58620116589ee9f5601a46c9128cdb","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.8.0.tgz"}},{"version":"2.7.2","date":{"ts":1471644219525,"rel":"4 years ago"},"dist":{"shasum":"acd0841fd2c55f86b69f54ce93234d0bd87894a9","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.7.2.tgz"}},{"version":"2.7.1","date":{"ts":1471396979339,"rel":"4 years ago"},"dist":{"shasum":"0fb39d776a3504a99a18be4b7c7df3334b907d05","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.7.1.tgz"}},{"version":"2.7.0","date":{"ts":1471201815467,"rel":"4 years ago"},"dist":{"shasum":"0d94aae7fb04898b9a2141f2c8907a97d57e814d","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.7.0.tgz"}},{"version":"2.6.4","date":{"ts":1470995312214,"rel":"4 years ago"},"dist":{"shasum":"d5642407d9716656e97986ec96b54a66c09cb192","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.6.4.tgz"}},{"version":"2.6.3","date":{"ts":1470923038838,"rel":"4 years ago"},"dist":{"shasum":"4d84306103b501f711c0bc93060c548d4e6cd0c1","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.6.3.tgz"}},{"version":"2.6.1","date":{"ts":1470816697835,"rel":"4 years ago"},"dist":{"shasum":"572a1f34a3acb1a9f27a226a3a88467f395349f9","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.6.1.tgz"}},{"version":"2.4.1","date":{"ts":1470738935822,"rel":"4 years ago"},"dist":{"shasum":"f66c6a8fee7525a675b30fe8aa88ed11d85d9bf0","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.4.1.tgz"}},{"version":"2.4.0","date":{"ts":1469631574733,"rel":"4 years ago"},"dist":{"shasum":"45189c7886d5a1ec6131bbcda981275c6054a7cd","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.4.0.tgz"}},{"version":"2.3.1","date":{"ts":1468491912058,"rel":"4 years ago"},"dist":{"shasum":"f44c963f82e36dac2593c42a9614da05fca57d12","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.3.1.tgz"}},{"version":"2.3.0","date":{"ts":1466968741799,"rel":"4 years ago"},"dist":{"shasum":"c1282360f8db6b0b8e28d42c6781890af977e3e6","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.3.0.tgz"}},{"version":"2.2.7","date":{"ts":1461269519859,"rel":"4 years ago"},"dist":{"shasum":"6e489daeb1afa8730eaa4fb677847e7a7ec6b6b7","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.2.7.tgz"}},{"version":"2.2.6","date":{"ts":1460137791816,"rel":"4 years ago"},"dist":{"shasum":"e0d31b0f4b32890acc851fd44bbed5e4d7e8401e","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.2.6.tgz"}},{"version":"2.2.5","date":{"ts":1460122494538,"rel":"4 years ago"},"dist":{"shasum":"6e8f6c7297b032678ea10acce927ec407e1da468","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.2.5.tgz"}},{"version":"2.2.4","date":{"ts":1460108563126,"rel":"4 years ago"},"dist":{"shasum":"b0b7927ba681a742195714b6dbb5bdc645153ebb","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.2.4.tgz"}},{"version":"2.2.3","date":{"ts":1460108523921,"rel":"4 years ago"},"dist":{"shasum":"de11cd27f101029c22702fec7d9d5c06b65fdd83","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.2.3.tgz"}},{"version":"2.2.2","date":{"ts":1458644573211,"rel":"4 years ago"},"dist":{"shasum":"ea0e719bfa71db2b5db8819769950b070e216bb2","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.2.2.tgz"}},{"version":"2.2.1","date":{"ts":1458492307968,"rel":"4 years ago"},"dist":{"shasum":"714178bee5e82af9f0ac7a9e2b2af4984fe9ba7b","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.2.1.tgz"}},{"version":"2.2.0","date":{"ts":1458392731826,"rel":"4 years ago"},"dist":{"shasum":"dac8d1836b45727f227d540619857eb568d5c8a1","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.2.0.tgz"}},{"version":"2.1.2","date":{"ts":1457387006520,"rel":"4 years ago"},"dist":{"shasum":"769be14144950324d6429f2c597543a7ede74e21","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.1.2.tgz"}},{"version":"2.1.1","date":{"ts":1457386375402,"rel":"4 years ago"},"dist":{"shasum":"19e6223a33a55cb86a8e2e7571e733eac1d789ec","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.1.1.tgz"}},{"version":"2.1.0","date":{"ts":1456247738927,"rel":"4 years ago"},"dist":{"shasum":"df12bc4329516fc7006f67c5eaac3fae075666b2","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.1.0.tgz"}},{"version":"2.0.1","date":{"ts":1456161966060,"rel":"4 years ago"},"dist":{"shasum":"45be0483dc1b498199557466f980a3e6f5d65a7a","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.0.1.tgz"}},{"version":"2.0.0","date":{"ts":1456148124827,"rel":"4 years ago"},"dist":{"shasum":"793f30c5f4d225fc973e9be5c638665324307eab","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.0.0.tgz"}},{"version":"1.0.0","date":{"ts":1435820299460,"rel":"5 years ago"},"dist":{"shasum":"ed34d59c7619134e6d6ca3f899a99e7fa0e91d6c","tarball":"https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-1.0.0.tgz"}}],"deprecations":[]},"package":"eslint-plugin-flowtype","isStarred":false,"packageVersion":{"author":{"name":"Gajus Kuizinas","avatars":{"small":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"gajus@gajus.com"},"description":"Flowtype linting rules for ESLint.","homepage":"https://github.com/gajus/eslint-plugin-flowtype#readme","repository":"https://github.com/gajus/eslint-plugin-flowtype","keywords":["eslint","plugin","flowtype"],"dependencies":{"lodash":"^4.17.15","string-natural-compare":"^3.0.1"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","@babel/node":"^7.8.7","@babel/plugin-proposal-object-rest-spread":"^7.9.6","@babel/preset-env":"^7.9.6","@babel/register":"^7.9.0","ajv":"^6.12.2","babel-eslint":"^10.1.0","babel-plugin-add-module-exports":"^1.0.2","chai":"^4.2.0","eclint":"^2.8.1","eslint":"^7.1.0","eslint-config-canonical":"^20.0.4","gitdown":"^3.1.3","glob":"^7.1.6","husky":"^4.2.5","jsonlint":"^1.6.3","mocha":"^7.2.0","rimraf":"^3.0.2","semantic-release":"^17.0.8"},"maintainers":[{"name":"gajus","avatars":{"small":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=50\u0026default=retro","medium":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=100\u0026default=retro","large":"https://s.gravatar.com/avatar/74a5bd659b3a8af09a336a932eebe3b1?size=496\u0026default=retro"},"created":{"ts":null,"rel":"Invalid date"},"email":"gajus@gajus.com"}],"name":"eslint-plugin-flowtype","license":"BSD-3-Clause","version":"5.1.3","versions":[],"deprecations":[]},"private":false,"ghapi":"https://api.github.com/repos/gajus/eslint-plugin-flowtype","files":{"noContentCode":"NOORG"}},"chunks":{"commons":["commons.429f3059e540b2c7cc49.js","commons.429f3059e540b2c7cc49.js.map"],"styles":["styles.8ea0c2fab78a753ab019.css","minicssextractbug.ca74408b353c740d5d0c.js","styles.8ea0c2fab78a753ab019.css.map","minicssextractbug.ca74408b353c740d5d0c.js.map"],"advisories/detail":["advisories/detail.0132958db6d18c0e6e01.js","advisories/detail.0132958db6d18c0e6e01.js.map"],"advisories/list":["advisories/list.3290ddc4e23207bdb4b4.js","advisories/list.3290ddc4e23207bdb4b4.js.map"],"advisories/report":["advisories/report.b064331d619988111965.js","advisories/report.b064331d619988111965.js.map"],"advisories/versions":["advisories/versions.d67b64d44aaa6fc39045.js","advisories/versions.d67b64d44aaa6fc39045.js.map"],"auth/cli":["auth/cli.1d16c91afb0c4e0635f2.js","auth/cli.1d16c91afb0c4e0635f2.js.map"],"auth/common-passwords":["auth/common-passwords.436ae493e0cbdc0c6db1.js","auth/common-passwords.436ae493e0cbdc0c6db1.js.map"],"auth/escalate":["auth/escalate.77815e32a3160e2cc4f8.js","auth/escalate.77815e32a3160e2cc4f8.js.map"],"auth/forgot":["auth/forgot.ca1f1907a0dafb38be4e.js","auth/forgot.ca1f1907a0dafb38be4e.js.map"],"auth/forgot-sent":["auth/forgot-sent.ad98b7e97894a93df025.js","auth/forgot-sent.ad98b7e97894a93df025.js.map"],"auth/forgot-sent-anonymized":["auth/forgot-sent-anonymized.4497c80cd62374748250.js","auth/forgot-sent-anonymized.4497c80cd62374748250.js.map"],"auth/invite-signup":["auth/invite-signup.ac5f299fece9e43e617b.js","auth/invite-signup.ac5f299fece9e43e617b.js.map"],"auth/login":["auth/login.7c1f7c0107ad04fd59ed.js","auth/login.7c1f7c0107ad04fd59ed.js.map"],"auth/otp":["auth/otp.48bbad1a86ecd76e44cc.js","auth/otp.48bbad1a86ecd76e44cc.js.map"],"auth/reset-password":["auth/reset-password.fc1738c87ab5c3ef247d.js","auth/reset-password.fc1738c87ab5c3ef247d.js.map"],"auth/signup":["auth/signup.b40074058b4e707ea227.js","auth/signup.b40074058b4e707ea227.js.map"],"auth/sso-signup":["auth/sso-signup.0b7610c6ef4dda2ec44c.js","auth/sso-signup.0b7610c6ef4dda2ec44c.js.map"],"billing/detail":["billing/detail.f8e9ee9a27affb78dfc3.js","billing/detail.f8e9ee9a27affb78dfc3.js.map"],"billing/downgrade":["billing/downgrade.53230b3ff30717d1a4b7.js","billing/downgrade.53230b3ff30717d1a4b7.js.map"],"billing/upgrade":["billing/upgrade.6b87dc282722783c2cdf.js","billing/upgrade.6b87dc282722783c2cdf.js.map"],"contact/contact":["contact/contact.af3dd468f54370ffc937.js","contact/contact.af3dd468f54370ffc937.js.map"],"debug/badstatus":["debug/badstatus.b25763c32e9962e75983.js","debug/badstatus.b25763c32e9962e75983.js.map"],"debug/detail":["debug/detail.fa739fbd6bffd23fdec4.js","debug/detail.fa739fbd6bffd23fdec4.js.map"],"debug/failcomponent":["debug/failcomponent.64ec10ea7c542e7d5643.js","debug/failcomponent.64ec10ea7c542e7d5643.js.map"],"egg/egg":["egg/egg.79edc258ae578ab94361.js","egg/egg.79edc258ae578ab94361.js.map"],"enterprise/complete":["enterprise/complete.7d2a0a50838c3cf4c282.js","enterprise/complete.7d2a0a50838c3cf4c282.js.map"],"enterprise/license-paid":["enterprise/license-paid.263c8eefe4a649aa3178.js","enterprise/license-paid.263c8eefe4a649aa3178.js.map"],"enterprise/license-purchase":["enterprise/license-purchase.b680ce084f4e43676354.js","enterprise/license-purchase.b680ce084f4e43676354.js.map"],"enterprise/on-site-buy-now":["enterprise/on-site-buy-now.2dcfd4982a9280c07332.js","enterprise/on-site-buy-now.2dcfd4982a9280c07332.js.map"],"enterprise/on-site-contact-confirmation":["enterprise/on-site-contact-confirmation.1acc1b1075cb9137ec4a.js","enterprise/on-site-contact-confirmation.1acc1b1075cb9137ec4a.js.map"],"enterprise/on-site-trial":["enterprise/on-site-trial.bb39b9fe336832948cad.js","enterprise/on-site-trial.bb39b9fe336832948cad.js.map"],"enterprise/orgs-terms":["enterprise/orgs-terms.ec9d8eb743ba7ee1d6f2.js","enterprise/orgs-terms.ec9d8eb743ba7ee1d6f2.js.map"],"enterprise/signup-confirmation":["enterprise/signup-confirmation.e9a47426323eb52f1bf3.js","enterprise/signup-confirmation.e9a47426323eb52f1bf3.js.map"],"errors/not-found":["errors/not-found.97bd5716ece086aaad31.js","errors/not-found.97bd5716ece086aaad31.js.map"],"errors/server":["errors/server.fbdccd9b2cccc09eac2a.js","errors/server.fbdccd9b2cccc09eac2a.js.map"],"errors/template":["errors/template.8ffbdf0311437fe50302.js","errors/template.8ffbdf0311437fe50302.js.map"],"flatpage/flatpage":["flatpage/flatpage.5974d2428c425547961c.js","flatpage/flatpage.5974d2428c425547961c.js.map"],"homepage/homepage":["homepage/homepage.7d324375879de472ca8b.js","homepage/homepage.7d324375879de472ca8b.js.map"],"homepage/homepage-logged-in":["homepage/homepage-logged-in.3f80425d936ee6f3087e.js","homepage/homepage-logged-in.3f80425d936ee6f3087e.js.map"],"npme/invite":["npme/invite.e7776f7993d32a9dcab6.js","npme/invite.e7776f7993d32a9dcab6.js.map"],"npme/invites":["npme/invites.189a31a0dedc3e8e0147.js","npme/invites.189a31a0dedc3e8e0147.js.map"],"npme/login":["npme/login.6da65eb556a96fab728a.js","npme/login.6da65eb556a96fab728a.js.map"],"npme/overrides/components/tutorials/creating-org":["npme/overrides/components/tutorials/creating-org.5ba2f5f246e7e935d5b1.js","npme/overrides/components/tutorials/creating-org.5ba2f5f246e7e935d5b1.js.map"],"npme/overrides/components/tutorials/default-registry":["npme/overrides/components/tutorials/default-registry.7a6a34d4866fa0f2a920.js","npme/overrides/components/tutorials/default-registry.7a6a34d4866fa0f2a920.js.map"],"npme/overrides/components/tutorials/installing-package":["npme/overrides/components/tutorials/installing-package.d8774ff2ee7dca298875.js","npme/overrides/components/tutorials/installing-package.d8774ff2ee7dca298875.js.map"],"npme/overrides/components/tutorials/publishing-package":["npme/overrides/components/tutorials/publishing-package.d0ea8e384d063b47f66d.js","npme/overrides/components/tutorials/publishing-package.d0ea8e384d063b47f66d.js.map"],"npme/overrides/components/tutorials/tabs":["npme/overrides/components/tutorials/tabs.7673682b6d66d0b1de5a.js","npme/overrides/components/tutorials/tabs.7673682b6d66d0b1de5a.js.map"],"npme/overrides/homepage":["npme/overrides/homepage.8ff91fccaa8e023bb039.js","npme/overrides/homepage.8ff91fccaa8e023bb039.js.map"],"npme/overrides/orgs/create":["npme/overrides/orgs/create.d9ead4893c30a8601ad0.js","npme/overrides/orgs/create.d9ead4893c30a8601ad0.js.map"],"npme/settings":["npme/settings.06a67d4f7c8a71721d95.js","npme/settings.06a67d4f7c8a71721d95.js.map"],"npme/setup":["npme/setup.c12d71f6b9ecbff6f38c.js","npme/setup.c12d71f6b9ecbff6f38c.js.map"],"npme/sso-config":["npme/sso-config.e84454b27e4a552c01af.js","npme/sso-config.e84454b27e4a552c01af.js.map"],"npme/users":["npme/users.42d3195bd5c2a6022750.js","npme/users.42d3195bd5c2a6022750.js.map"],"orgs/create":["orgs/create.171bca2ded58b4e14c5e.js","orgs/create.171bca2ded58b4e14c5e.js.map"],"orgs/detail":["orgs/detail.8fa815fcb0c41c9987f1.js","orgs/detail.8fa815fcb0c41c9987f1.js.map"],"orgs/invite":["orgs/invite.28f8cd75195b676071fb.js","orgs/invite.28f8cd75195b676071fb.js.map"],"orgs/upgrade":["orgs/upgrade.5235274d83feb44fbb07.js","orgs/upgrade.5235274d83feb44fbb07.js.map"],"package-list/dependents-list":["package-list/dependents-list.e9a601eeb2b555f452c3.js","package-list/dependents-list.e9a601eeb2b555f452c3.js.map"],"package-list/most-depended":["package-list/most-depended.6e1ab19ed1908586a5c9.js","package-list/most-depended.6e1ab19ed1908586a5c9.js.map"],"package-list/recently-updated":["package-list/recently-updated.69c946c7f737f0f0dc65.js","package-list/recently-updated.69c946c7f737f0f0dc65.js.map"],"package/package":["package/package.be8e9b4834418a2b9c38.js","package/package.be8e9b4834418a2b9c38.js.map"],"profile/profile":["profile/profile.b2109d4d3217b9406608.js","profile/profile.b2109d4d3217b9406608.js.map"],"search/search":["search/search.e995fcdd89068743db8c.js","search/search.e995fcdd89068743db8c.js.map"],"settings/change-password":["settings/change-password.78b06f67ff5dfb6a8879.js","settings/change-password.78b06f67ff5dfb6a8879.js.map"],"settings/email":["settings/email.ed51dd0d469cd05a95ca.js","settings/email.ed51dd0d469cd05a95ca.js.map"],"settings/memberships":["settings/memberships.61f459f4849c34f3c46a.js","settings/memberships.61f459f4849c34f3c46a.js.map"],"settings/packages":["settings/packages.dddbfb89bd1f7b383751.js","settings/packages.dddbfb89bd1f7b383751.js.map"],"settings/profile":["settings/profile.6d519ddcacdea976fdd5.js","settings/profile.6d519ddcacdea976fdd5.js.map"],"teams/create":["teams/create.e41bb7c3fe29b31b6fe2.js","teams/create.e41bb7c3fe29b31b6fe2.js.map"],"teams/detail":["teams/detail.aa21f1c0cff81d5a9737.js","teams/detail.aa21f1c0cff81d5a9737.js.map"],"teams/list":["teams/list.1d56429a8e3585a8f589.js","teams/list.1d56429a8e3585a8f589.js.map"],"teams/packages":["teams/packages.981aa0592e10d82567c5.js","teams/packages.981aa0592e10d82567c5.js.map"],"teams/users":["teams/users.3d3acaef1bfbaa0cee70.js","teams/users.3d3acaef1bfbaa0cee70.js.map"],"tfa/enable":["tfa/enable.4c2e2bc3ec4f1f9e4ef9.js","tfa/enable.4c2e2bc3ec4f1f9e4ef9.js.map"],"tfa/showTFAQRCode":["tfa/showTFAQRCode.050331203dfe9f0ebf60.js","tfa/showTFAQRCode.050331203dfe9f0ebf60.js.map"],"tfa/showTFASuccess":["tfa/showTFASuccess.d9ce251323915d5333d3.js","tfa/showTFASuccess.d9ce251323915d5333d3.js.map"],"tfa/tfa-mode-selection":["tfa/tfa-mode-selection.e84e19b0be79c26b2a06.js","tfa/tfa-mode-selection.e84e19b0be79c26b2a06.js.map"],"tfa/tfa-password-entry":["tfa/tfa-password-entry.ef2c4000b312d799ab94.js","tfa/tfa-password-entry.ef2c4000b312d799ab94.js.map"],"tokens/create":["tokens/create.1752db5cead6a7ea5273.js","tokens/create.1752db5cead6a7ea5273.js.map"],"tokens/list":["tokens/list.9c84d82b677ac313ec85.js","tokens/list.9c84d82b677ac313ec85.js.map"],"vouchers/view":["vouchers/view.cedbc4d21f18db2bf110.js","vouchers/view.cedbc4d21f18db2bf110.js.map"]},"hash":"429f3059e540b2c7cc49","name":"package/package","containerId":"app","headerName":"x-spiferack","publicPath":"https://static.npmjs.com/"}</script><script crossorigin="anonymous" src="https://static.npmjs.com/commons.429f3059e540b2c7cc49.js"></script>
<script crossorigin="anonymous" src="https://static.npmjs.com/minicssextractbug.ca74408b353c740d5d0c.js"></script>
<script crossorigin="anonymous" src="https://static.npmjs.com/package/package.be8e9b4834418a2b9c38.js"></script>
  </body>
</html>
